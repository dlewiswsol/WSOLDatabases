
CREATE PROCEDURE [dbo].[uspIMPORTS_GA_INVOICING_IMPORT]
AS
SET NOCOUNT ON

--  EXECUTE [dbo].[uspIMPORTS_GA_INVOICING_IMPORT]

--  SELECT * FROM WSOL_TB_IMPORTS_GA_INVOICING_1

--	Durations in the data file are in seconds for the previous day (no interval based reporting available).
--  Durations will be processed through a function to generate interval based reporting.

--===================================================================================
DECLARE @TENANT_KEY INT
SET @TENANT_KEY = 900903  --GENERAL ASSEMBLY
--===================================================================================
DELETE FROM WSOL_TB_IMPORT_ERRORS_FOUND
WHERE TENANT_KEY		= @TENANT_KEY
  AND SUB_GROUP_NAME	= 'GENERAL_ASSEMBLY_INVOICING'
  --  SELECT * FROM WSOL_TB_IMPORT_ERRORS_FOUND WHERE TENANT_KEY = 900903
--===================================================================================

--=========================================================================================================
--  USING @WS_ROW_CREATED_TIME FOR ALL INSERTS WILL ALLOW ME TO DELETE SPECIFIC INSERT PROCESSES/FILES.
--  IN CASE OF EMERGENCY, BREAK GLASS.
--=========================================================================================================
DECLARE @WS_ROW_CREATED_TIME AS DATETIME
SET @WS_ROW_CREATED_TIME = dbo.getdate()  --CLOSE ENOUGH TO ACTUAL INSERT TIME!
--===================================================================================

--=============================================================================
--SET EVENT START TIME AND DURATION TO PREPARE FOR PARSING INTO INTERVALS
--=============================================================================
UPDATE WSOL_TB_IMPORTS_GA_INVOICING_1 SET
 EVENT_START_TIME		= CAST(FF2 + ' ' + FF6 AS DATETIME)
,EVENT_DURATION_SECS	= CAST(FF8 AS DECIMAL(10,2))

--=============================================
--DELETE EVENTS WHERE DURATION = 0.00
--=============================================
DELETE FROM WSOL_TB_IMPORTS_GA_INVOICING_1 
WHERE EVENT_DURATION_SECS = 0.00

--=====================================================================================================================
-- PARSE DATA RECORDS INTO INTERVALS
--=====================================================================================================================
DELETE FROM WSOL_TB_IMPORTS_GA_INVOICING_2

DECLARE
 @FF1  VARCHAR(100)
,@FF2  VARCHAR(50)
,@FF3  VARCHAR(50)
,@FF4  VARCHAR(100)
,@FF5  VARCHAR(200) 
,@FF6  VARCHAR(50)
,@FF7  VARCHAR(100) 
,@FF8  VARCHAR(50) 
,@FF9  DATETIME 
,@FF10 DECIMAL(10,2) 
,@FF11 DATETIME
,@FF12 INT
,@FF13 VARCHAR(100)
,@FF14 INT

DECLARE crsT3 CURSOR FOR   
SELECT
 ISNULL(FF1,'')
,ISNULL(FF2,'')
,ISNULL(FF3,'')
,ISNULL(FF4,'')
,ISNULL(FF5,'')
,ISNULL(FF6,'')
,ISNULL(FF7,'')
,ISNULL(FF8,'')
,ISNULL(EVENT_START_TIME,'')
,ISNULL(EVENT_DURATION_SECS,0.00)
,ISNULL(SEQNO_ADDED_TIME,'')
,ISNULL(SEQNO,'0')
,ISNULL(FTP_FILE_NAME,'')
,3600											--<<----- DETERMINES THE INTERVAL, 900 = 15 MIN, 1800 = 30 MIN, 3600 = 60 MIN
FROM WSOL_TB_IMPORTS_GA_INVOICING_1

OPEN crsT3
FETCH NEXT FROM crsT3   INTO @FF1,@FF2,@FF3,@FF4,@FF5,@FF6,@FF7,@FF8,@FF9,@FF10,@FF11,@FF12,@FF13,@FF14

WHILE @@FETCH_STATUS = 0 BEGIN
	 -- SELECT * FROM WSOL_TB_IMPORTS_GA_INVOICING_2 ORDER BY SEQNO
		INSERT INTO WSOL_TB_IMPORTS_GA_INVOICING_2
		SELECT RESULT.*,NULL,NULL
		FROM TVF_GA_STATES_TO_INTERVALS(@FF1,@FF2,@FF3,@FF4,@FF5,@FF6,@FF7,@FF8,@FF9,@FF10,@FF11,@FF12,@FF13,@FF14) RESULT

    FETCH NEXT FROM crsT3   INTO @FF1,@FF2,@FF3,@FF4,@FF5,@FF6,@FF7,@FF8,@FF9,@FF10,@FF11,@FF12,@FF13,@FF14
END
CLOSE crsT3
DEALLOCATE crsT3

-- SELECT * FROM WSOL_TB_IMPORTS_GA_INVOICING_2 ORDER BY SEQNO
--=============================================================================
-- UPDATE CALL COUNTS AND TRANSFER COUNTS
--=============================================================================
UPDATE WSOL_TB_IMPORTS_GA_INVOICING_2 SET
 OUTBOUND_CALLS		=	CASE WHEN FF_AGENT_STATE = 'Busy Outbound' THEN
							CASE WHEN CAST(FF_DATE + ' ' + FF_EVENT_START_TIME AS DATETIME) = EVENT_START_TIME THEN 1
							ELSE 0 END
						ELSE 0 END
,CALLS_TRANSFERRED	=	CASE WHEN FF_AGENT_STATE = 'Call Transferred' THEN
							CASE WHEN CAST(FF_DATE + ' ' + FF_EVENT_START_TIME AS DATETIME) = EVENT_START_TIME THEN 1
							ELSE 0 END
						ELSE 0 END

--=============================================================================
-- GROUP DATA BY INTERVAL
--=============================================================================
DELETE FROM WSOL_TB_IMPORTS_GA_INVOICING_3

INSERT INTO WSOL_TB_IMPORTS_GA_INVOICING_3
(FF_RECORD_ID
,FF_DATE
,FF_AGENT_ID
,FF_AGENT_NAME
,FF_EVENT_KEY
,FF_EVENT_START_TIME
,FF_AGENT_STATE
,FF_EVENT_DURATION
,EVENT_DURATION_SECS
,EVENT_DURATION_IN_INTERVAL_SECS
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,RESOURCE_NAME
,[DATETIME]
,HOUR_INTERVAL
,EMPLOYEE_ID
,STD_TENANT_START_DATE_TIME_KEY
,LOGGED_IN_SECS
,READY_SECS
,READY_FOR_OUTBOUND_SECS
,AWAY_SECS
,AWAY_BREAK_SECS
,AWAY_COMFORT_BREAK_SECS
,BUSY_OUTBOUND_SECS
,BUSY_INTERNAL_SECS
,CALL_TRANSFERRED_SECS
,WRAP_UP_AUTO_SECS
,WRAP_UP_MANUAL_SECS
,LOGGED_OUT_SECS
,EXTENDED_AWAY_SECS
,EXTENDED_AWAY_PAPERWORK_SECS
,EXTENDED_AWAY_LUNCH_SECS
,EXTENDED_AWAY_TRAINING_SECS
,EXTENDED_AWAY_MEETING_SECS
,EXTENDED_AWAY_TEAM_MEETING_SECS
,TOTAL_READY_SECS
,TOTAL_BUSY_SECS
,TOTAL_AWAY_SECS
,TOTAL_WRAP_SECS
,TOTAL_EXTENDED_AWAY_SECS
,OUTBOUND_CALLS
,CALLS_TRANSFERRED
,CPROD
,MINIMUM_GUARANTEE
,AUTHORIZED_SECS
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_MINUTES
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 W2.FF_RECORD_ID
,W2.FF_DATE
,W2.FF_AGENT_ID
,W2.FF_AGENT_NAME
,W2.FF_EVENT_KEY
,W2.FF_EVENT_START_TIME
,W2.FF_AGENT_STATE
,W2.FF_EVENT_DURATION
,SUM(ISNULL(W2.EVENT_DURATION_SECS				,0.00))
,SUM(ISNULL(W2.EVENT_DURATION_IN_INTERVAL_SECS	,0.00))
,MAX(W2.SEQNO_ADDED_TIME)
,MIN(W2.SEQNO)
,W2.FTP_FILE_NAME

,NULL									--AS RESOURCE_NAME
,W2.INTERVAL_START_TIME					--AS DATETIME
,NULL									--AS HOUR_INTERVAL
,NULL									--AS EMPLOYEE_ID
,NULL									--AS STD_TENANT_START_TIME
,NULL									--AS LOGGED_IN_SECS
,NULL									--AS READY_SECS
,NULL									--AS READY_FOR_OUTBOUND_SECS
,NULL									--AS AWAY_SECS
,NULL									--AS AWAY_BREAK_SECS
,NULL									--AS AWAY_COMFORT_BREAK_SECS
,NULL									--AS BUSY_OUTBOUND_SECS
,NULL									--AS BUSY_INTERNAL_SECS
,NULL									--AS CALL_TRANSFERRED_SECS
,NULL									--AS WRAP_UP_AUTO_SECS
,NULL									--AS WRAP_UP_MANUAL_SECS
,NULL									--AS LOGGED_OUT_SECS
,NULL									--AS EXTENDED_AWAY_SECS
,NULL									--AS EXTENDED_AWAY_PAPERWORK_SECS
,NULL									--AS EXTENDED_AWAY_LUNCH_SECS
,NULL									--AS EXTENDED_AWAY_TRAINING_SECS
,NULL									--AS EXTENDED_AWAY_MEETING_SECS
,NULL									--AS EXTENDED_AWAY_TEAM_MEETING_SECS
,NULL									--AS TOTAL_READY_SECS
,NULL									--AS TOTAL_BUSY_SECS
,NULL									--AS TOTAL_AWAY_SECS
,NULL									--AS TOTAL_WRAP_SECS
,NULL									--AS TOTAL_EXTENDED_AWAY_SECS
,SUM(ISNULL(W2.OUTBOUND_CALLS	,0))	--AS OUTBOUND_CALLS
,SUM(ISNULL(W2.CALLS_TRANSFERRED,0))	--AS CALLS_TRANSFERRED
,NULL									--AS CPROD
,NULL									--AS MINIMUM_GUARANTEE
,NULL									--AS AUTHORIZED_SECS
,NULL									--AS EMAIL
,NULL									--AS ID_EXT
,NULL									--AS SCHEDULER_ACL_NAME
,NULL									--AS CAL_DATE
,900903									--AS TENANT_KEY
,NULL									--AS AIR_DAY_TYPE
,NULL									--AS AIR_ACW_FONT_COLOR
,NULL									--AS MIN_GUARANTEE_MINUTES
,NULL									--AS MIN_GUARANTEE_TYPE
,NULL									--AS AUTHORIZED_TO_INVOICE_TYPE
,NULL									--AS HAS_HOLIDAYS
,NULL									--AS INCLUDE_IN_CAS
,NULL									--AS READY_FOR_XML
,NULL									--AS SHOW_ID_EXTS
,NULL									--AS INVOICE_ID

,@WS_ROW_CREATED_TIME					--[WS_ROW_CREATED_TIME] [datetime] NOT NULL,
,NULL									 --[WS_ROW_UPDATED_TIME] [datetime] NULL,

FROM            WSOL_TB_IMPORTS_GA_INVOICING_2  W2

GROUP BY
 W2.FF_RECORD_ID
,W2.FF_DATE
,W2.FF_AGENT_ID
,W2.FF_AGENT_NAME
,W2.FF_EVENT_KEY
,W2.FF_EVENT_START_TIME
,W2.FF_AGENT_STATE
,W2.FF_EVENT_DURATION
,W2.FTP_FILE_NAME
,W2.INTERVAL_START_TIME

ORDER BY
 MIN(W2.SEQNO)

--=================================================================================================
-- CONVERT DATETIME FROM EASTERN TIME TO CENTRAL TIME
--=================================================================================================
UPDATE WSOL_TB_IMPORTS_GA_INVOICING_3 SET
 [DATETIME] = DATEADD(hh,-1, [DATETIME])

-- SELECT * FROM WSOL_TB_IMPORTS_GA_INVOICING_3 ORDER BY SEQNO
--===================================================================================
--POPULATE ADDITIONAL FIELDS IN WORK (_3) TABLE THAT WEREN'T IN IMPORTED FILE:
--===================================================================================
UPDATE WSOL_TB_IMPORTS_GA_INVOICING_3 SET
 RESOURCE_NAME	=	ISNULL(FF_AGENT_NAME,'')
,EMPLOYEE_ID	=	ISNULL(FF_AGENT_ID,'')
,HOUR_INTERVAL	=	DATEPART(HH, [DATETIME])

,READY_SECS							=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Ready'				THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,READY_FOR_OUTBOUND_SECS			=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Ready for Outbound'	THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,AWAY_SECS							=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Away'					THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,AWAY_BREAK_SECS					=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Break'				THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,AWAY_COMFORT_BREAK_SECS			=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Away (ComfortBreak)'	THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,BUSY_OUTBOUND_SECS					=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Busy Outbound'		THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,BUSY_INTERNAL_SECS					=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Busy Internal'		THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END										
,CALL_TRANSFERRED_SECS				=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Call Transferred'		THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,WRAP_UP_AUTO_SECS					=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Wrap Up (Auto)'		THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,WRAP_UP_MANUAL_SECS				=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Wrap Up (Manual)'		THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,LOGGED_OUT_SECS					=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Logged Out'			THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,EXTENDED_AWAY_SECS					=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Extended Away'		THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,EXTENDED_AWAY_PAPERWORK_SECS		=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Extended Away (Paperwork)'	THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,EXTENDED_AWAY_LUNCH_SECS			=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Extended Away (Lunch)'		THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,EXTENDED_AWAY_TRAINING_SECS		=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Extended Away (Training)'		THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,EXTENDED_AWAY_MEETING_SECS			=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Extended Away (Meeting)'		THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END
,EXTENDED_AWAY_TEAM_MEETING_SECS	=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,'')))  = 'Extended Away (TeamMeeting)'	THEN CAST (ISNULL(EVENT_DURATION_IN_INTERVAL_SECS,0.00) AS DECIMAL(10,2)) 
										ELSE 0.00 END

--===================================================================================================
-- UPDATE DATETIME KEY
--===================================================================================================
UPDATE WSOL_TB_IMPORTS_GA_INVOICING_3 SET
 STD_TENANT_START_DATE_TIME_KEY = DT.DATE_TIME_KEY
FROM		WSOL_TB_IMPORTS_GA_INVOICING_3	I
INNER JOIN	DATE_TIME						DT	ON DT.CAL_DATE = I.[DATETIME]

--===============================================
-- GENERATE ANY ENGINEERED VALUES
--===============================================
UPDATE WSOL_TB_IMPORTS_GA_INVOICING_3 SET
 TOTAL_READY_SECS			=	READY_SECS + READY_FOR_OUTBOUND_SECS
,TOTAL_BUSY_SECS			=	BUSY_OUTBOUND_SECS + BUSY_INTERNAL_SECS
,TOTAL_AWAY_SECS			=	AWAY_SECS + AWAY_BREAK_SECS + AWAY_COMFORT_BREAK_SECS
,TOTAL_WRAP_SECS			=	WRAP_UP_AUTO_SECS + WRAP_UP_MANUAL_SECS
,TOTAL_EXTENDED_AWAY_SECS	=	EXTENDED_AWAY_SECS + EXTENDED_AWAY_PAPERWORK_SECS + EXTENDED_AWAY_LUNCH_SECS +
								EXTENDED_AWAY_TRAINING_SECS + EXTENDED_AWAY_MEETING_SECS + EXTENDED_AWAY_TEAM_MEETING_SECS
,CALLS_TRANSFERRED			=	CASE WHEN LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,''))) = 'Call Transferred' THEN 1 ELSE 0 END

--===============================================
--REMOVE LOGGED OUT RECORDS:
--===============================================
INSERT INTO WSOL_TB_IMPORTS_GA_INVOICING_BAD
(
BAD_IMPORTS_CODE
,BAD_IMPORTS_FILE_TYPE
,FF_RECORD_ID
,FF_DATE
,FF_AGENT_ID
,FF_AGENT_NAME
,FF_EVENT_KEY
,FF_EVENT_START_TIME
,FF_AGENT_STATE
,FF_EVENT_DURATION
,EVENT_DURATION_SECS
,EVENT_DURATION_IN_INTERVAL_SECS
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,RESOURCE_NAME
,[DATETIME]
,HOUR_INTERVAL
,EMPLOYEE_ID
,STD_TENANT_START_DATE_TIME_KEY
,LOGGED_IN_SECS
,READY_SECS
,READY_FOR_OUTBOUND_SECS
,AWAY_SECS
,AWAY_BREAK_SECS
,AWAY_COMFORT_BREAK_SECS
,BUSY_OUTBOUND_SECS
,BUSY_INTERNAL_SECS
,CALL_TRANSFERRED_SECS
,WRAP_UP_AUTO_SECS
,WRAP_UP_MANUAL_SECS
,LOGGED_OUT_SECS
,EXTENDED_AWAY_SECS
,EXTENDED_AWAY_PAPERWORK_SECS
,EXTENDED_AWAY_LUNCH_SECS
,EXTENDED_AWAY_TRAINING_SECS
,EXTENDED_AWAY_MEETING_SECS
,EXTENDED_AWAY_TEAM_MEETING_SECS
,TOTAL_READY_SECS
,TOTAL_BUSY_SECS
,TOTAL_AWAY_SECS
,TOTAL_WRAP_SECS
,TOTAL_EXTENDED_AWAY_SECS
,OUTBOUND_CALLS
,CALLS_TRANSFERRED
,CPROD
,MINIMUM_GUARANTEE
,AUTHORIZED_SECS
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 'LOS'					--BAD_IMPORTS_CODE		--'Logged Out State'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE	--'ACT'IVITY FILE
--,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W3.FF_RECORD_ID
,W3.FF_DATE
,W3.FF_AGENT_ID
,W3.FF_AGENT_NAME
,W3.FF_EVENT_KEY
,W3.FF_EVENT_START_TIME
,W3.FF_AGENT_STATE
,W3.FF_EVENT_DURATION
,W3.EVENT_DURATION_SECS
,W3.EVENT_DURATION_IN_INTERVAL_SECS
,W3.SEQNO_ADDED_TIME
,W3.SEQNO
,W3.FTP_FILE_NAME
,W3.RESOURCE_NAME
,W3.[DATETIME]
,W3.HOUR_INTERVAL
,W3.EMPLOYEE_ID
,W3.STD_TENANT_START_DATE_TIME_KEY
,W3.LOGGED_IN_SECS
,W3.READY_SECS
,W3.READY_FOR_OUTBOUND_SECS
,W3.AWAY_SECS
,W3.AWAY_BREAK_SECS
,W3.AWAY_COMFORT_BREAK_SECS
,W3.BUSY_OUTBOUND_SECS
,W3.BUSY_INTERNAL_SECS
,W3.CALL_TRANSFERRED_SECS
,W3.WRAP_UP_AUTO_SECS
,W3.WRAP_UP_MANUAL_SECS
,W3.LOGGED_OUT_SECS
,W3.EXTENDED_AWAY_SECS
,W3.EXTENDED_AWAY_PAPERWORK_SECS
,W3.EXTENDED_AWAY_LUNCH_SECS
,W3.EXTENDED_AWAY_TRAINING_SECS
,W3.EXTENDED_AWAY_MEETING_SECS
,W3.EXTENDED_AWAY_TEAM_MEETING_SECS
,W3.TOTAL_READY_SECS
,W3.TOTAL_BUSY_SECS
,W3.TOTAL_AWAY_SECS
,W3.TOTAL_WRAP_SECS
,W3.TOTAL_EXTENDED_AWAY_SECS
,W3.OUTBOUND_CALLS
,W3.CALLS_TRANSFERRED
,W3.CPROD
,W3.MINIMUM_GUARANTEE
,W3.AUTHORIZED_SECS
,W3.EMAIL
,W3.ID_EXT
,W3.SCHEDULER_ACL_NAME
,W3.CAL_DATE
,W3.TENANT_KEY
,W3.AIR_DAY_TYPE
,W3.AIR_ACW_FONT_COLOR
,W3.MIN_GUARANTEE_MINUTES
,W3.MIN_GUARANTEE_TYPE
,W3.AUTHORIZED_TO_INVOICE_TYPE
,W3.HAS_HOLIDAYS
,W3.INCLUDE_IN_CAS
,W3.READY_FOR_XML
,W3.SHOW_ID_EXTS
,W3.INVOICE_ID
,W3.WS_ROW_CREATED_TIME
,W3.WS_ROW_UPDATED_TIME

FROM           WSOL_TB_IMPORTS_GA_INVOICING_3    W3
WHERE LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,''))) = 'Logged Out'

--======================================================================
--DELETE LOGGED OUT RECORDS;
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_GA_INVOICING_3
WHERE LTRIM(RTRIM(ISNULL(FF_AGENT_STATE,''))) = 'Logged Out'
--======================================================================

--===============================================
--HANDLE INVALID DATE/TIME RECORDS:
--===============================================
INSERT INTO WSOL_TB_IMPORTS_GA_INVOICING_BAD
(
BAD_IMPORTS_CODE
,BAD_IMPORTS_FILE_TYPE
,FF_RECORD_ID
,FF_DATE
,FF_AGENT_ID
,FF_AGENT_NAME
,FF_EVENT_KEY
,FF_EVENT_START_TIME
,FF_AGENT_STATE
,FF_EVENT_DURATION
,EVENT_DURATION_SECS
,EVENT_DURATION_IN_INTERVAL_SECS
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,RESOURCE_NAME
,[DATETIME]
,HOUR_INTERVAL
,EMPLOYEE_ID
,STD_TENANT_START_DATE_TIME_KEY
,LOGGED_IN_SECS
,READY_SECS
,READY_FOR_OUTBOUND_SECS
,AWAY_SECS
,AWAY_BREAK_SECS
,AWAY_COMFORT_BREAK_SECS
,BUSY_OUTBOUND_SECS
,BUSY_INTERNAL_SECS
,CALL_TRANSFERRED_SECS
,WRAP_UP_AUTO_SECS
,WRAP_UP_MANUAL_SECS
,LOGGED_OUT_SECS
,EXTENDED_AWAY_SECS
,EXTENDED_AWAY_PAPERWORK_SECS
,EXTENDED_AWAY_LUNCH_SECS
,EXTENDED_AWAY_TRAINING_SECS
,EXTENDED_AWAY_MEETING_SECS
,EXTENDED_AWAY_TEAM_MEETING_SECS
,TOTAL_READY_SECS
,TOTAL_BUSY_SECS
,TOTAL_AWAY_SECS
,TOTAL_WRAP_SECS
,TOTAL_EXTENDED_AWAY_SECS
,OUTBOUND_CALLS
,CALLS_TRANSFERRED
,CPROD
,MINIMUM_GUARANTEE
,AUTHORIZED_SECS
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 'DTM'					--BAD_IMPORTS_CODE		--'Invalid DateTime'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE	--'ACT'IVITY FILE
--,@WS_ROW_CREATED_TIME --WS_ROW_CREATED_TIME
,W3.FF_RECORD_ID
,W3.FF_DATE
,W3.FF_AGENT_ID
,W3.FF_AGENT_NAME
,W3.FF_EVENT_KEY
,W3.FF_EVENT_START_TIME
,W3.FF_AGENT_STATE
,W3.FF_EVENT_DURATION
,W3.EVENT_DURATION_SECS
,W3.EVENT_DURATION_IN_INTERVAL_SECS
,W3.SEQNO_ADDED_TIME
,W3.SEQNO
,W3.FTP_FILE_NAME
,W3.RESOURCE_NAME
,W3.[DATETIME]
,W3.HOUR_INTERVAL
,W3.EMPLOYEE_ID
,W3.STD_TENANT_START_DATE_TIME_KEY
,W3.LOGGED_IN_SECS
,W3.READY_SECS
,W3.READY_FOR_OUTBOUND_SECS
,W3.AWAY_SECS
,W3.AWAY_BREAK_SECS
,W3.AWAY_COMFORT_BREAK_SECS
,W3.BUSY_OUTBOUND_SECS
,W3.BUSY_INTERNAL_SECS
,W3.CALL_TRANSFERRED_SECS
,W3.WRAP_UP_AUTO_SECS
,W3.WRAP_UP_MANUAL_SECS
,W3.LOGGED_OUT_SECS
,W3.EXTENDED_AWAY_SECS
,W3.EXTENDED_AWAY_PAPERWORK_SECS
,W3.EXTENDED_AWAY_LUNCH_SECS
,W3.EXTENDED_AWAY_TRAINING_SECS
,W3.EXTENDED_AWAY_MEETING_SECS
,W3.EXTENDED_AWAY_TEAM_MEETING_SECS
,W3.TOTAL_READY_SECS
,W3.TOTAL_BUSY_SECS
,W3.TOTAL_AWAY_SECS
,W3.TOTAL_WRAP_SECS
,W3.TOTAL_EXTENDED_AWAY_SECS
,W3.OUTBOUND_CALLS
,W3.CALLS_TRANSFERRED
,W3.CPROD
,W3.MINIMUM_GUARANTEE
,W3.AUTHORIZED_SECS
,W3.EMAIL
,W3.ID_EXT
,W3.SCHEDULER_ACL_NAME
,W3.CAL_DATE
,W3.TENANT_KEY
,W3.AIR_DAY_TYPE
,W3.AIR_ACW_FONT_COLOR
,W3.MIN_GUARANTEE_MINUTES
,W3.MIN_GUARANTEE_TYPE
,W3.AUTHORIZED_TO_INVOICE_TYPE
,W3.HAS_HOLIDAYS
,W3.INCLUDE_IN_CAS
,W3.READY_FOR_XML
,W3.SHOW_ID_EXTS
,W3.INVOICE_ID
,W3.WS_ROW_CREATED_TIME
,W3.WS_ROW_UPDATED_TIME

FROM           WSOL_TB_IMPORTS_GA_INVOICING_3    W3
WHERE ISNULL(W3.STD_TENANT_START_DATE_TIME_KEY,0) = 0

--======================================================================
--DELETE INVALID DATE/TIME RECORDS;
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_GA_INVOICING_3
WHERE ISNULL(STD_TENANT_START_DATE_TIME_KEY,0) = 0
--======================================================================

--======================================================================
--REMOVE RECORDS OUTSIDE OF WORK HOURS ON 01/09/2017 (08:00 - 14:00)
--======================================================================
INSERT INTO WSOL_TB_IMPORTS_GA_INVOICING_BAD
(
BAD_IMPORTS_CODE
,BAD_IMPORTS_FILE_TYPE
,FF_RECORD_ID
,FF_DATE
,FF_AGENT_ID
,FF_AGENT_NAME
,FF_EVENT_KEY
,FF_EVENT_START_TIME
,FF_AGENT_STATE
,FF_EVENT_DURATION
,EVENT_DURATION_SECS
,EVENT_DURATION_IN_INTERVAL_SECS
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,RESOURCE_NAME
,[DATETIME]
,HOUR_INTERVAL
,EMPLOYEE_ID
,STD_TENANT_START_DATE_TIME_KEY
,LOGGED_IN_SECS
,READY_SECS
,READY_FOR_OUTBOUND_SECS
,AWAY_SECS
,AWAY_BREAK_SECS
,AWAY_COMFORT_BREAK_SECS
,BUSY_OUTBOUND_SECS
,BUSY_INTERNAL_SECS
,CALL_TRANSFERRED_SECS
,WRAP_UP_AUTO_SECS
,WRAP_UP_MANUAL_SECS
,LOGGED_OUT_SECS
,EXTENDED_AWAY_SECS
,EXTENDED_AWAY_PAPERWORK_SECS
,EXTENDED_AWAY_LUNCH_SECS
,EXTENDED_AWAY_TRAINING_SECS
,EXTENDED_AWAY_MEETING_SECS
,EXTENDED_AWAY_TEAM_MEETING_SECS
,TOTAL_READY_SECS
,TOTAL_BUSY_SECS
,TOTAL_AWAY_SECS
,TOTAL_WRAP_SECS
,TOTAL_EXTENDED_AWAY_SECS
,OUTBOUND_CALLS
,CALLS_TRANSFERRED
,CPROD
,MINIMUM_GUARANTEE
,AUTHORIZED_SECS
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 'OWH'					--BAD_IMPORTS_CODE		--'Outside Work Hours'
,'ACT'					--BAD_IMPORTS_FILE_TYPE	--'ACT'IVITY FILE
--,@WS_ROW_CREATED_TIME	--WS_ROW_CREATED_TIME
,W3.FF_RECORD_ID
,W3.FF_DATE
,W3.FF_AGENT_ID
,W3.FF_AGENT_NAME
,W3.FF_EVENT_KEY
,W3.FF_EVENT_START_TIME
,W3.FF_AGENT_STATE
,W3.FF_EVENT_DURATION
,W3.EVENT_DURATION_SECS
,W3.EVENT_DURATION_IN_INTERVAL_SECS
,W3.SEQNO_ADDED_TIME
,W3.SEQNO
,W3.FTP_FILE_NAME
,W3.RESOURCE_NAME
,W3.[DATETIME]
,W3.HOUR_INTERVAL
,W3.EMPLOYEE_ID
,W3.STD_TENANT_START_DATE_TIME_KEY
,W3.LOGGED_IN_SECS
,W3.READY_SECS
,W3.READY_FOR_OUTBOUND_SECS
,W3.AWAY_SECS
,W3.AWAY_BREAK_SECS
,W3.AWAY_COMFORT_BREAK_SECS
,W3.BUSY_OUTBOUND_SECS
,W3.BUSY_INTERNAL_SECS
,W3.CALL_TRANSFERRED_SECS
,W3.WRAP_UP_AUTO_SECS
,W3.WRAP_UP_MANUAL_SECS
,W3.LOGGED_OUT_SECS
,W3.EXTENDED_AWAY_SECS
,W3.EXTENDED_AWAY_PAPERWORK_SECS
,W3.EXTENDED_AWAY_LUNCH_SECS
,W3.EXTENDED_AWAY_TRAINING_SECS
,W3.EXTENDED_AWAY_MEETING_SECS
,W3.EXTENDED_AWAY_TEAM_MEETING_SECS
,W3.TOTAL_READY_SECS
,W3.TOTAL_BUSY_SECS
,W3.TOTAL_AWAY_SECS
,W3.TOTAL_WRAP_SECS
,W3.TOTAL_EXTENDED_AWAY_SECS
,W3.OUTBOUND_CALLS
,W3.CALLS_TRANSFERRED
,W3.CPROD
,W3.MINIMUM_GUARANTEE
,W3.AUTHORIZED_SECS
,W3.EMAIL
,W3.ID_EXT
,W3.SCHEDULER_ACL_NAME
,W3.CAL_DATE
,W3.TENANT_KEY
,W3.AIR_DAY_TYPE
,W3.AIR_ACW_FONT_COLOR
,W3.MIN_GUARANTEE_MINUTES
,W3.MIN_GUARANTEE_TYPE
,W3.AUTHORIZED_TO_INVOICE_TYPE
,W3.HAS_HOLIDAYS
,W3.INCLUDE_IN_CAS
,W3.READY_FOR_XML
,W3.SHOW_ID_EXTS
,W3.INVOICE_ID
,W3.WS_ROW_CREATED_TIME
,W3.WS_ROW_UPDATED_TIME

FROM		   WSOL_TB_IMPORTS_GA_INVOICING_3	 W3
WHERE W3.FF_DATE = '1/9/2017'
  AND
	( W3.HOUR_INTERVAL < 8
	  OR
	  W3.HOUR_INTERVAL > 14
	)
--======================================================================
--DELETE RECORDS OUTSIDE OF WORK HOURS ON 01/09/2017 (08:00 - 14:00)
--======================================================================
DELETE
FROM WSOL_TB_IMPORTS_GA_INVOICING_3
WHERE FF_DATE = '1/9/2017'
  AND
	( HOUR_INTERVAL < 8
	  OR
	  HOUR_INTERVAL > 14
	)
--======================================================================

--======================================================================
--REMOVE RECORDS OUTSIDE OF WORK HOURS (08:00 - 21:00)
--======================================================================
INSERT INTO WSOL_TB_IMPORTS_GA_INVOICING_BAD
(
BAD_IMPORTS_CODE
,BAD_IMPORTS_FILE_TYPE
,FF_RECORD_ID
,FF_DATE
,FF_AGENT_ID
,FF_AGENT_NAME
,FF_EVENT_KEY
,FF_EVENT_START_TIME
,FF_AGENT_STATE
,FF_EVENT_DURATION
,EVENT_DURATION_SECS
,EVENT_DURATION_IN_INTERVAL_SECS
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,RESOURCE_NAME
,[DATETIME]
,HOUR_INTERVAL
,EMPLOYEE_ID
,STD_TENANT_START_DATE_TIME_KEY
,LOGGED_IN_SECS
,READY_SECS
,READY_FOR_OUTBOUND_SECS
,AWAY_SECS
,AWAY_BREAK_SECS
,AWAY_COMFORT_BREAK_SECS
,BUSY_OUTBOUND_SECS
,BUSY_INTERNAL_SECS
,CALL_TRANSFERRED_SECS
,WRAP_UP_AUTO_SECS
,WRAP_UP_MANUAL_SECS
,LOGGED_OUT_SECS
,EXTENDED_AWAY_SECS
,EXTENDED_AWAY_PAPERWORK_SECS
,EXTENDED_AWAY_LUNCH_SECS
,EXTENDED_AWAY_TRAINING_SECS
,EXTENDED_AWAY_MEETING_SECS
,EXTENDED_AWAY_TEAM_MEETING_SECS
,TOTAL_READY_SECS
,TOTAL_BUSY_SECS
,TOTAL_AWAY_SECS
,TOTAL_WRAP_SECS
,TOTAL_EXTENDED_AWAY_SECS
,OUTBOUND_CALLS
,CALLS_TRANSFERRED
,CPROD
,MINIMUM_GUARANTEE
,AUTHORIZED_SECS
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 'OWH'					--BAD_IMPORTS_CODE		--'Outside Work Hours'
,'ACT'					--BAD_IMPORTS_FILE_TYPE	--'ACT'IVITY FILE
--,@WS_ROW_CREATED_TIME	--WS_ROW_CREATED_TIME
,W3.FF_RECORD_ID
,W3.FF_DATE
,W3.FF_AGENT_ID
,W3.FF_AGENT_NAME
,W3.FF_EVENT_KEY
,W3.FF_EVENT_START_TIME
,W3.FF_AGENT_STATE
,W3.FF_EVENT_DURATION
,W3.EVENT_DURATION_SECS
,W3.EVENT_DURATION_IN_INTERVAL_SECS
,W3.SEQNO_ADDED_TIME
,W3.SEQNO
,W3.FTP_FILE_NAME
,W3.RESOURCE_NAME
,W3.[DATETIME]
,W3.HOUR_INTERVAL
,W3.EMPLOYEE_ID
,W3.STD_TENANT_START_DATE_TIME_KEY
,W3.LOGGED_IN_SECS
,W3.READY_SECS
,W3.READY_FOR_OUTBOUND_SECS
,W3.AWAY_SECS
,W3.AWAY_BREAK_SECS
,W3.AWAY_COMFORT_BREAK_SECS
,W3.BUSY_OUTBOUND_SECS
,W3.BUSY_INTERNAL_SECS
,W3.CALL_TRANSFERRED_SECS
,W3.WRAP_UP_AUTO_SECS
,W3.WRAP_UP_MANUAL_SECS
,W3.LOGGED_OUT_SECS
,W3.EXTENDED_AWAY_SECS
,W3.EXTENDED_AWAY_PAPERWORK_SECS
,W3.EXTENDED_AWAY_LUNCH_SECS
,W3.EXTENDED_AWAY_TRAINING_SECS
,W3.EXTENDED_AWAY_MEETING_SECS
,W3.EXTENDED_AWAY_TEAM_MEETING_SECS
,W3.TOTAL_READY_SECS
,W3.TOTAL_BUSY_SECS
,W3.TOTAL_AWAY_SECS
,W3.TOTAL_WRAP_SECS
,W3.TOTAL_EXTENDED_AWAY_SECS
,W3.OUTBOUND_CALLS
,W3.CALLS_TRANSFERRED
,W3.CPROD
,W3.MINIMUM_GUARANTEE
,W3.AUTHORIZED_SECS
,W3.EMAIL
,W3.ID_EXT
,W3.SCHEDULER_ACL_NAME
,W3.CAL_DATE
,W3.TENANT_KEY
,W3.AIR_DAY_TYPE
,W3.AIR_ACW_FONT_COLOR
,W3.MIN_GUARANTEE_MINUTES
,W3.MIN_GUARANTEE_TYPE
,W3.AUTHORIZED_TO_INVOICE_TYPE
,W3.HAS_HOLIDAYS
,W3.INCLUDE_IN_CAS
,W3.READY_FOR_XML
,W3.SHOW_ID_EXTS
,W3.INVOICE_ID
,W3.WS_ROW_CREATED_TIME
,W3.WS_ROW_UPDATED_TIME

FROM		   WSOL_TB_IMPORTS_GA_INVOICING_3	 W3
WHERE W3.FF_DATE <> '1/9/2017'
  AND
	( W3.HOUR_INTERVAL < 8
	  OR
	  W3.HOUR_INTERVAL > 21
	)
--======================================================================
--DELETE RECORDS OUTSIDE OF WORK HOURS (08:00 - 21:00)
--======================================================================
DELETE
FROM WSOL_TB_IMPORTS_GA_INVOICING_3
WHERE FF_DATE <> '1/9/2017'
  AND
	( HOUR_INTERVAL < 8
	  OR
	  HOUR_INTERVAL > 21
	)
--======================================================================

--===========================================================================================================
--HANDLE DUPLICATES:
--===========================================================================================================
INSERT INTO WSOL_TB_IMPORTS_GA_INVOICING_BAD
(
BAD_IMPORTS_CODE
,BAD_IMPORTS_FILE_TYPE
,FF_RECORD_ID
,FF_DATE
,FF_AGENT_ID
,FF_AGENT_NAME
,FF_EVENT_KEY
,FF_EVENT_START_TIME
,FF_AGENT_STATE
,FF_EVENT_DURATION
,EVENT_DURATION_SECS
,EVENT_DURATION_IN_INTERVAL_SECS
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,RESOURCE_NAME
,[DATETIME]
,HOUR_INTERVAL
,EMPLOYEE_ID
,STD_TENANT_START_DATE_TIME_KEY
,LOGGED_IN_SECS
,READY_SECS
,READY_FOR_OUTBOUND_SECS
,AWAY_SECS
,AWAY_BREAK_SECS
,AWAY_COMFORT_BREAK_SECS
,BUSY_OUTBOUND_SECS
,BUSY_INTERNAL_SECS
,CALL_TRANSFERRED_SECS
,WRAP_UP_AUTO_SECS
,WRAP_UP_MANUAL_SECS
,LOGGED_OUT_SECS
,EXTENDED_AWAY_SECS
,EXTENDED_AWAY_PAPERWORK_SECS
,EXTENDED_AWAY_LUNCH_SECS
,EXTENDED_AWAY_TRAINING_SECS
,EXTENDED_AWAY_MEETING_SECS
,EXTENDED_AWAY_TEAM_MEETING_SECS
,TOTAL_READY_SECS
,TOTAL_BUSY_SECS
,TOTAL_AWAY_SECS
,TOTAL_WRAP_SECS
,TOTAL_EXTENDED_AWAY_SECS
,OUTBOUND_CALLS
,CALLS_TRANSFERRED
,CPROD
,MINIMUM_GUARANTEE
,AUTHORIZED_SECS
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 'DUP'					--BAD_IMPORTS_CODE		--'DUPLICATE'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE --'ACT'IVITY FILE
--,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W3.FF_RECORD_ID
,W3.FF_DATE
,W3.FF_AGENT_ID
,W3.FF_AGENT_NAME
,W3.FF_EVENT_KEY
,W3.FF_EVENT_START_TIME
,W3.FF_AGENT_STATE
,W3.FF_EVENT_DURATION
,W3.EVENT_DURATION_SECS
,W3.EVENT_DURATION_IN_INTERVAL_SECS
,W3.SEQNO_ADDED_TIME
,W3.SEQNO
,W3.FTP_FILE_NAME
,W3.RESOURCE_NAME
,W3.[DATETIME]
,W3.HOUR_INTERVAL
,W3.EMPLOYEE_ID
,W3.STD_TENANT_START_DATE_TIME_KEY
,W3.LOGGED_IN_SECS
,W3.READY_SECS
,W3.READY_FOR_OUTBOUND_SECS
,W3.AWAY_SECS
,W3.AWAY_BREAK_SECS
,W3.AWAY_COMFORT_BREAK_SECS
,W3.BUSY_OUTBOUND_SECS
,W3.BUSY_INTERNAL_SECS
,W3.CALL_TRANSFERRED_SECS
,W3.WRAP_UP_AUTO_SECS
,W3.WRAP_UP_MANUAL_SECS
,W3.LOGGED_OUT_SECS
,W3.EXTENDED_AWAY_SECS
,W3.EXTENDED_AWAY_PAPERWORK_SECS
,W3.EXTENDED_AWAY_LUNCH_SECS
,W3.EXTENDED_AWAY_TRAINING_SECS
,W3.EXTENDED_AWAY_MEETING_SECS
,W3.EXTENDED_AWAY_TEAM_MEETING_SECS
,W3.TOTAL_READY_SECS
,W3.TOTAL_BUSY_SECS
,W3.TOTAL_AWAY_SECS
,W3.TOTAL_WRAP_SECS
,W3.TOTAL_EXTENDED_AWAY_SECS
,W3.OUTBOUND_CALLS
,W3.CALLS_TRANSFERRED
,W3.CPROD
,W3.MINIMUM_GUARANTEE
,W3.AUTHORIZED_SECS
,W3.EMAIL
,W3.ID_EXT
,W3.SCHEDULER_ACL_NAME
,W3.CAL_DATE
,W3.TENANT_KEY
,W3.AIR_DAY_TYPE
,W3.AIR_ACW_FONT_COLOR
,W3.MIN_GUARANTEE_MINUTES
,W3.MIN_GUARANTEE_TYPE
,W3.AUTHORIZED_TO_INVOICE_TYPE
,W3.HAS_HOLIDAYS
,W3.INCLUDE_IN_CAS
,W3.READY_FOR_XML
,W3.SHOW_ID_EXTS
,W3.INVOICE_ID
,W3.WS_ROW_CREATED_TIME
,W3.WS_ROW_UPDATED_TIME

FROM
(	SELECT
	 [DATETIME]
	,FF_AGENT_ID
	,FF_AGENT_STATE
	,FF_EVENT_START_TIME
	,ROW_NUMBER() over (partition by [DATETIME], FF_AGENT_ID, FF_AGENT_STATE, FF_EVENT_START_TIME
                            order by [DATETIME], FF_AGENT_ID, FF_AGENT_STATE, FF_EVENT_START_TIME, READY_SECS DESC) ROWNO
	FROM WSOL_TB_IMPORTS_GA_INVOICING_3
) TNM
LEFT JOIN      WSOL_TB_IMPORTS_GA_INVOICING_3	W3   ON W3.[DATETIME]			= TNM.[DATETIME]
													AND W3.FF_AGENT_ID			= TNM.FF_AGENT_ID
													AND W3.FF_AGENT_STATE		= TNM.FF_AGENT_STATE
													AND W3.FF_EVENT_START_TIME	= TNM.FF_EVENT_START_TIME
WHERE TNM.ROWNO > 1

--===========================================================================================================
--DELETE DUPLICATES:
--===========================================================================================================
DELETE FROM TNM
FROM
(	SELECT
	 [DATETIME]
	,FF_AGENT_ID
	,FF_AGENT_STATE
	,FF_EVENT_START_TIME
	,ROW_NUMBER() over (partition by [DATETIME], FF_AGENT_ID, FF_AGENT_STATE, FF_EVENT_START_TIME
                            order by [DATETIME], FF_AGENT_ID, FF_AGENT_STATE, FF_EVENT_START_TIME, READY_SECS DESC) ROWNO
	FROM WSOL_TB_IMPORTS_GA_INVOICING_3
) TNM
WHERE TNM.ROWNO > 1
--===========================================================================================================

-- SELECT * FROM WSOL_TB_IMPORTS_GA_INVOICING_3 ORDER BY SEQNO
--===========================================================================================================
--UPDATE FIELDS FROM MAPPING DATA AND ADDITIONAL INVOICE FIELDS
--===========================================================================================================
UPDATE WSOL_TB_IMPORTS_GA_INVOICING_3 SET
  EMAIL			= ISNULL(IAM.EMAIL,'')
 ,ID_EXT		= CASE WHEN IAM.INVOICE_GROUP = 'Resource' THEN 'GAR'
					   WHEN IAM.INVOICE_GROUP = ''		   THEN 'GAS'
					   ELSE '' END
 FROM            WSOL_TB_IMPORTS_GA_INVOICING_3			I
 LEFT JOIN       WSOL_TB_IMPORTS_GA_AIA_AGENT_MAPPING	IAM  ON IAM.INVOICE_MAP_KEY = I.FF_AGENT_ID

--SELECT * FROM WSOL_TB_IMPORTS_GA_AIA_AGENT_MAPPING

UPDATE WSOL_TB_IMPORTS_GA_INVOICING_3 SET	-- SELECT
  AIR_DAY_TYPE = CASE WHEN IG.HAS_HOLIDAYS = 'Y' AND
						 (    ISNULL(IH.HOLIDAY_DATE,'1/1/1900') > CAST('1/1/1901' AS DATETIME) OR
						   ( ISNULL(IHA.HOLIDAY_DATE,'1/1/1900') > CAST('1/1/1901' AS DATETIME) AND ISNULL(IHA.ID_EXT,'') <> '' )
						 )
					  THEN 'H' ELSE 'S' END  --AS AIR_DAY_TYPE  --H=Holiday  --S=Standard
 FROM            WSOL_TB_IMPORTS_GA_INVOICING_3					I
 INNER JOIN      DATE_TIME										DT	ON DT.DATE_TIME_KEY       = I.STD_TENANT_START_DATE_TIME_KEY
 LEFT JOIN       WSOL_TB_IMPORTS_GA_SD_INVOICE_GROUPS			IG	ON IG.ID_EXT              = I.ID_EXT
 LEFT JOIN       WSOL_TB_IMPORTS_GA_SD_INVOICE_HOLIDAYS			IH	ON IH.HOLIDAY_DATE        = CAST(DT.CAL_DATE_STRING AS DATETIME)
 LEFT JOIN       WSOL_TB_IMPORTS_GA_SD_INVOICE_HOLIDAYS_ADDL	IHA ON IHA.HOLIDAY_DATE       = CAST(DT.CAL_DATE_STRING AS DATETIME)
																   AND IHA.ID_EXT             = I.ID_EXT


UPDATE WSOL_TB_IMPORTS_GA_INVOICING_3 SET
  AIR_ACW_FONT_COLOR             = 'Black'
 ,MIN_GUARANTEE_MINUTES          = ISNULL(IG.MIN_GUARANTEE_MINUTES,0)        --varies between scheduler acl names.
 ,MIN_GUARANTEE_TYPE             = ISNULL(IG.MIN_GUARANTEE_TYPE,'')          --varies between scheduler acl names.
 ,AUTHORIZED_TO_INVOICE_TYPE     = ISNULL(IG.AUTHORIZED_TO_INVOICE_TYPE,'')  --varies between scheduler acl names.

 ,HAS_HOLIDAYS    = IG.HAS_HOLIDAYS
 ,INCLUDE_IN_CAS  = IG.INCLUDE_IN_CAS
 ,READY_FOR_XML   = IG.READY_FOR_XML
 ,SHOW_ID_EXTS    = IG.SHOW_ID_EXTS
 FROM            WSOL_TB_IMPORTS_GA_INVOICING_3			I
 LEFT JOIN       WSOL_TB_IMPORTS_GA_SD_INVOICE_GROUPS	IG  ON IG.ID_EXT    = I.ID_EXT
												

UPDATE WSOL_TB_IMPORTS_GA_INVOICING_3 SET
   INVOICE_ID         = CASE WHEN AIA.AIR_DAY_TYPE = 'H' THEN AIASD.HOLIDAY_INVOICE_ID ELSE AIASD.INVOICE_SYSTEM_ID END
  ,SCHEDULER_ACL_NAME = CASE WHEN AIA.AIR_DAY_TYPE = 'H' THEN AIASD.HOLIDAY_INVOICE_ID ELSE AIASD.INVOICE_SYSTEM_ID END
 FROM            WSOL_TB_IMPORTS_GA_INVOICING_3				AIA 
 LEFT JOIN       WSOL_TB_IMPORTS_GA_SD_AIA_STATIC_DEFAULTS	AIASD ON AIASD.ACD_ID_EXTENSION = AIA.ID_EXT


--======================================================================
--CHECK FOR BAD DATA FOUND IN IMPORT .CSV FILES:
--======================================================================
--SELECT * FROM WSOL_TB_IMPORT_ERRORS_FOUND WHERE TENANT_KEY = 900903
--======================================================================
DECLARE
 @ERR_CNT  INT
,@RCD_CNT  INT
,@MSG1     VARCHAR(2500)
SET @ERR_CNT  = 0 
SET @RCD_CNT  = 0 
SET @MSG1     = ''
--Check #1:  ===================================================================================================
	SET @RCD_CNT = (SELECT COUNT(*) FROM WSOL_TB_IMPORTS_GA_INVOICING_1)
	IF @RCD_CNT < 1 BEGIN
		SET @MSG1 = @MSG1 + 'ERROR!  File Import Failed.  No Records Were/Could Be Imported.   |   ' 
		SET @ERR_CNT = @ERR_CNT + 1
	END

--=============================== INSERT INTO PERMANENT TABLE (No errors) OR SKIP AND GO TO END (Errors):
IF @ERR_CNT > 0 BEGIN
	INSERT INTO WSOL_TB_IMPORT_ERRORS_FOUND
	(
	TENANT_KEY
,SUB_GROUP_NAME
,ERROR_MSG)
	SELECT 
	 @TENANT_KEY					--TENANT_KEY
	,'GENERAL_ASSEMBLY_INVOICING'	--SUB_GROUP_NAME
	,@MSG1							--ERROR_MSG
	--===========================
	GOTO EARLY_EXIT
	--===========================
END
ELSE BEGIN
	--MUST RETURN AT LEAST ONE RECORD TO SSIS
	INSERT INTO WSOL_TB_IMPORT_ERRORS_FOUND
	(TENANT_KEY
,SUB_GROUP_NAME
,ERROR_MSG)
	SELECT 
	 @TENANT_KEY					--TENANT_KEY
	,'GENERAL_ASSEMBLY_INVOICING'	--SUB_GROUP_NAME
	,''								--ERROR_MSG
END

--==================================================================================
-- GROUP DATA BY AGENT, INTERVAL, & INVOICE ID
--==================================================================================

DELETE FROM WSOL_TB_IMPORTS_GA_INVOICING_4

INSERT INTO WSOL_TB_IMPORTS_GA_INVOICING_4
(FF_RECORD_ID
,FF_DATE
,FF_AGENT_ID
,FF_AGENT_NAME
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,RESOURCE_NAME
,[DATETIME]
,HOUR_INTERVAL
,EMPLOYEE_ID
,STD_TENANT_START_DATE_TIME_KEY
,LOGGED_IN_SECS
,READY_SECS
,READY_FOR_OUTBOUND_SECS
,AWAY_SECS
,AWAY_BREAK_SECS
,AWAY_COMFORT_BREAK_SECS
,BUSY_OUTBOUND_SECS
,BUSY_INTERNAL_SECS
,CALL_TRANSFERRED_SECS
,WRAP_UP_AUTO_SECS
,WRAP_UP_MANUAL_SECS
,LOGGED_OUT_SECS
,EXTENDED_AWAY_SECS
,EXTENDED_AWAY_PAPERWORK_SECS
,EXTENDED_AWAY_LUNCH_SECS
,EXTENDED_AWAY_TRAINING_SECS
,EXTENDED_AWAY_MEETING_SECS
,EXTENDED_AWAY_TEAM_MEETING_SECS
,TOTAL_READY_SECS
,TOTAL_BUSY_SECS
,TOTAL_AWAY_SECS
,TOTAL_WRAP_SECS
,TOTAL_EXTENDED_AWAY_SECS
,OUTBOUND_CALLS
,CALLS_TRANSFERRED
,CPROD
,MINIMUM_GUARANTEE
,AUTHORIZED_SECS
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_MINUTES
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 MIN(W3.FF_RECORD_ID)					AS FF_RECORD_ID
,MIN(W3.FF_DATE)						AS FF_DATE
,W3.FF_AGENT_ID							AS FF_AGENT_ID
,W3.FF_AGENT_NAME						AS FF_AGENT_NAME

,MAX(W3.SEQNO_ADDED_TIME)				AS SEQNO_ADDED_TIME
,MIN(W3.SEQNO)							AS SEQNO
,MAX(W3.FTP_FILE_NAME)					AS FTP_FILE_NAME

,MAX(ISNULL(W3.RESOURCE_NAME,''))		AS RESOURCE_NAME
,MAX(W3.[DATETIME])						AS [DATETIME]
,MAX(W3.HOUR_INTERVAL)					AS HOUR_INTERVAL
,MAX(W3.EMPLOYEE_ID)					AS EMPLOYEE_ID
,W3.STD_TENANT_START_DATE_TIME_KEY		AS STD_TENANT_START_DATE_TIME_KEY

,SUM(ISNULL(W3.LOGGED_IN_SECS					,0.00))	AS LOGGED_IN_SECS
,SUM(ISNULL(W3.READY_SECS						,0.00))	AS READY_SECS
,SUM(ISNULL(W3.READY_FOR_OUTBOUND_SECS			,0.00))	AS READY_FOR_OUTBOUND_SECS
,SUM(ISNULL(W3.AWAY_SECS						,0.00))	AS AWAY_SECS
,SUM(ISNULL(W3.AWAY_BREAK_SECS					,0.00))	AS AWAY_BREAK_SECS
,SUM(ISNULL(W3.AWAY_COMFORT_BREAK_SECS			,0.00))	AS AWAY_COMFORT_BREAK_SECS
,SUM(ISNULL(W3.BUSY_OUTBOUND_SECS				,0.00))	AS BUSY_OUTBOUND_SECS
,SUM(ISNULL(W3.BUSY_INTERNAL_SECS				,0.00)) AS BUSY_INTERNAL_SECS
,SUM(ISNULL(W3.CALL_TRANSFERRED_SECS			,0.00))	AS CALL_TRANSFERRED_SECS
,SUM(ISNULL(W3.WRAP_UP_AUTO_SECS				,0.00))	AS WRAP_UP_AUTO_SECS
,SUM(ISNULL(W3.WRAP_UP_MANUAL_SECS				,0.00))	AS WRAP_UP_MANUAL_SECS
,SUM(ISNULL(W3.LOGGED_OUT_SECS					,0.00))	AS LOGGED_OUT_SECS 
,SUM(ISNULL(W3.EXTENDED_AWAY_SECS				,0.00))	AS EXTENDED_AWAY_SECS
,SUM(ISNULL(W3.EXTENDED_AWAY_PAPERWORK_SECS		,0.00))	AS EXTENDED_AWAY_PAPERWORK_SECS
,SUM(ISNULL(W3.EXTENDED_AWAY_LUNCH_SECS			,0.00))	AS EXTENDED_AWAY_LUNCH_SECS
,SUM(ISNULL(W3.EXTENDED_AWAY_TRAINING_SECS		,0.00))	AS EXTENDED_AWAY_TRAINING_SECS 
,SUM(ISNULL(W3.EXTENDED_AWAY_MEETING_SECS		,0.00))	AS EXTENDED_AWAY_MEETING_SECS
,SUM(ISNULL(W3.EXTENDED_AWAY_TEAM_MEETING_SECS	,0.00))	AS EXTENDED_AWAY_TEAM_MEETING_SECS 
,SUM(ISNULL(W3.TOTAL_READY_SECS					,0.00))	AS TOTAL_READY_SECS
,SUM(ISNULL(W3.TOTAL_BUSY_SECS					,0.00)) AS TOTAL_BUSY_SECS
,SUM(ISNULL(W3.TOTAL_AWAY_SECS					,0.00))	AS TOTAL_AWAY_SECS 
,SUM(ISNULL(W3.TOTAL_WRAP_SECS					,0.00))	AS TOTAL_WRAP_SECS
,SUM(ISNULL(W3.TOTAL_EXTENDED_AWAY_SECS			,0.00))	AS TOTAL_EXTENDED_AWAY_SECS

,SUM(ISNULL(W3.OUTBOUND_CALLS					,0	 )) AS OUTBOUND_CALLS
,SUM(ISNULL(W3.CALLS_TRANSFERRED				,0	 ))	AS CALLS_TRANSFERRED

,SUM(ISNULL(W3.CPROD							,0.00))	AS CPROD
,SUM(ISNULL(W3.MINIMUM_GUARANTEE				,0.00))	AS MINIMUM_GUARANTEE
,SUM(ISNULL(W3.AUTHORIZED_SECS					,0.00))	AS AUTHORIZED_SECS

,MAX(ISNULL(W3.EMAIL							,''  ))	AS EMAIL
,	 ISNULL(W3.ID_EXT							,''	 )	AS ID_EXT
,MAX(ISNULL(W3.SCHEDULER_ACL_NAME				,''	 ))	AS SCHEDULER_ACL_NAME
,MAX(W3.CAL_DATE									 )	AS CAL_DATE
,MAX(ISNULL(W3.TENANT_KEY						,''	 ))	AS TENANT_KEY
,MAX(ISNULL(W3.AIR_DAY_TYPE						,''	 ))	AS AIR_DAY_TYPE
,MAX(ISNULL(W3.AIR_ACW_FONT_COLOR				,''  ))	AS AIR_ACW_FONT_COLOR
,MAX(ISNULL(W3.MIN_GUARANTEE_MINUTES			,0.00))	AS MIN_GUARANTEE_MINUTES
,MAX(ISNULL(W3.MIN_GUARANTEE_TYPE				,''	 ))	AS MIN_GUARANTEE_TYPE
,MAX(ISNULL(W3.AUTHORIZED_TO_INVOICE_TYPE		,''	 ))	AS AUTHORIZED_TO_INVOICE_TYPE
,MAX(ISNULL(W3.HAS_HOLIDAYS						,''	 )) AS HAS_HOLIDAYS
,MAX(ISNULL(W3.INCLUDE_IN_CAS					,''	 )) AS INCLUDE_IN_CAS
,MAX(ISNULL(W3.READY_FOR_XML					,''	 )) AS READY_FOR_XML
,MAX(ISNULL(W3.SHOW_ID_EXTS						,''	 ))	AS SHOW_ID_EXTS
,	 ISNULL(W3.INVOICE_ID						,''	 )  AS INVOICE_ID

,@WS_ROW_CREATED_TIME									AS WS_ROW_CREATED_TIME
,NULL													AS WS_ROW_UPDATED_TIME

FROM            WSOL_TB_IMPORTS_GA_INVOICING_3  W3

GROUP BY
 W3.FF_AGENT_ID
,W3.FF_AGENT_NAME
,W3.STD_TENANT_START_DATE_TIME_KEY
,W3.ID_EXT
,W3.INVOICE_ID

ORDER BY
 MIN(W3.SEQNO)

--===============================================
-- CALCULATE PAYMENT VALUES
--===============================================
UPDATE WSOL_TB_IMPORTS_GA_INVOICING_4 SET
 CPROD = TOTAL_READY_SECS + BUSY_OUTBOUND_SECS + CALL_TRANSFERRED_SECS + TOTAL_WRAP_SECS

UPDATE WSOL_TB_IMPORTS_GA_INVOICING_4 SET
 MINIMUM_GUARANTEE	= CASE WHEN CPROD > 3600.00 THEN 3600.00 ELSE CPROD END
,AUTHORIZED_SECS	= CASE WHEN CPROD > 3600.00 THEN 3600.00 ELSE CPROD END	

UPDATE WSOL_TB_IMPORTS_GA_INVOICING_4 SET
 MINIMUM_GUARANTEE	= CASE WHEN TOTAL_READY_SECS = 3600.00 AND MINIMUM_GUARANTEE = 3600.00 THEN 0.00 ELSE MINIMUM_GUARANTEE END
,AUTHORIZED_SECS	= CASE WHEN TOTAL_READY_SECS = 3600.00 AND AUTHORIZED_SECS   = 3600.00 THEN 0.00 ELSE MINIMUM_GUARANTEE END

UPDATE WSOL_TB_IMPORTS_GA_INVOICING_4 SET
 MINIMUM_GUARANTEE	= CASE WHEN TOTAL_READY_SECS = AUTHORIZED_SECS AND OUTBOUND_CALLS = 0 THEN 0.00 ELSE MINIMUM_GUARANTEE END
,AUTHORIZED_SECS	= CASE WHEN TOTAL_READY_SECS = AUTHORIZED_SECS AND OUTBOUND_CALLS = 0 THEN 0.00 ELSE MINIMUM_GUARANTEE END

--===============================================
SET DATEFIRST 1  -- = Monday  
--===============================================
DECLARE 
 @DTM_BEG  DATETIME
,@DTM_END  DATETIME
,@DTM_MAX  DATETIME

SET @DTM_BEG = DATEADD(hh,-2,(SELECT MIN([DATETIME]) FROM WSOL_TB_IMPORTS_GA_INVOICING_4))
SET @DTM_END = DATEADD(hh, 2,(SELECT MAX([DATETIME]) FROM WSOL_TB_IMPORTS_GA_INVOICING_4))
SET @DTM_MAX = DATEADD(hh, 0,(SELECT MAX([DATETIME]) FROM WSOL_TB_IMPORTS_GA_INVOICING_4))

--SELECT * FROM WSOL_TB_IMPORTS_GA_INVOICING
--=============================================
--UPDATE PERMANENT INVOICE TABLE
--=============================================
UPDATE WSOL_TB_IMPORTS_GA_INVOICING SET
 FF_RECORD_ID						= W4.FF_RECORD_ID
,FF_DATE							= W4.FF_DATE
--,FF_AGENT_ID						= W4.FF_AGENT_ID
--,FF_AGENT_NAME					= W4.AGENT_NAME

,SEQNO_ADDED_TIME					= W4.SEQNO_ADDED_TIME
,SEQNO								= W4.SEQNO
,FTP_FILE_NAME						= W4.FTP_FILE_NAME

,RESOURCE_NAME						= W4.RESOURCE_NAME
,[DATETIME]							= W4.[DATETIME]
,HOUR_INTERVAL						= W4.HOUR_INTERVAL
,EMPLOYEE_ID						= W4.EMPLOYEE_ID
--,STD_TENANT_START_DATE_TIME_KEY	= W1.STD_TENANT_START_DATE_TIME_KEY

,LOGGED_IN_SECS						= W4.LOGGED_IN_SECS
,READY_SECS							= W4.READY_SECS
,READY_FOR_OUTBOUND_SECS			= W4.READY_FOR_OUTBOUND_SECS
,AWAY_SECS							= W4.AWAY_SECS
,AWAY_BREAK_SECS					= W4.AWAY_BREAK_SECS
,AWAY_COMFORT_BREAK_SECS			= W4.AWAY_COMFORT_BREAK_SECS
,BUSY_OUTBOUND_SECS					= W4.BUSY_OUTBOUND_SECS
,BUSY_INTERNAL_SECS					= W4.BUSY_INTERNAL_SECS
,CALL_TRANSFERRED_SECS				= W4.CALL_TRANSFERRED_SECS
,WRAP_UP_AUTO_SECS					= W4.WRAP_UP_AUTO_SECS
,WRAP_UP_MANUAL_SECS				= W4.WRAP_UP_MANUAL_SECS
,LOGGED_OUT_SECS					= W4.LOGGED_OUT_SECS
,EXTENDED_AWAY_SECS					= W4.EXTENDED_AWAY_SECS
,EXTENDED_AWAY_PAPERWORK_SECS		= W4.EXTENDED_AWAY_PAPERWORK_SECS
,EXTENDED_AWAY_LUNCH_SECS			= W4.EXTENDED_AWAY_LUNCH_SECS
,EXTENDED_AWAY_TRAINING_SECS		= W4.EXTENDED_AWAY_TRAINING_SECS
,EXTENDED_AWAY_MEETING_SECS			= W4.EXTENDED_AWAY_MEETING_SECS
,EXTENDED_AWAY_TEAM_MEETING_SECS	= W4.EXTENDED_AWAY_TEAM_MEETING_SECS
,TOTAL_READY_SECS					= W4.TOTAL_READY_SECS
,TOTAL_BUSY_SECS					= W4.TOTAL_BUSY_SECS
,TOTAL_AWAY_SECS					= W4.TOTAL_AWAY_SECS
,TOTAL_WRAP_SECS					= W4.TOTAL_WRAP_SECS
,TOTAL_EXTENDED_AWAY_SECS			= W4.TOTAL_EXTENDED_AWAY_SECS
,OUTBOUND_CALLS						= W4.OUTBOUND_CALLS
,CALLS_TRANSFERRED					= W4.CALLS_TRANSFERRED

,CPROD								= W4.CPROD
,MINIMUM_GUARANTEE					= W4.MINIMUM_GUARANTEE
,AUTHORIZED_SECS					= W4.AUTHORIZED_SECS

,[EMAIL]							= W4.EMAIL
--,ID_EXT							= W4.ID_EXT
,SCHEDULER_ACL_NAME					= W4.SCHEDULER_ACL_NAME
,CAL_DATE							= W4.CAL_DATE
,TENANT_KEY							= W4.TENANT_KEY
,AIR_DAY_TYPE						= W4.AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR					= W4.AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_MINUTES				= W4.MIN_GUARANTEE_MINUTES
,MIN_GUARANTEE_TYPE					= W4.MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE			= W4.AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS						= W4.HAS_HOLIDAYS
,INCLUDE_IN_CAS						= W4.INCLUDE_IN_CAS
,READY_FOR_XML						= W4.READY_FOR_XML
,SHOW_ID_EXTS						= W4.SHOW_ID_EXTS
--,INVOICE_ID						= W4.INVOICE_ID

--,WS_ROW_CREATED_TIME				= NULL
,WS_ROW_UPDATED_TIME				= @WS_ROW_CREATED_TIME

--  SELECT *
FROM            WSOL_TB_IMPORTS_GA_INVOICING_4  W4
INNER JOIN      WSOL_TB_IMPORTS_GA_INVOICING    G   ON G.STD_TENANT_START_DATE_TIME_KEY = W4.STD_TENANT_START_DATE_TIME_KEY
												   AND G.ID_EXT                         = W4.ID_EXT
									               AND G.FF_AGENT_ID					= W4.FF_AGENT_ID
									               AND G.FF_AGENT_NAME					= W4.FF_AGENT_NAME
									               AND G.INVOICE_ID						= W4.INVOICE_ID

----Where Permanent table key fields match Work table key fields - then we want to update non-key fields!!!:
WHERE G.STD_TENANT_START_DATE_TIME_KEY	= W4.STD_TENANT_START_DATE_TIME_KEY
  AND G.ID_EXT							= W4.ID_EXT
  AND G.FF_AGENT_ID						= W4.FF_AGENT_ID
  AND G.FF_AGENT_NAME					= W4.FF_AGENT_NAME
  AND G.INVOICE_ID						= W4.INVOICE_ID

--=============================================
--INSERT INTO PERMANENT IMPORT TABLE:
--=============================================
INSERT INTO WSOL_TB_IMPORTS_GA_INVOICING
(FF_RECORD_ID
,FF_DATE
,FF_AGENT_ID
,FF_AGENT_NAME
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,RESOURCE_NAME
,[DATETIME]
,HOUR_INTERVAL
,EMPLOYEE_ID
,STD_TENANT_START_DATE_TIME_KEY
,LOGGED_IN_SECS
,READY_SECS
,READY_FOR_OUTBOUND_SECS
,AWAY_SECS
,AWAY_BREAK_SECS
,AWAY_COMFORT_BREAK_SECS
,BUSY_OUTBOUND_SECS
,BUSY_INTERNAL_SECS
,CALL_TRANSFERRED_SECS
,WRAP_UP_AUTO_SECS
,WRAP_UP_MANUAL_SECS
,LOGGED_OUT_SECS
,EXTENDED_AWAY_SECS
,EXTENDED_AWAY_PAPERWORK_SECS
,EXTENDED_AWAY_LUNCH_SECS
,EXTENDED_AWAY_TRAINING_SECS
,EXTENDED_AWAY_MEETING_SECS
,EXTENDED_AWAY_TEAM_MEETING_SECS
,TOTAL_READY_SECS
,TOTAL_BUSY_SECS
,TOTAL_AWAY_SECS
,TOTAL_WRAP_SECS
,TOTAL_EXTENDED_AWAY_SECS
,OUTBOUND_CALLS
,CALLS_TRANSFERRED
,CPROD
,MINIMUM_GUARANTEE
,AUTHORIZED_SECS
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_MINUTES
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 W4.FF_RECORD_ID
,W4.FF_DATE
,W4.FF_AGENT_ID
,W4.FF_AGENT_NAME

,W4.SEQNO_ADDED_TIME
,W4.SEQNO
,W4.FTP_FILE_NAME

,W4.RESOURCE_NAME
,W4.[DATETIME]
,W4.HOUR_INTERVAL
,W4.EMPLOYEE_ID
,W4.STD_TENANT_START_DATE_TIME_KEY

,W4.LOGGED_IN_SECS
,W4.READY_SECS
,W4.READY_FOR_OUTBOUND_SECS
,W4.AWAY_SECS
,W4.AWAY_BREAK_SECS
,W4.AWAY_COMFORT_BREAK_SECS
,W4.BUSY_OUTBOUND_SECS
,W4.BUSY_INTERNAL_SECS
,W4.CALL_TRANSFERRED_SECS
,W4.WRAP_UP_AUTO_SECS
,W4.WRAP_UP_MANUAL_SECS
,W4.LOGGED_OUT_SECS
,W4.EXTENDED_AWAY_SECS
,W4.EXTENDED_AWAY_PAPERWORK_SECS
,W4.EXTENDED_AWAY_LUNCH_SECS
,W4.EXTENDED_AWAY_TRAINING_SECS
,W4.EXTENDED_AWAY_MEETING_SECS
,W4.EXTENDED_AWAY_TEAM_MEETING_SECS
,W4.TOTAL_READY_SECS
,W4.TOTAL_BUSY_SECS
,W4.TOTAL_AWAY_SECS
,W4.TOTAL_WRAP_SECS
,W4.TOTAL_EXTENDED_AWAY_SECS
,W4.OUTBOUND_CALLS
,W4.CALLS_TRANSFERRED

,W4.CPROD
,W4.MINIMUM_GUARANTEE
,W4.AUTHORIZED_SECS

,W4.EMAIL
,W4.ID_EXT
,W4.SCHEDULER_ACL_NAME
,W4.CAL_DATE
,W4.TENANT_KEY
,W4.AIR_DAY_TYPE
,W4.AIR_ACW_FONT_COLOR
,W4.MIN_GUARANTEE_MINUTES
,W4.MIN_GUARANTEE_TYPE
,W4.AUTHORIZED_TO_INVOICE_TYPE
,W4.HAS_HOLIDAYS
,W4.INCLUDE_IN_CAS
,W4.READY_FOR_XML
,W4.SHOW_ID_EXTS
,W4.INVOICE_ID
,@WS_ROW_CREATED_TIME    --[WS_ROW_CREATED_TIME] [datetime] NOT NULL,
,NULL                    --[WS_ROW_UPDATED_TIME] [datetime] NULL,

FROM            WSOL_TB_IMPORTS_GA_INVOICING_4  W4

LEFT JOIN       WSOL_TB_IMPORTS_GA_INVOICING    G   ON G.STD_TENANT_START_DATE_TIME_KEY = W4.STD_TENANT_START_DATE_TIME_KEY
												   AND G.ID_EXT                         = W4.ID_EXT
									               AND G.FF_AGENT_ID					= W4.FF_AGENT_ID
												   AND G.FF_AGENT_NAME					= W4.FF_AGENT_NAME
												   AND G.INVOICE_ID						= W4.INVOICE_ID

WHERE (G.FF_AGENT_ID					IS NULL AND ISNULL(W4.FF_AGENT_ID					,'') <> '' )
--  AND (G.ID_EXT							IS NULL AND ISNULL(W4.ID_EXT						,'') <> '' )
  AND (G.STD_TENANT_START_DATE_TIME_KEY	IS NULL AND ISNULL(W4.STD_TENANT_START_DATE_TIME_KEY, 0) <>  0 )
  AND (G.FF_AGENT_NAME					IS NULL AND ISNULL(W4.FF_AGENT_NAME					,'') <> '' )
--  AND (G.INVOICE_ID						IS NULL AND ISNULL(W4.INVOICE_ID					,'') <> '' )			


--===============================================================
SET DATEFIRST 1  -- = Monday
--===============================================================

IF OBJECT_ID('TEMPDB..#DT_EASY_WEEKS') IS NOT NULL BEGIN
   DROP TABLE #DT_EASY_WEEKS
END
CREATE TABLE #DT_EASY_WEEKS
(CAL_DATE_STRING      VARCHAR(10)
,CAL_WEEK_START_DATE  DATETIME
,CAL_WEEK_END_DATE    DATETIME
,PAY_CYCLE_CLOSURE_DATE DATETIME
)
INSERT INTO #DT_EASY_WEEKS
SELECT
 DT.CAL_DATE_STRING
,CASE WHEN DATEPART(DW,CAST(DT.CAL_DATE_STRING AS DATETIME)) = 1 THEN CAST(DT.CAL_DATE_STRING AS DATETIME)
	  WHEN DATEPART(DW,CAST(DT.CAL_DATE_STRING AS DATETIME)) = 7 THEN DATEADD(DD,-6,CAST(DT.CAL_DATE_STRING AS DATETIME))
	  ELSE DATEADD(DD,1,DT.CAL_WEEK_START_DATE) END
,DT.CAL_DATE_STRING
,DT.CAL_DATE_STRING  --PAY_CYCLE_CLOSURE_DATE
FROM DATE_TIME DT
WHERE DT.CAL_DATE >= @DTM_BEG AND DT.CAL_DATE <  @DTM_END
GROUP BY 
 DT.CAL_DATE_STRING
,CASE WHEN DATEPART(DW,CAST(DT.CAL_DATE_STRING AS DATETIME)) = 1 THEN CAST(DT.CAL_DATE_STRING AS DATETIME)
	  WHEN DATEPART(DW,CAST(DT.CAL_DATE_STRING AS DATETIME)) = 7 THEN DATEADD(DD,-6,CAST(DT.CAL_DATE_STRING AS DATETIME))
	  ELSE DATEADD(DD,1,DT.CAL_WEEK_START_DATE) END
,DT.CAL_DATE_STRING
,DT.CAL_DATE_STRING  --PAY_CYCLE_CLOSURE_DATE
--===========================
UPDATE #DT_EASY_WEEKS SET CAL_WEEK_END_DATE = DATEADD(DD,6,CAL_WEEK_START_DATE)

UPDATE #DT_EASY_WEEKS SET
 PAY_CYCLE_CLOSURE_DATE = CASE WHEN DATEPART(DD,@DTM_MAX) >= 1 AND DATEPART(DD,@DTM_MAX) < 16 THEN
									CAST(CONVERT(VARCHAR(10), CONVERT(VARCHAR(2),MONTH(@DTM_MAX)) + CONVERT(VARCHAR(4),'/15/') + CONVERT(VARCHAR(4),YEAR(@DTM_MAX)),101) AS DATETIME)
							   WHEN DATEPART(DD,@DTM_MAX) > 15 THEN 
									DATEADD(D,-1,DATEADD(M,DATEDIFF(M,0,@DTM_MAX)+1,0))
							   END 
							   
 --SELECT * FROM #DT_EASY_WEEKS ORDER BY CAL_DATE_STRING

--==================================
--CREATE TMP TABLE:
--==================================
IF OBJECT_ID('TEMPDB..#WSOL_TB_IMPORTS_GA_UV_ANT_AIA') IS NOT NULL BEGIN
   DROP TABLE #WSOL_TB_IMPORTS_GA_UV_ANT_AIA
END
CREATE TABLE #WSOL_TB_IMPORTS_GA_UV_ANT_AIA
(	[PLATFORM] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[STATUS] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[INVOICE_MAP_KEY] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[FIELD_NAME] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SCHEDULER_PROJECT_ID] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SCHEDULER_ACL_NAME] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ACD_ID_EXTENSION] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[OFFICIAL_WSOL_CLIENT_ID] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[OFFICIAL_WSOL_CLIENT_NAME] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[OFFICIAL_ACD_CLIENT_ID] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[OFFICIAL_ACD_CLIENT_NAME] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[PRIMARY_PROJECT_MANAGER_ID] [varchar](500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DIRECTOR_OF_PROJECT_MANAGEMENT_ID] [varchar](500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[AGENT_TECHNOLOGY_MANAGER_ID] [varchar](500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CONTRACTOR_SUPPORT_PATHWAY] [varchar](500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[INVOICE_SYSTEM_ID] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[HOLIDAY_INVOICE_ID] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[HOLIDAY] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[FILE_FORMAT_OF_PUSH] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[AGENT_PREPARATION_INVOICE_ID] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NEW_ACL] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CURRENT_CATS] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CATS_ID] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PATS_ID] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SMART_ELIGIBLE] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SMART_TIER_1] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SMART_TIER_2] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SMART_TIER_3] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[INTERVAL] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DATE] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[HOD_INTERVAL] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[AU_DK_LOGGED_IN_DURATION] [decimal](10, 2) NULL,
	[AU_DK_AVAILABLE_DURATION] [decimal](10, 2) NULL,
	[AU_DK_TALK_DURATION] [decimal](10, 2) NULL,
	[AU_DK_IB_TALK_DURATION] [decimal](10, 2) NULL,
	[AU_DK_OB_TALK_DURATION] [decimal](10, 2) NULL,
	[AU_DK_CONVENTIONAL_ACW] [decimal](10, 2) NULL,
	[AU_DK_NR_DURATION] [decimal](10, 2) NULL,
	[AU_DK_PSEUDO_PRODUCTIVE_DURATION] [decimal](10, 2) NULL,
	[AU_DK_ADJUSTED_NR_DURATION] [decimal](10, 2) NULL,
	[AU_DK_TOTAL_PRODUCTIVE_DURATION] [decimal](10, 2) NULL,
	[AU_DK_WPSEUDO_PRODUCTIVE_DURATIONS] [decimal](10, 2) NULL,
	[AU_DK_XFER_COUNT] [int] NULL,
	[AU_DK_HOLD_COUNT] [int] NULL,
	[AU_DK_CONFERENCE_COUNT] [int] NULL,
	[AU_DK_CONSULT_COUNT] [int] NULL,
	[AU_DK_PUP_COUNT] [int] NULL,
	[AU_DK_OFFERED_COUNT] [int] NULL,
	[AU_DK_HANDLED_COUNT] [int] NULL,
	[AU_DK_IB_HANDLE_COUNT] [int] NULL,
	[AU_DK_OB_HANDLE_COUNT] [int] NULL,
	[AU_DK_RONA_COUNT] [int] NULL,
	[AU_DK_AWR_COUNT] [int] NULL,
	[MINIMUM_GUARANTEE] [decimal](10, 2) NULL,
	[AUTHORIZED_TO_INVOICE] [decimal](10, 2) NULL,
	[WEEK_ENDING_DATE] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PAY_CYCLE_CLOSURE_DATE] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,

	[FTP_FILE_NAME] [varchar](100) NOT NULL,
	[EMAIL] [varchar](100)  NULL,
	[STD_TENANT_START_DATE_TIME_KEY] [int] NOT NULL,
	[CAL_DATE] [datetime] NULL,
	[TENANT_KEY] [int] NOT NULL,
	[AIR_DAY_TYPE] [varchar](1) NOT NULL,
	[AIR_ACW_FONT_COLOR] [varchar](50) NULL,
	[MIN_GUARANTEE_RATE] [decimal](6, 3) NULL,
	[MIN_GUARANTEE_TYPE] [varchar](50) NULL,
	[AUTHORIZED_TO_INVOICE_TYPE] [varchar](50) NULL,
	[HAS_HOLIDAYS] [varchar](1) NULL,
	[INCLUDE_IN_CAS] [varchar](1) NULL,
	[READY_FOR_XML] [varchar](1) NULL,
	[SHOW_ID_EXTS] [varchar](1) NULL,
	[INVOICE_ID] [varchar](50) NULL,
	[RESOURCE_NAME] [varchar](100) NULL,
	[AIRITKDUR] [decimal](10, 2) NULL,
	[AIRIACDUR] [decimal](10, 2) NULL,
	[WS_ROW_CREATED_TIME] [datetime] NULL,
	[WS_ROW_UPDATED_TIME] [datetime] NULL

)
INSERT INTO #WSOL_TB_IMPORTS_GA_UV_ANT_AIA
SELECT 
 AIASD.[PLATFORM]
,AIASD.[STATUS]    
,AIA.FF_AGENT_ID  --INVOICE_MAP_KEY
,AIASD.FIELD_NAME
,AIASD.SCHEDULER_PROJECT_ID
,AIASD.SCHEDULER_ACL_NAME
,AIASD.ACD_ID_EXTENSION
,AIASD.OFFICIAL_WSOL_CLIENT_ID
,AIASD.OFFICIAL_WSOL_CLIENT_NAME
,AIASD.OFFICIAL_ACD_CLIENT_ID
,AIASD.OFFICIAL_ACD_CLIENT_NAME
,AIASD.PRIMARY_PROJECT_MANAGER_ID
,AIASD.DIRECTOR_OF_PROJECT_MANAGEMENT_ID
,AIASD.AGENT_TECHNOLOGY_MANAGER_ID
,AIASD.CONTRACTOR_SUPPORT_PATHWAY
,AIASD.INVOICE_SYSTEM_ID
,AIASD.HOLIDAY_INVOICE_ID
,CASE WHEN AIA.AIR_DAY_TYPE = 'H' THEN 'Yes' ELSE 'No' END  AS HOLIDAY   --AIR_DAY_TYPE:  'H'=Holiday  'S'=Standard (not holiday)
,AIASD.FILE_FORMAT_OF_PUSH
,AIASD.AGENT_PREPARATION_INVOICE_ID
,AIASD.NEW_ACL
,AIASD.CURRENT_CATS
,AIASD.CATS_ID
,AIASD.PATS_ID
,AIASD.SMART_ELIGIBLE
,AIASD.SMART_TIER_1
,AIASD.SMART_TIER_2
,AIASD.SMART_TIER_3
,AIASD.INTERVAL
,DT.CAL_DATE_STRING				--[DATE]             
,DT.LABEL_HH24 + ':00'			--HOD_INTERVAL

,AIA.LOGGED_IN_SECS				--AU_DK_LOGGED_IN_DURATION
,AIA.TOTAL_READY_SECS			--AU_DK_AVAILABLE_DURATION	-- READY_SECS + READY_FOR_OUTBOUND_SECS

,AIA.BUSY_OUTBOUND_SECS			--AU_DK_TALK_DURATION
,0								--AU_DK_IB_TALK_DURATION
,0								--AU_DK_OB_TALK_DURATION

,AIA.TOTAL_WRAP_SECS			--AU_DK_CONVENTIONAL_ACW	-- WRAP_UP_AUTO_SECS + WRAP_UP_MANUAL_SECS
,AIA.TOTAL_AWAY_SECS	        --AU_DK_NR_DURATION			-- AWAY_SECS + AWAY_BREAK_SECS + AWAY_COMFORT_BREAK_SECS
,0								--AIA.AU_DK_PSEUDO_PRODUCTIVE_DURATION
,0								--AU_DK_ADJUSTED_NR_DURATION
,AIA.CPROD						--AU_DK_TOTAL_PRODUCTIVE_DURATION
,AIA.CPROD						--AU_DK_WPSEUDO_PRODUCTIVE_DURATIONS  

,0								--AU_DK_XFER_COUNT
,0								--AU_DK_HOLD_COUNT
,0								--AU_DK_CONFERENCE_COUNT
,0								--AU_DK_CONSULT_COUNT
,0								--AU_DK_PUP_COUNT

,0					            --AU_DK_OFFERED_COUNT
,0					            --AU_DK_HANDLED_COUNT
,0								--AU_DK_IB_HANDLE_COUNT
,0					            --AU_DK_OB_HANDLE_COUNT
													
,0								--AU_DK_RONA_COUNT
,0								--AU_DK_AWR_COUNT

,AIA.MINIMUM_GUARANTEE			--MINIMUM_GUARANTEE
,AIA.AUTHORIZED_SECS			--AUTHORIZED_TO_INVOICE

,CONVERT(VARCHAR(10),DEW.CAL_WEEK_END_DATE,101)      --AS WEEK_ENDING_DATE       --EVERY SUNDAY.--,AIA.WEEK_ENDING_DATE             --HAVE TO CALCULATE !!!!!!!!!!!
,CONVERT(VARCHAR(10),DEW.PAY_CYCLE_CLOSURE_DATE,101) --AS PAY_CYCLE_CLOSURE_DATE --EVERY OTHER SUNDAY, FROM A STARTING SUNDAY OF 10/31/11.--,AIA.PAY_CYCLE_CLOSURE_DATE       --HAVE TO CALCULATE !!!!!!!!!!!

,AIA.FTP_FILE_NAME
,AIA.EMAIL
,AIA.STD_TENANT_START_DATE_TIME_KEY
,DT.CAL_DATE
,AIA.TENANT_KEY
,AIA.AIR_DAY_TYPE
,AIA.AIR_ACW_FONT_COLOR
,AIA.MIN_GUARANTEE_MINUTES
,AIA.MIN_GUARANTEE_TYPE
,AIA.AUTHORIZED_TO_INVOICE_TYPE
,AIA.HAS_HOLIDAYS
,AIA.INCLUDE_IN_CAS
,AIA.READY_FOR_XML
,AIA.SHOW_ID_EXTS
,AIA.INVOICE_ID  --CASE WHEN AIA.AIR_DAY_TYPE = 'H' THEN AIASD.HOLIDAY_INVOICE_ID ELSE AIASD.INVOICE_SYSTEM_ID END  --AS INVOICE_ID 
,AIA.RESOURCE_NAME
,NULL							--AIA.AIRITKDUR
,NULL							--AIA.AIRIACDUR
,dbo.getdate()  --	[WS_ROW_CREATED_TIME] [datetime] NULL,
,NULL       --	[WS_ROW_UPDATED_TIME] [datetime] NULL
	
--SELECT TOP 1000 *
FROM            WSOL_TB_IMPORTS_GA_INVOICING_4            AIA 
INNER JOIN      WSOL_TB_IMPORTS_GA_SD_AIA_STATIC_DEFAULTS AIASD ON AIASD.ACD_ID_EXTENSION = AIA.ID_EXT
INNER JOIN      WSOL_TB_IMPORTS_GA_SD_INVOICE_GROUPS      CASG  ON CASG.ID_EXT            = AIASD.ACD_ID_EXTENSION	

INNER JOIN      DATE_TIME                                DT    ON DT.DATE_TIME_KEY       = AIA.STD_TENANT_START_DATE_TIME_KEY

LEFT JOIN       #DT_EASY_WEEKS                           DEW   ON DEW.CAL_DATE_STRING    = DT.CAL_DATE_STRING

WHERE DT.CAL_DATE >= @DTM_BEG AND DT.CAL_DATE <  @DTM_END
  AND (ISNULL(AIASD.ACD_ID_EXTENSION,'') <> '')
  AND (ISNULL(AIA.RESOURCE_NAME,'') <> '')
  AND AIA.AUTHORIZED_SECS <> 0.00							--<<<<<---- FILTER OUT RECORDS WHERE AUTHORIZED TIME = 0.00

--==========================================================================
--UPDATE WSOL_TB_...UV_ANT_AIA TABLE:
--==========================================================================
UPDATE WSOL_TB_IMPORTS_GA_UV_ANT_AIA SET
 [PLATFORM]                   = W1.[PLATFORM]
,[STATUS]                     = W1.[STATUS]
--,INVOICE_MAP_KEY              = W1.INVOICE_MAP_KEY
,FIELD_NAME                   = W1.FIELD_NAME
,SCHEDULER_PROJECT_ID         = W1.SCHEDULER_PROJECT_ID
,SCHEDULER_ACL_NAME           = W1.SCHEDULER_ACL_NAME
--,ACD_ID_EXTENSION             = W1.ACD_ID_EXTENSION
,OFFICIAL_WSOL_CLIENT_ID      = W1.OFFICIAL_WSOL_CLIENT_ID
,OFFICIAL_WSOL_CLIENT_NAME    = W1.OFFICIAL_WSOL_CLIENT_NAME
,OFFICIAL_ACD_CLIENT_ID       = W1.OFFICIAL_ACD_CLIENT_ID
,OFFICIAL_ACD_CLIENT_NAME     = W1.OFFICIAL_ACD_CLIENT_NAME
,PRIMARY_PROJECT_MANAGER_ID        = W1.PRIMARY_PROJECT_MANAGER_ID
,DIRECTOR_OF_PROJECT_MANAGEMENT_ID = W1.DIRECTOR_OF_PROJECT_MANAGEMENT_ID
,AGENT_TECHNOLOGY_MANAGER_ID       = W1.AGENT_TECHNOLOGY_MANAGER_ID
,CONTRACTOR_SUPPORT_PATHWAY        = W1.CONTRACTOR_SUPPORT_PATHWAY
,INVOICE_SYSTEM_ID            = W1.INVOICE_SYSTEM_ID
,HOLIDAY_INVOICE_ID           = W1.HOLIDAY_INVOICE_ID
,HOLIDAY                      = W1.HOLIDAY
,FILE_FORMAT_OF_PUSH          = W1.FILE_FORMAT_OF_PUSH
,AGENT_PREPARATION_INVOICE_ID = W1.AGENT_PREPARATION_INVOICE_ID
,NEW_ACL                      = W1.NEW_ACL
,CURRENT_CATS                 = W1.CURRENT_CATS
,CATS_ID                      = W1.CATS_ID
,PATS_ID                      = W1.PATS_ID
,SMART_ELIGIBLE               = W1.SMART_ELIGIBLE
,SMART_TIER_1                 = W1.SMART_TIER_1
,SMART_TIER_2                 = W1.SMART_TIER_2
,SMART_TIER_3                 = W1.SMART_TIER_3
,INTERVAL                     = W1.INTERVAL
,[DATE]                       = W1.[DATE]
,HOD_INTERVAL                 = W1.HOD_INTERVAL
,AU_DK_LOGGED_IN_DURATION     = W1.AU_DK_LOGGED_IN_DURATION
,AU_DK_AVAILABLE_DURATION     = W1.AU_DK_AVAILABLE_DURATION
,AU_DK_TALK_DURATION          = W1.AU_DK_TALK_DURATION
,AU_DK_IB_TALK_DURATION       = W1.AU_DK_IB_TALK_DURATION
,AU_DK_OB_TALK_DURATION       = W1.AU_DK_OB_TALK_DURATION
,AU_DK_CONVENTIONAL_ACW       = W1.AU_DK_CONVENTIONAL_ACW
,AU_DK_NR_DURATION            = W1.AU_DK_NR_DURATION
,AU_DK_PSEUDO_PRODUCTIVE_DURATION   = W1.AU_DK_PSEUDO_PRODUCTIVE_DURATION
,AU_DK_ADJUSTED_NR_DURATION         = W1.AU_DK_ADJUSTED_NR_DURATION
,AU_DK_TOTAL_PRODUCTIVE_DURATION    = W1.AU_DK_TOTAL_PRODUCTIVE_DURATION
,AU_DK_WPSEUDO_PRODUCTIVE_DURATIONS = W1.AU_DK_WPSEUDO_PRODUCTIVE_DURATIONS
,AU_DK_XFER_COUNT             = W1.AU_DK_XFER_COUNT
,AU_DK_HOLD_COUNT             = W1.AU_DK_HOLD_COUNT
,AU_DK_CONFERENCE_COUNT       = W1.AU_DK_CONFERENCE_COUNT
,AU_DK_CONSULT_COUNT          = W1.AU_DK_CONSULT_COUNT
,AU_DK_PUP_COUNT              = W1.AU_DK_PUP_COUNT
,AU_DK_OFFERED_COUNT          = W1.AU_DK_OFFERED_COUNT
,AU_DK_HANDLED_COUNT          = W1.AU_DK_HANDLED_COUNT
,AU_DK_IB_HANDLE_COUNT        = W1.AU_DK_IB_HANDLE_COUNT
,AU_DK_OB_HANDLE_COUNT        = W1.AU_DK_OB_HANDLE_COUNT
,AU_DK_RONA_COUNT             = W1.AU_DK_RONA_COUNT
,AU_DK_AWR_COUNT              = W1.AU_DK_AWR_COUNT
,MINIMUM_GUARANTEE            = W1.MINIMUM_GUARANTEE
,AUTHORIZED_TO_INVOICE        = W1.AUTHORIZED_TO_INVOICE
,WEEK_ENDING_DATE             = W1.WEEK_ENDING_DATE
,PAY_CYCLE_CLOSURE_DATE       = W1.PAY_CYCLE_CLOSURE_DATE

--FIELDS ABOVE ARE IN XML FILE.   FIELDS BELOW ARE NOT IN XML FILE!!!:
,FTP_FILE_NAME = W1.FTP_FILE_NAME
,EMAIL         = W1.EMAIL

--,STD_TENANT_START_DATE_TIME_KEY = W1.STD_TENANT_START_DATE_TIME_KEY
,CAL_DATE                     = W1.CAL_DATE
,TENANT_KEY                   = W1.TENANT_KEY
,AIR_DAY_TYPE                 = W1.AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR           = W1.AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE		      = W1.MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE           = W1.MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE   = W1.AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS                 = W1.HAS_HOLIDAYS
,INCLUDE_IN_CAS               = W1.INCLUDE_IN_CAS
,READY_FOR_XML                = W1.READY_FOR_XML
,SHOW_ID_EXTS                 = W1.SHOW_ID_EXTS
,INVOICE_ID                   = W1.INVOICE_ID
,RESOURCE_NAME                = W1.RESOURCE_NAME

,AIRITKDUR                    = W1.AIRITKDUR
,AIRIACDUR                    = W1.AIRIACDUR

--,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME          = @WS_ROW_CREATED_TIME

FROM            #WSOL_TB_IMPORTS_GA_UV_ANT_AIA   W1

INNER JOIN      WSOL_TB_IMPORTS_GA_UV_ANT_AIA    UV  ON UV.STD_TENANT_START_DATE_TIME_KEY = W1.STD_TENANT_START_DATE_TIME_KEY
												    AND UV.ACD_ID_EXTENSION               = W1.ACD_ID_EXTENSION
												    AND UV.INVOICE_MAP_KEY                = W1.INVOICE_MAP_KEY

WHERE ( UV.STD_TENANT_START_DATE_TIME_KEY = W1.STD_TENANT_START_DATE_TIME_KEY )
  AND ( UV.ACD_ID_EXTENSION               = W1.ACD_ID_EXTENSION )
  AND ( UV.INVOICE_MAP_KEY                = W1.INVOICE_MAP_KEY )


--=====================================================
--INSERT TMP TABLE FIELDS INTO WSOL_TB_... TABLE:
--=====================================================
INSERT INTO [WSOL_TB_IMPORTS_GA_UV_ANT_AIA]
SELECT 
 AIA.[PLATFORM]
,AIA.[STATUS]
,AIA.INVOICE_MAP_KEY
,AIA.FIELD_NAME
,AIA.SCHEDULER_PROJECT_ID
,AIA.SCHEDULER_ACL_NAME
,AIA.ACD_ID_EXTENSION
,AIA.OFFICIAL_WSOL_CLIENT_ID
,AIA.OFFICIAL_WSOL_CLIENT_NAME
,AIA.OFFICIAL_ACD_CLIENT_ID
,AIA.OFFICIAL_ACD_CLIENT_NAME
,AIA.PRIMARY_PROJECT_MANAGER_ID
,AIA.DIRECTOR_OF_PROJECT_MANAGEMENT_ID
,AIA.AGENT_TECHNOLOGY_MANAGER_ID
,AIA.CONTRACTOR_SUPPORT_PATHWAY
,AIA.INVOICE_SYSTEM_ID
,AIA.HOLIDAY_INVOICE_ID
,AIA.HOLIDAY
,AIA.FILE_FORMAT_OF_PUSH
,AIA.AGENT_PREPARATION_INVOICE_ID
,AIA.NEW_ACL
,AIA.CURRENT_CATS
,AIA.CATS_ID
,AIA.PATS_ID
,AIA.SMART_ELIGIBLE
,AIA.SMART_TIER_1
,AIA.SMART_TIER_2
,AIA.SMART_TIER_3
,AIA.INTERVAL
,AIA.[DATE]
,AIA.HOD_INTERVAL
,AIA.AU_DK_LOGGED_IN_DURATION
,AIA.AU_DK_AVAILABLE_DURATION
,AIA.AU_DK_TALK_DURATION
,AIA.AU_DK_IB_TALK_DURATION
,AIA.AU_DK_OB_TALK_DURATION
,AIA.AU_DK_CONVENTIONAL_ACW
,AIA.AU_DK_NR_DURATION
,AIA.AU_DK_PSEUDO_PRODUCTIVE_DURATION
,AIA.AU_DK_ADJUSTED_NR_DURATION
,AIA.AU_DK_TOTAL_PRODUCTIVE_DURATION
,AIA.AU_DK_WPSEUDO_PRODUCTIVE_DURATIONS
,AIA.AU_DK_XFER_COUNT
,AIA.AU_DK_HOLD_COUNT
,AIA.AU_DK_CONFERENCE_COUNT
,AIA.AU_DK_CONSULT_COUNT
,AIA.AU_DK_PUP_COUNT
,AIA.AU_DK_OFFERED_COUNT
,AIA.AU_DK_HANDLED_COUNT
,AIA.AU_DK_IB_HANDLE_COUNT
,AIA.AU_DK_OB_HANDLE_COUNT
,AIA.AU_DK_RONA_COUNT
,AIA.AU_DK_AWR_COUNT
,AIA.MINIMUM_GUARANTEE
,AIA.AUTHORIZED_TO_INVOICE
,AIA.WEEK_ENDING_DATE
,AIA.PAY_CYCLE_CLOSURE_DATE

,AIA.FTP_FILE_NAME
,AIA.EMAIL
,AIA.STD_TENANT_START_DATE_TIME_KEY
,AIA.CAL_DATE
,AIA.TENANT_KEY
,AIA.AIR_DAY_TYPE
,AIA.AIR_ACW_FONT_COLOR
,AIA.MIN_GUARANTEE_RATE
,AIA.MIN_GUARANTEE_TYPE
,AIA.AUTHORIZED_TO_INVOICE_TYPE
,AIA.HAS_HOLIDAYS
,AIA.INCLUDE_IN_CAS
,AIA.READY_FOR_XML
,AIA.SHOW_ID_EXTS
,AIA.INVOICE_ID
,AIA.RESOURCE_NAME
,AIA.AIRITKDUR
,AIA.AIRIACDUR
,AIA.WS_ROW_CREATED_TIME
,AIA.WS_ROW_UPDATED_TIME

--Where Permanent table is Null and Work table is not Null - then we want to add the data!!!:

FROM            #WSOL_TB_IMPORTS_GA_UV_ANT_AIA   AIA
LEFT JOIN       WSOL_TB_IMPORTS_GA_UV_ANT_AIA    UV  ON UV.STD_TENANT_START_DATE_TIME_KEY = AIA.STD_TENANT_START_DATE_TIME_KEY
												    AND UV.ACD_ID_EXTENSION               = AIA.ACD_ID_EXTENSION
												    AND UV.INVOICE_MAP_KEY                = AIA.INVOICE_MAP_KEY

WHERE ( UV.STD_TENANT_START_DATE_TIME_KEY IS NULL AND ISNULL(AIA.STD_TENANT_START_DATE_TIME_KEY,0) <> 0 )
  AND ( UV.ACD_ID_EXTENSION               IS NULL AND ISNULL(AIA.ACD_ID_EXTENSION,'') <> '' )
  AND ( UV.INVOICE_MAP_KEY                IS NULL AND ISNULL(AIA.INVOICE_MAP_KEY,'') <> '' )


--=============================================
EARLY_EXIT:
--=============================================