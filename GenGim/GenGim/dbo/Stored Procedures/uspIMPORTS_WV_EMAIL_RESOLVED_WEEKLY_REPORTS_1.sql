
CREATE PROCEDURE [dbo].[uspIMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS]
 @DATE_BEG           DATETIME
,@DATE_END           DATETIME
,@TENANT_KEY         VARCHAR(150) --No multiples even though filter below is setup for multiples.
,@SCHEDULER_GROUP    VARCHAR(150) --Hid. Def=' '
,@ID_EXT             VARCHAR(300) --Hid. Def=' '
,@RESOURCE_KEY       VARCHAR(10)  --Hid. Def='0'
,@TIME_INTERVAL      VARCHAR(10)  --Hid. Def='HR'  HR,DY,DR   FOR SUB: MD(Month by Day),MR(Month Range)  15 and 30 not possible !!!!
,@SHOW_RESOURCE      VARCHAR(1)   --Hid. Def='Y'
,@DUR_IN             VARCHAR(2)   --Hid. Def='MM' 
,@RESOURCE_FORMAT    VARCHAR(2)   --Hid. Def='NM' --'NM'=NAME + (employee id),  'ID'=ID
,@SHOW_HOLIDAY       VARCHAR(1)   --Hid. Def='N'
,@PSW                VARCHAR(10)  --Hid. Def='NONE'
,@EXECUTIONER        VARCHAR(3)   --Hid. Def='MAN'  MANual,SUBscription
,@RPT_TYPE_GRP       VARCHAR(3)   --Hid. Def='INV'
,@RPT_TYPE           VARCHAR(3)   --Hid. Def='INV'  
AS
SET NOCOUNT ON    

--  EXECUTE [dbo].[uspIMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS] '09/21/2017','09/21/2017','0','0','0','0','HR','Y','MM','NM','Y','4','MAN','INV','INV'

--	@TIME_INTERVAL:  Can show invoicing data at hourly, daily, or higher level !!!

--	Durations in FTP FILE are in seconds.  Therefore, reporting may be in seconds, minutes, or hours.

--  SELECT * FROM WSOL_TB_IMPORTS_WV_INCONTACT_INVOICING
--  SELECT * FROM WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY


--========================================================================================================
DECLARE
 @DTM_BEG AS DATETIME
,@DTM_END AS DATETIME
IF @DATE_BEG < '01/01/1901' BEGIN     
    SET @DTM_BEG = CAST(CONVERT(VARCHAR(10),dbo.getdate() - 1,101) AS DATETIME) 
	SET @DTM_END = CAST(CONVERT(VARCHAR(10),dbo.getdate() - 1,101) AS DATETIME) -- + 1
END
ELSE BEGIN
    SET @DTM_BEG = CAST(CONVERT(VARCHAR(10),@DATE_BEG,101) AS DATETIME) 
    SET @DTM_END = CAST(CONVERT(VARCHAR(10),@DATE_END,101) AS DATETIME) -- + 1
END
SET @DTM_END    = @DTM_END + 1  --EVERYTHING ABOVE, @DTM_END IS FOR EXACT DATE RANGE NEEDED. ONE IS ADDED SO WHERE CLAUSE " < @DTM_END" WORKS.

DECLARE
 @MTD_BEG AS DATETIME
,@MTD_END AS DATETIME  --,@YTD_BEG AS DATETIME--,@YTD_END AS DATETIME
SET @MTD_BEG = CAST(CAST(DATEPART(mm,@DTM_BEG) AS VARCHAR(2)) + '/01/' + CAST(DATEPART(yyyy,@DTM_BEG) AS VARCHAR(4)) AS DATETIME)
SET @MTD_END = @DTM_END  

IF @TIME_INTERVAL IN ('MR','MD') BEGIN  --MONTH DETERMINED BY @DTM_BEG.
	SET @DTM_BEG = @MTD_BEG
	SET @DTM_END = @MTD_END
END

--==================================
--SET AMOUNT TO DIVIDE BY:
--==================================
DECLARE @DS DECIMAL(10,2)  --SECONDS TO DIVIDE BY.
IF @DUR_IN = 'SS' BEGIN
    SET @DS = 1.00     --DIVIDE SECONDS BY 1  TO GET SAME, SECONDS.
END
IF @DUR_IN = 'MM' BEGIN
    SET @DS = 60.00    --DIVIDE SECONDS BY 60 TO GET MINUTES.
END
IF @DUR_IN = 'HH' BEGIN
    SET @DS = 3600.00  --DIVIDE SECONDS BY 3600 TO GET HOURS.
END

--==================================
--CREATE EMAIL TMP TABLE:
--==================================
IF OBJECT_ID('TEMPDB..#IMPORTS_WV_EMAIL_DATA') IS NOT NULL BEGIN
   DROP TABLE #IMPORTS_WV_EMAIL_DATA
END
CREATE TABLE #IMPORTS_WV_EMAIL_DATA
(AGENT_NAME						VARCHAR(100)
,MODIFIED_HOUR					DATETIME
,INVOICE_MAP_KEY				VARCHAR(100)
,STD_TENANT_START_DATE_TIME_KEY	INT
,MODIFIED_EMAIL_COUNT			INT
)

INSERT INTO #IMPORTS_WV_EMAIL_DATA
SELECT
 EMA.AGENT_NAME
,EMA.MODIFIED_HOUR
,EMA.INVOICE_MAP_KEY
,EMA.STD_TENANT_START_DATE_TIME_KEY
,EMA.MODIFIED_EMAIL_COUNT

FROM
(	SELECT	
	 ERW.FF_OWNER							AS AGENT_NAME
	,ERW.MODIFIED_HOUR						AS MODIFIED_HOUR
	,ERW.INVOICE_MAP_KEY				    AS INVOICE_MAP_KEY
	,ERW.STD_TENANT_START_DATE_TIME_KEY		AS STD_TENANT_START_DATE_TIME_KEY
	,COUNT(ERW.FF_OWNER)		            AS MODIFIED_EMAIL_COUNT
	--  SELECT *
	FROM            WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY	ERW
	INNER JOIN      DATE_TIME									DT	ON DT.DATE_TIME_KEY = ERW.STD_TENANT_START_DATE_TIME_KEY

	WHERE DT.CAL_DATE >= @DTM_BEG AND DT.CAL_DATE <  @DTM_END
		
	GROUP BY 
	 ERW.FF_OWNER
	,ERW.MODIFIED_HOUR
	,ERW.INVOICE_MAP_KEY
	,ERW.STD_TENANT_START_DATE_TIME_KEY
) EMA
--SELECT * FROM #IMPORTS_WV_EMAIL_DATA ORDER BY AGENT_NAME

--==================================
--CREATE EMAIL TMP TABLE:
--==================================
IF OBJECT_ID('TEMPDB..#IMPORTS_WV_WORK_DATA') IS NOT NULL BEGIN
   DROP TABLE #IMPORTS_WV_WORK_DATA
END
CREATE TABLE #IMPORTS_WV_WORK_DATA
(AGENT_NAME						VARCHAR(100)
,INVOICE_MAP_KEY				VARCHAR(100)
,[DATETIME]						DATETIME
,STD_TENANT_START_DATE_TIME_KEY	INT
,LOGIN_TIME						DECIMAL(10,2)
,AVAILABLE_TIME					DECIMAL(10,2)
,UNAVAILABLE_EMAIL_TIME			DECIMAL(10,2)
,UNAVAILABLE_SUPERVISOR_TIME	DECIMAL(10,2)
,UNAVAILABLE_TIME_MINUS_ACW		DECIMAL(10,2)
,TALK_TIME						DECIMAL(10,2)
,HOLD_TIME						DECIMAL(10,2)
,ACW_TIME						DECIMAL(10,2)
,TRUE_OUTBOUND_TALK_TIME		DECIMAL(10,2)
,TOTAL_TALK						DECIMAL(10,2)
,CPROD							DECIMAL(10,2)
,MING							DECIMAL(10,2)
,AUT2							DECIMAL(10,2)
)
INSERT INTO #IMPORTS_WV_WORK_DATA
SELECT
 WRK.AGENT_NAME
,WRK.INVOICE_MAP_KEY
,WRK.[DATETIME]
,WRK.STD_TENANT_START_DATE_TIME_KEY
,WRK.LOGIN_TIME
,WRK.AVAILABLE_TIME
,WRK.UNAVAILABLE_EMAIL_TIME
,WRK.UNAVAILABLE_SUPERVISOR_TIME
,WRK.UNAVAILABLE_TIME_MINUS_ACW
,WRK.TALK_TIME
,WRK.HOLD_TIME
,WRK.ACW_TIME
,WRK.TRUE_OUTBOUND_TALK_TIME
,WRK.TOTAL_TALK
,WRK.CPROD
,WRK.MING
,WRK.AUT2
FROM
(	SELECT	
	 INV.RESOURCE_NAME									AS AGENT_NAME
	,INV.FF_AGENT_NAME									AS INVOICE_MAP_KEY
	,INV.[DATETIME]										AS [DATETIME]
	,INV.STD_TENANT_START_DATE_TIME_KEY					AS STD_TENANT_START_DATE_TIME_KEY
	,SUM(ISNULL(INV.LOGIN_TIME					,0.00)) AS LOGIN_TIME
	,SUM(ISNULL(INV.AVAILABLE_TIME				,0.00)) AS AVAILABLE_TIME
	,SUM(ISNULL(INV.UNAVAILABLE_EMAIL_TIME		,0.00)) AS UNAVAILABLE_EMAIL_TIME
	,SUM(ISNULL(INV.UNAVAILABLE_SUPERVISOR_TIME	,0.00)) AS UNAVAILABLE_SUPERVISOR_TIME
	,SUM(ISNULL(INV.UNAVAILABLE_TIME_MINUS_ACW	,0.00)) AS UNAVAILABLE_TIME_MINUS_ACW
	,SUM(ISNULL(INV.TALK_TIME					,0.00)) AS TALK_TIME
	,SUM(ISNULL(INV.HOLD_TIME					,0.00)) AS HOLD_TIME
	,SUM(ISNULL(INV.ACW_TIME					,0.00)) AS ACW_TIME
	,SUM(ISNULL(INV.TRUE_OUTBOUND_TALK_TIME		,0.00)) AS TRUE_OUTBOUND_TALK_TIME
	,SUM(ISNULL(INV.TOTAL_TALK					,0.00)) AS TOTAL_TALK
	,SUM(ISNULL(INV.CPROD						,0.00)) AS CPROD
	,SUM(ISNULL(INV.MING						,0.00)) AS MING
	,SUM(ISNULL(INV.AUT2						,0.00)) AS AUT2
	--  SELECT *
	FROM            WSOL_TB_IMPORTS_WV_INCONTACT_INVOICING	INV
	INNER JOIN      DATE_TIME								DT	ON DT.DATE_TIME_KEY = INV.STD_TENANT_START_DATE_TIME_KEY

	WHERE DT.CAL_DATE >= @DTM_BEG AND DT.CAL_DATE <  @DTM_END
		
	GROUP BY
	 INV.RESOURCE_NAME 
	,INV.FF_AGENT_NAME
	,INV.[DATETIME]
	,INV.STD_TENANT_START_DATE_TIME_KEY
) WRK
--SELECT * FROM #IMPORTS_WV_WORK_DATA ORDER BY INVOICE_MAP_KEY
--==================================
--CREATE TMP TABLE:
--==================================
IF OBJECT_ID('TEMPDB..#IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS') IS NOT NULL BEGIN
   DROP TABLE #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS
END
CREATE TABLE #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS
(--ID_EXT							VARCHAR(3)
--,SCHEDULER_ACL_NAME				VARCHAR(100)  
 EMPLOYEE_ID					VARCHAR(50)
,STD_TENANT_START_DATE_TIME_KEY INT
,MODIFIED_HOUR					DATETIME
,RESOURCE_NAME					VARCHAR(100)
,
[LOGIN_TIME] [decimal](10, 2) NULL,
[AVAILABLE_TIME] [decimal](10, 2) NULL,
[UNAVAILABLE_EMAIL_TIME] [decimal](10, 2) NULL,
[UNAVAILABLE_SUPERVISOR_TIME] [decimal](10, 2) NULL,
[UNAVAILABLE_TIME_MINUS_ACW] [decimal](10, 2) NULL,
[TALK_TIME] [decimal](10, 2) NULL,
[HOLD_TIME] [decimal](10, 2) NULL,
[ACW_TIME] [decimal](10, 2) NULL,
[TRUE_OUTBOUND_TALK_TIME] [decimal](10, 2) NULL,
[TOTAL_TALK] [decimal](10, 2) NULL,
[CPROD] [decimal](10, 2) NULL,
[MING] [decimal](10, 2) NULL,
[AUT2] [decimal](10, 2) NULL,

 MODIFIED_EMAIL_COUNT			INT
,UNAVAILABLE_EMAIL_TIME_SECS	DECIMAL(10,2)
,EMAILS_PER_HOUR				DECIMAL(10,2)
)

INSERT INTO #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS
SELECT
-- UAA.ACD_ID_EXTENSION
--,UAA.SCHEDULER_ACL_NAME
 UAA.EMPLOYEE_ID
,UAA.STD_TENANT_START_DATE_TIME_KEY
,UAA.MODIFIED_HOUR
,UAA.RESOURCE_NAME

,(ISNULL(UAA.LOGIN_TIME					,0.00))
,(ISNULL(UAA.AVAILABLE_TIME				,0.00))
,(ISNULL(UAA.UNAVAILABLE_EMAIL_TIME		,0.00))
,(ISNULL(UAA.UNAVAILABLE_SUPERVISOR_TIME,0.00))
,(ISNULL(UAA.UNAVAILABLE_TIME_MINUS_ACW	,0.00))
,(ISNULL(UAA.TALK_TIME					,0.00))
,(ISNULL(UAA.HOLD_TIME					,0.00))
,(ISNULL(UAA.ACW_TIME					,0.00))
,(ISNULL(UAA.TRUE_OUTBOUND_TALK_TIME	,0.00))
,(ISNULL(UAA.TOTAL_TALK					,0.00))
,(ISNULL(UAA.CPROD						,0.00))
,(ISNULL(UAA.MING						,0.00))
,(ISNULL(UAA.AUT2						,0.00))

,(ISNULL(UAA.MODIFIED_EMAIL_COUNT		,0	 ))
,(ISNULL(UAA.UNAVAILABLE_EMAIL_TIME_SECS,0.00))
,(ISNULL(UAA.EMAILS_PER_HOUR			,0.00))

--DATASOURCES FOR DURATION FIELDS, IN SECONDS, IN HOUR INTERVALS:
--SELECT * FROM WSOL_TB_IMPORTS_WV_INCONTACT_INVOICING

FROM
(	SELECT	
	-- UA.ID_EXT							AS ACD_ID_EXTENSION
	--,UA.INVOICE_ID					    AS SCHEDULER_ACL_NAME
	 ISNULL(UA.INVOICE_MAP_KEY					,ED.AGENT_NAME)						AS EMPLOYEE_ID 
	,ISNULL(UA.STD_TENANT_START_DATE_TIME_KEY	,ED.STD_TENANT_START_DATE_TIME_KEY)	AS STD_TENANT_START_DATE_TIME_KEY
	,DT.CAL_DATE																	AS MODIFIED_HOUR
	,ISNULL(MAX(UA.AGENT_NAME)					,MAX(ED.AGENT_NAME))			    AS RESOURCE_NAME

	,SUM(ISNULL(UA.LOGIN_TIME					,0.00))	AS LOGIN_TIME
	,SUM(ISNULL(UA.AVAILABLE_TIME				,0.00))	AS AVAILABLE_TIME
	,SUM(ISNULL(UA.UNAVAILABLE_EMAIL_TIME		,0.00))	AS UNAVAILABLE_EMAIL_TIME
	,SUM(ISNULL(UA.UNAVAILABLE_SUPERVISOR_TIME	,0.00)) AS UNAVAILABLE_SUPERVISOR_TIME
	,SUM(ISNULL(UA.UNAVAILABLE_TIME_MINUS_ACW	,0.00))	AS UNAVAILABLE_TIME_MINUS_ACW
	,SUM(ISNULL(UA.TALK_TIME					,0.00))	AS TALK_TIME
	,SUM(ISNULL(UA.HOLD_TIME					,0.00))	AS HOLD_TIME
	,SUM(ISNULL(UA.ACW_TIME						,0.00))	AS ACW_TIME
	,SUM(ISNULL(UA.TRUE_OUTBOUND_TALK_TIME		,0.00))	AS TRUE_OUTBOUND_TALK_TIME
	,SUM(ISNULL(UA.TOTAL_TALK					,0.00))	AS TOTAL_TALK
	,SUM(ISNULL(UA.CPROD						,0.00))	AS CPROD
	,SUM(ISNULL(UA.MING							,0.00))	AS MING
	,SUM(ISNULL(UA.AUT2							,0.00))	AS AUT2
	
	,SUM(ISNULL(ED.MODIFIED_EMAIL_COUNT			,0   )) AS MODIFIED_EMAIL_COUNT
	,SUM(ISNULL(UA.UNAVAILABLE_EMAIL_TIME		,0.00)) AS UNAVAILABLE_EMAIL_TIME_SECS
	,CASE WHEN SUM(ISNULL(UA.UNAVAILABLE_EMAIL_TIME,0.00)) > 0 THEN
			(SUM(ISNULL(ED.MODIFIED_EMAIL_COUNT,0)) / SUM(ISNULL(UA.UNAVAILABLE_EMAIL_TIME,0.00))) * 3600.00
		  ELSE 0.00
	 END												AS EMAILS_PER_HOUR
	--  SELECT *
	FROM				#IMPORTS_WV_WORK_DATA			UA
	FULL OUTER  JOIN	#IMPORTS_WV_EMAIL_DATA			ED	ON ED.INVOICE_MAP_KEY					= UA.INVOICE_MAP_KEY
														   AND ED.STD_TENANT_START_DATE_TIME_KEY	= UA.STD_TENANT_START_DATE_TIME_KEY 
	INNER JOIN      DATE_TIME							DT	ON DT.DATE_TIME_KEY						= ISNULL(UA.STD_TENANT_START_DATE_TIME_KEY	,ED.STD_TENANT_START_DATE_TIME_KEY)
	

	WHERE DT.CAL_DATE >= @DTM_BEG AND DT.CAL_DATE <  @DTM_END
		
	GROUP BY
	-- UA.ID_EXT
	--,UA.INVOICE_ID
	 ISNULL(UA.INVOICE_MAP_KEY					,ED.AGENT_NAME)
	,ISNULL(UA.STD_TENANT_START_DATE_TIME_KEY	,ED.STD_TENANT_START_DATE_TIME_KEY)
	,DT.CAL_DATE
) UAA

--==============================================================
-- CREATE TEMPORARY TABLE TO RETURN RESULTS
--==============================================================
IF OBJECT_ID('TEMPDB..#IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS_RTN') IS NOT NULL BEGIN
   DROP TABLE #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS_RTN
END
CREATE TABLE #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS_RTN
(GRPNO                 INT
--,ID_EXT                VARCHAR(3)
--,SCHEDULER_ACL_NAME    VARCHAR(100)
,EMPLOYEE_ID           VARCHAR(50)
,RESOURCE_NAME         VARCHAR(100)
,CAL_YEAR_MONTH_NUM    VARCHAR(10)
,DATE_INTERVAL         VARCHAR(50)
,TIME_INTERVAL         VARCHAR(10)
,
[LOGIN_TIME] [decimal](10, 2) NULL,
[AVAILABLE_TIME] [decimal](10, 2) NULL,
[UNAVAILABLE_EMAIL_TIME] [decimal](10, 2) NULL,
[UNAVAILABLE_SUPERVISOR_TIME] [decimal](10, 2) NULL,
[UNAVAILABLE_TIME_MINUS_ACW] [decimal](10, 2) NULL,
[TALK_TIME] [decimal](10, 2) NULL,
[HOLD_TIME] [decimal](10, 2) NULL,
[ACW_TIME] [decimal](10, 2) NULL,
[TRUE_OUTBOUND_TALK_TIME] [decimal](10, 2) NULL,
[TOTAL_TALK] [decimal](10, 2) NULL,
[CPROD] [decimal](10, 2) NULL,
[MING] [decimal](10, 2) NULL,
[AUT2] [decimal](10, 2) NULL,

 MODIFIED_EMAIL_COUNT			INT
,EMAILS_PER_HOUR				DECIMAL(10,2)
,UNAVAILABLE_EMAIL_TIME_SECS	DECIMAL(10,2)
,TOTAL_EMAILS_PER_HOUR			DECIMAL(10,2)
)

--==================================
-- POPULATE TEMPORARY TABLE
--==================================
INSERT INTO #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS_RTN
SELECT
 20								--AS GRPNO  
--,ISNULL(GG.ID_EXT            ,'') AS ID_EXT
--,ISNULL(GG.SCHEDULER_ACL_NAME,'') AS SCHEDULER_ACL_NAME
,ISNULL(GG.EMPLOYEE_ID       ,'') AS EMPLOYEE_ID
,ISNULL(GG.RESOURCE_NAME     ,'') AS RESOURCE_NAME
,ISNULL(GG.CAL_YEAR_MONTH_NUM,'') AS CAL_YEAR_MONTH_NUM
,ISNULL(GG.DI                ,'') AS DI
,ISNULL(GG.TI                ,'') AS TI

,CAST((ISNULL(GG.LOGIN_TIME					,0.00)) / @DS AS DECIMAL(10,2))	AS LOGIN_TIME
,CAST((ISNULL(GG.AVAILABLE_TIME				,0.00)) / @DS AS DECIMAL(10,2))	AS AVAILABLE_TIME
,CAST((ISNULL(GG.UNAVAILABLE_EMAIL_TIME		,0.00)) / @DS AS DECIMAL(10,2))	AS UNAVAILABLE_EMAIL_TIME
,CAST((ISNULL(GG.UNAVAILABLE_SUPERVISOR_TIME,0.00)) / @DS AS DECIMAL(10,2))	AS UNAVAILABLE_SUPERVISOR_TIME
,CAST((ISNULL(GG.UNAVAILABLE_TIME_MINUS_ACW	,0.00)) / @DS AS DECIMAL(10,2))	AS UNAVAILABLE_TIME_MINUS_ACW
,CAST((ISNULL(GG.TALK_TIME					,0.00)) / @DS AS DECIMAL(10,2))	AS TALK_TIME
,CAST((ISNULL(GG.HOLD_TIME					,0.00)) / @DS AS DECIMAL(10,2))	AS HOLD_TIME
,CAST((ISNULL(GG.ACW_TIME					,0.00)) / @DS AS DECIMAL(10,2))	AS ACW_TIME
,CAST((ISNULL(GG.TRUE_OUTBOUND_TALK_TIME	,0.00)) / @DS AS DECIMAL(10,2))	AS TRUE_OUTBOUND_TALK_TIME
,CAST((ISNULL(GG.TOTAL_TALK					,0.00)) / @DS AS DECIMAL(10,2))	AS TOTAL_TALK
,CAST((ISNULL(GG.CPROD						,0.00)) / @DS AS DECIMAL(10,2))	AS CPROD
,CAST((ISNULL(GG.MING						,0.00)) / @DS AS DECIMAL(10,2))	AS MING
,CAST((ISNULL(GG.AUT2						,0.00)) / @DS AS DECIMAL(10,2))	AS AUT2

,ISNULL(GG.MODIFIED_EMAIL_COUNT				,0)							AS MODIFIED_EMAIL_COUNT
,ISNULL(GG.EMAILS_PER_HOUR					,0.00)						AS EMAILS_PER_HOUR
,CAST(ISNULL(GG.UNAVAILABLE_EMAIL_TIME_SECS	,0.00) AS DECIMAL(10,2))	AS UNAVAILABLE_EMAIL_TIME_SECS
,ISNULL(GG.TOTAL_EMAILS_PER_HOUR			,0.00)						AS TOTAL_EMAILS_PER_HOUR

FROM  -- GG STARTS HERE:
(	SELECT
	-- ISNULL(SW.ID_EXT,'')             AS ID_EXT
	--,ISNULL(SW.SCHEDULER_ACL_NAME,'') AS SCHEDULER_ACL_NAME
	 ISNULL(SW.EMPLOYEE_ID,'')		  AS EMPLOYEE_ID
	,MAX(RESOURCE_NAME)               AS RESOURCE_NAME

	,(CASE WHEN @TIME_INTERVAL IN ('MR') THEN DT.CAL_YEAR_MONTH_NUM ELSE '' END ) AS CAL_YEAR_MONTH_NUM
	,(CASE WHEN @TIME_INTERVAL IN ('MR') THEN LEFT(DT.CAL_MONTH_NAME,3) + ' ' + DT.CAL_YEAR_STRING
		   WHEN @TIME_INTERVAL IN ('DR') THEN ''  ELSE DT.CAL_DATE_STRING END ) AS DI
	,(CASE --WHEN @TIME_INTERVAL = '15' THEN DT.LABEL_HH24 + ':' + DT.LABEL_MI
		   --WHEN @TIME_INTERVAL = '30' THEN DT.LABEL_HH24 + ':' + DT.LABEL_30MI
		   WHEN @TIME_INTERVAL = 'HR' THEN DT.LABEL_HH24 ELSE '' END ) AS TI

	,SUM(ISNULL(SW.LOGIN_TIME					,0.00))	AS LOGIN_TIME
	,SUM(ISNULL(SW.AVAILABLE_TIME				,0.00))	AS AVAILABLE_TIME
	,SUM(ISNULL(SW.UNAVAILABLE_EMAIL_TIME		,0.00))	AS UNAVAILABLE_EMAIL_TIME
	,SUM(ISNULL(SW.UNAVAILABLE_SUPERVISOR_TIME	,0.00))	AS UNAVAILABLE_SUPERVISOR_TIME
	,SUM(ISNULL(SW.UNAVAILABLE_TIME_MINUS_ACW	,0.00))	AS UNAVAILABLE_TIME_MINUS_ACW
	,SUM(ISNULL(SW.TALK_TIME					,0.00))	AS TALK_TIME
	,SUM(ISNULL(SW.HOLD_TIME					,0.00))	AS HOLD_TIME
	,SUM(ISNULL(SW.ACW_TIME						,0.00))	AS ACW_TIME
	,SUM(ISNULL(SW.TRUE_OUTBOUND_TALK_TIME		,0.00))	AS TRUE_OUTBOUND_TALK_TIME
	,SUM(ISNULL(SW.TOTAL_TALK					,0.00))	AS TOTAL_TALK
	,SUM(ISNULL(SW.CPROD						,0.00))	AS CPROD
	,SUM(ISNULL(SW.MING							,0.00))	AS MING
	,SUM(ISNULL(SW.AUT2							,0.00))	AS AUT2

	,SUM(ISNULL(SW.MODIFIED_EMAIL_COUNT			,0   )) AS MODIFIED_EMAIL_COUNT
	,SUM(ISNULL(SW.EMAILS_PER_HOUR				,0.00))	AS EMAILS_PER_HOUR
	,SUM(ISNULL(SW.UNAVAILABLE_EMAIL_TIME_SECS	,0.00)) AS UNAVAILABLE_EMAIL_TIME_SECS
	,0.00												AS TOTAL_EMAILS_PER_HOUR  --<<<<< VALUE CALCULATED BELOW
	
	FROM            #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS	SW
	INNER JOIN      DATE_TIME									DT   ON DT.DATE_TIME_KEY = SW.STD_TENANT_START_DATE_TIME_KEY
													 
	--WHERE DT.CAL_DATE >= @DTM_BEG AND DT.CAL_DATE <  @DTM_END		  --AND (@TENANT_KEY   IN ('0','') OR SW.TENANT_KEY   = CAST(@TENANT_KEY AS INT) )

	GROUP BY 
	-- ISNULL(SW.ID_EXT,'')             --AS ID_EXT
	--,ISNULL(SW.SCHEDULER_ACL_NAME,'') --AS SCHEDULER_ACL_NAME
	 ISNULL(SW.EMPLOYEE_ID,'')		  --AS EMPLOYEE_ID

	,(CASE WHEN @TIME_INTERVAL IN ('MR') THEN DT.CAL_YEAR_MONTH_NUM ELSE '' END ) --AS CAL_YEAR_MONTH_NUM
	,(CASE WHEN @TIME_INTERVAL IN ('MR') THEN LEFT(DT.CAL_MONTH_NAME,3) + ' ' + DT.CAL_YEAR_STRING
		   WHEN @TIME_INTERVAL IN ('DR') THEN ''  ELSE DT.CAL_DATE_STRING END ) --AS DI
	,(CASE --WHEN @TIME_INTERVAL = '15' THEN DT.LABEL_HH24 + ':' + DT.LABEL_MI
		   --WHEN @TIME_INTERVAL = '30' THEN DT.LABEL_HH24 + ':' + DT.LABEL_30MI
		   WHEN @TIME_INTERVAL = 'HR' THEN DT.LABEL_HH24 ELSE '' END ) --AS TI

	--,(ISNULL(SW.FF_AGENT_NAME,''))         --AS FF_AGENT_NAME
	--,(ISNULL(SW.FF_USER_NAME,''))          --AS FF_USER_NAME

) GG

--==================================
--RETURN DATA
--==================================

--======================================================
--UPDATE TOTAL EMAILS PER HOUR:
--======================================================
UPDATE #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS_RTN SET
 TOTAL_EMAILS_PER_HOUR = ISNULL(LOJ.TOTAL_EMAILS_PER_HOUR,0.00)
FROM #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS_RTN TA
LEFT OUTER JOIN
(	SELECT
	 EMPLOYEE_ID
	,CASE WHEN SUM(UNAVAILABLE_EMAIL_TIME_SECS) > 0 THEN 
		   (SUM(MODIFIED_EMAIL_COUNT) / SUM(UNAVAILABLE_EMAIL_TIME_SECS)) * 3600.00
		  ELSE 0.00
	 END AS TOTAL_EMAILS_PER_HOUR
	FROM #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS_RTN 
	GROUP BY 
	 EMPLOYEE_ID
) LOJ ON LOJ.EMPLOYEE_ID = TA.EMPLOYEE_ID
	 
--==================================
--POPULATE TABLE READ BY SSIS TO GET END DATE OF DATA REPORT/FILE HAS BEEN RUN FOR:
--==================================
INSERT INTO WSOL_TB_FILENAMES_FOR_SSIS
(SQL_JOB_NAME
,FILENM
,CST_ROW_CREATED_TIME)
SELECT
 'uspIMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS'				--SQL_JOB_NAME
,REPLACE(CONVERT(VARCHAR(10),@DTM_END - 1,111),'/','')  --FILENM   YYYYMMDD_...
,dbo.getdate()  --CST_ROW_CREATED_TIME

--=====================================
--RETURN DATASET:
--=====================================
SELECT 
 CASE WHEN @DUR_IN = 'SS' THEN '' ELSE 'F' END AS DUR_FORMAT
,CONVERT(VARCHAR(10),@DTM_BEG,101) + '-' + CONVERT(VARCHAR(10),@DTM_END - 1,101)  AS DATE_RANGE
,V.*

FROM      #IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_REPORTS_RTN  V

ORDER BY 
 V.GRPNO
--,V.SCHEDULER_ACL_NAME
,V.RESOURCE_NAME
,V.EMPLOYEE_ID
,V.CAL_YEAR_MONTH_NUM
,V.DATE_INTERVAL
,V.TIME_INTERVAL  --SINCE IN MILITARY TIME!




--===============================
EARLY_EXIT:
--===============================
--IMPOSSIBLE:  SELECT 1/0    POSSIBLE:  SELECT 0/1