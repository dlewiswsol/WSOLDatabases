
CREATE PROCEDURE [dbo].[uspIMPORTS_MONAT_AGENT_INVOICING_REPORTS]
 @DATE_BEG           DATETIME
,@DATE_END           DATETIME
,@TENANT_KEY         VARCHAR(150) --No multiples even though filter below is setup for multiples.
,@SCHEDULER_GROUP    VARCHAR(150) --Hid. Def=' '
,@ID_EXT             VARCHAR(300) --Hid. Def=' '
,@RESOURCE_KEY       VARCHAR(10)  --Hid. Def='0'
,@TIME_INTERVAL      VARCHAR(10)  --Hid. Def='HR'  HR,DY,DR   FOR SUB: MD(Month by Day),MR(Month Range)  15 and 30 not possible !!!!
,@SHOW_RESOURCE      VARCHAR(1)   --Hid. Def='Y'
,@SHOW_DETAILS		 BIT		  --	 DEF='TRUE'
,@DUR_IN             VARCHAR(2)   --Hid. Def='MM' 
,@RESOURCE_FORMAT    VARCHAR(2)   --Hid. Def='NM' --'NM'=NAME + (employee id),  'ID'=ID
,@SHOW_HOLIDAY       VARCHAR(1)   --Hid. Def='N'
,@PSW                VARCHAR(10)  --Hid. Def='NONE'
,@EXECUTIONER        VARCHAR(3)   --Hid. Def='MAN'  MANual,SUBscription
,@RPT_TYPE_GRP       VARCHAR(3)   --Hid. Def='INV'
,@RPT_TYPE           VARCHAR(3)   --Hid. Def='INV'  
AS
SET NOCOUNT ON    

--  EXECUTE [dbo].[uspIMPORTS_MONAT_AGENT_INVOICING_DETAIL] '08/01/2017','08/15/2017','0','0','0','0','HR','Y','SS','NM','Y','4','MAN','INV','INV'

--	@TIME_INTERVAL:  Can show invoicing report at hourly level or higher !!!

--	Durations in FTP FILE are in HH:MM:SS but converted to seconds.  Therefore, reporting may be in seconds, minutes, or hours.

--  SELECT * FROM WSOL_TB_IMPORTS_MONAT_SD_INVOICE_GROUPS
--  SELECT * FROM WSOL_TB_IMPORTS_MONAT_UV_ANT_AIA


--========================================================================================================
DECLARE
 @DTM_BEG AS DATETIME
,@DTM_END AS DATETIME
IF @DATE_BEG < '01/01/1901' BEGIN     
    SET @DTM_BEG = CAST(CONVERT(VARCHAR(10),dbo.getdate() - 1,101) AS DATETIME) 
	SET @DTM_END = CAST(CONVERT(VARCHAR(10),dbo.getdate() - 1,101) AS DATETIME) -- + 1
END
ELSE BEGIN
    SET @DTM_BEG = CAST(CONVERT(VARCHAR(10),@DATE_BEG,101) AS DATETIME) 
    SET @DTM_END = CAST(CONVERT(VARCHAR(10),@DATE_END,101) AS DATETIME) -- + 1
END
SET @DTM_END    = @DTM_END + 1  --EVERYTHING ABOVE, @DTM_END IS FOR EXACT DATE RANGE NEEDED. ONE IS ADDED SO WHERE CLAUSE " < @DTM_END" WORKS.

DECLARE
 @MTD_BEG AS DATETIME
,@MTD_END AS DATETIME  --,@YTD_BEG AS DATETIME--,@YTD_END AS DATETIME
SET @MTD_BEG = CAST(CAST(DATEPART(mm,@DTM_BEG) AS VARCHAR(2)) + '/01/' + CAST(DATEPART(yyyy,@DTM_BEG) AS VARCHAR(4)) AS DATETIME)
SET @MTD_END = @DTM_END  

IF @TIME_INTERVAL IN ('MR','MD') BEGIN  --MONTH DETERMINED BY @DTM_BEG.
	SET @DTM_BEG = @MTD_BEG
	SET @DTM_END = @MTD_END
END

IF @EXECUTIONER = 'DLY' BEGIN
	IF DATEPART(DW,dbo.getdate()) = 2 BEGIN
		SET @DTM_BEG = CAST(CONVERT(VARCHAR(10),dbo.getdate() - 3,101) AS DATETIME)
	END
	ELSE BEGIN
		SET @DTM_BEG = CAST(CONVERT(VARCHAR(10),dbo.getdate() - 1,101) AS DATETIME)
	END
	SET @DTM_END = @DTM_BEG + 1
END

IF @EXECUTIONER = 'WKY' BEGIN
	SET @DTM_BEG = CAST(CONVERT(VARCHAR(10),dbo.getdate() - 7,101) AS DATETIME)
	SET @DTM_END = CAST(CONVERT(VARCHAR(10),dbo.getdate()	 ,101) AS DATETIME)
END

IF @EXECUTIONER = 'MTH' BEGIN
	IF MONTH(dbo.getdate()) = 1
		BEGIN
			SET @DTM_BEG = CONVERT(DATETIME,CONVERT(VARCHAR(6),'12/01/') + CONVERT(VARCHAR(4),YEAR(dbo.getdate())-1))
		END
	ELSE
		BEGIN
			SET @DTM_BEG = CAST(CONVERT(VARCHAR(10), (CONVERT(VARCHAR(2),MONTH(dbo.getdate())-1) + CONVERT(VARCHAR(4),'/01/') + CONVERT(VARCHAR(4),YEAR(dbo.getdate()))),101) AS DATETIME)
		END
	SET @DTM_END = CAST(CONVERT(VARCHAR(10),dbo.getdate(),101) AS DATETIME)
END



--========================================================================
--	SET AMOUNT TO DIVIDE BY:
--========================================================================
DECLARE @DS DECIMAL(10,2)  --SECONDS TO DIVIDE BY.
IF @DUR_IN = 'SS' BEGIN
    SET @DS = 1.00     --DIVIDE SECONDS BY 1  TO GET SAME, SECONDS.
END
IF @DUR_IN = 'MM' BEGIN
    SET @DS = 60.00    --DIVIDE SECONDS BY 60 TO GET MINUTES.
END
IF @DUR_IN = 'HH' BEGIN
    SET @DS = 3600.00  --DIVIDE SECONDS BY 3600 TO GET HOURS.
END

--==================================
--	CREATE TMP TABLE:
--==================================
IF OBJECT_ID('TEMPDB..#IMPORTS_MONAT_AGENT_INVOICING_REPORTS') IS NOT NULL BEGIN
   DROP TABLE #IMPORTS_MONAT_AGENT_INVOICING_REPORTS
END
CREATE TABLE #IMPORTS_MONAT_AGENT_INVOICING_REPORTS
(TENANT_NAME					VARCHAR(50)
,ID_EXT							VARCHAR(3)
,SCHEDULER_ACL_NAME				VARCHAR(100)  
,EMPLOYEE_ID					VARCHAR(50)
,STD_TENANT_START_DATE_TIME_KEY INT
,RESOURCE_NAME					VARCHAR(100)

,AIR_DAY_TYPE					VARCHAR(1)
,AIR_ACW_FONT_COLOR				VARCHAR(50)
,MIN_GUARANTEE_MINUTES			DECIMAL(6,3)
,MIN_GUARANTEE_TYPE				VARCHAR(50)
,AUTHORIZED_TO_INVOICE_TYPE		VARCHAR(50)
,HAS_HOLIDAYS					VARCHAR(1)
,INCLUDE_IN_CAS					VARCHAR(1)
,READY_FOR_XML					VARCHAR(1)
,SHOW_ID_EXTS					VARCHAR(1)
,
[ANSWERED_SESSIONS] [int] NULL,
[RONA_CNT] [int] NULL,
[DID_CNT] [int] NULL,
[DOD_CNT] [int] NULL,
[STARTED_IMS] [int] NULL,
[STARTED_CALLS] [int] NULL,
[ESCALATIONS] [int] NULL,
[CONSULTS] [int] NULL,
[TRANSFERS] [int] NULL,
[SUPERVISOR_JOINS] [int] NULL,
[AVAILABLE_TIME] [decimal](10, 2) NULL,
[RING_TIME] [decimal](10, 2) NULL,
[CONNECT_IM_SESSION_TIME] [decimal](10, 2) NULL,
[CONNECT_PHONE_CALL_TIME] [decimal](10, 2) NULL,
[CONNECT_DID_CALL_TIME] [decimal](10, 2) NULL,
[CONNECT_DOD_CALL_TIME] [decimal](10, 2) NULL,
[NON_CONNECT_CALL_TIME] [decimal](10, 2) NULL,
[ACW_TIME] [decimal](10, 2) NULL,
[RONA_TIME] [decimal](10, 2) NULL,
[UNAVAILABLE_TIME] [decimal](10, 2) NULL,
[OFF_WORK_TIME] [decimal](10, 2) NULL,
[LOGGED_OUT_TIME] [decimal](10, 2) NULL,
[ON_PHONE_TIME] [decimal](10, 2) NULL,
[Q_ON_PHONE_TIME] [decimal](10, 2) NULL,
[TALK_TIME] [decimal](10, 2) NULL,
[Q_TALK_TIME] [decimal](10, 2) NULL,
[HANDLE_TIME] [decimal](10, 2) NULL,
[Q_HANDLE_TIME] [decimal](10, 2) NULL,
[CPROD] [decimal](10, 2) NULL,
[MING] [decimal](10, 2) NULL,
[AUT2] [decimal](10, 2) NULL,
)

INSERT INTO #IMPORTS_MONAT_AGENT_INVOICING_REPORTS
SELECT
 'MONAT GLOBAL'	--T.TENANT_NAME
,''					--UAA.ACD_ID_EXTENSION
,UAA.SCHEDULER_ACL_NAME
,UAA.EMPLOYEE_ID
,UAA.STD_TENANT_START_DATE_TIME_KEY
,UAA.RESOURCE_NAME

,(ISNULL(UAA.AIR_DAY_TYPE,''))					--AS AIR_DAY_TYPE
,(ISNULL(UAA.AIR_ACW_FONT_COLOR,''))			--AS AIR_ACW_FONT_COLOR
,(ISNULL(UAA.MIN_GUARANTEE_MINUTES,0.000))		--AS MIN_GUARANTEE_MINUTES
,(ISNULL(UAA.MIN_GUARANTEE_TYPE,''))			--AS MIN_GUARANTEE_TYPE
,(ISNULL(UAA.AUTHORIZED_TO_INVOICE_TYPE,''))	--AS AUTHORIZED_TO_INVOICE_TYPE
,(ISNULL(UAA.HAS_HOLIDAYS,''))					--AS HAS_HOLIDAYS
,(ISNULL(UAA.INCLUDE_IN_CAS,''))				--AS INCLUDE_IN_CAS
,(ISNULL(UAA.READY_FOR_XML,''))					--AS READY_FOR_XML
,(ISNULL(UAA.SHOW_ID_EXTS,''))					--AS SHOW_ID_EXTS

,(ISNULL(UAA.ANSWERED_SESSIONS			,0))
,(ISNULL(UAA.RONA_CNT					,0))
,(ISNULL(UAA.DID_CNT					,0))
,(ISNULL(UAA.DOD_CNT					,0))
,(ISNULL(UAA.STARTED_IMS				,0))
,(ISNULL(UAA.STARTED_CALLS				,0))
,(ISNULL(UAA.ESCALATIONS				,0))
,(ISNULL(UAA.CONSULTS					,0))
,(ISNULL(UAA.TRANSFERS					,0))
,(ISNULL(UAA.SUPERVISOR_JOINS			,0))

,(ISNULL(UAA.AVAILABLE_TIME				,0.00))
,(ISNULL(UAA.RING_TIME					,0.00))
,(ISNULL(UAA.CONNECT_IM_SESSION_TIME	,0.00))
,(ISNULL(UAA.CONNECT_PHONE_CALL_TIME	,0.00))
,(ISNULL(UAA.CONNECT_DID_CALL_TIME		,0.00))
,(ISNULL(UAA.CONNECT_DOD_CALL_TIME		,0.00))
,(ISNULL(UAA.NON_CONNECT_CALL_TIME		,0.00))
,(ISNULL(UAA.ACW_TIME					,0.00))
,(ISNULL(UAA.RONA_TIME					,0.00))
,(ISNULL(UAA.UNAVAILABLE_TIME			,0.00))
,(ISNULL(UAA.OFF_WORK_TIME				,0.00))
,(ISNULL(UAA.LOGGED_OUT_TIME			,0.00))
,(ISNULL(UAA.ON_PHONE_TIME				,0.00))
,(ISNULL(UAA.Q_ON_PHONE_TIME			,0.00))
,(ISNULL(UAA.TALK_TIME					,0.00))
,(ISNULL(UAA.Q_TALK_TIME				,0.00))
,(ISNULL(UAA.HANDLE_TIME				,0.00))
,(ISNULL(UAA.Q_HANDLE_TIME				,0.00))

,(ISNULL(UAA.CPROD						,0.00))
,(ISNULL(UAA.MING						,0.00))
,(ISNULL(UAA.AUT2						,0.00))

--SELECT * FROM WSOL_TB_IMPORTS_MONAT_INVOICING

FROM
(	SELECT	
	-- UA.TENANT_KEY
	 ''									AS ACD_ID_EXTENSION
	,UA.INVOICE_ID					    AS SCHEDULER_ACL_NAME
	,UA.FF_AGENT_NAME					AS EMPLOYEE_ID 
	,UA.STD_TENANT_START_DATE_TIME_KEY
	,MAX(UA.RESOURCE_NAME)              AS RESOURCE_NAME
	,MAX(UA.AIR_DAY_TYPE)               AS AIR_DAY_TYPE
	,'BLACK'                            AS AIR_ACW_FONT_COLOR
	,0									AS MIN_GUARANTEE_MINUTES
	,''									AS MIN_GUARANTEE_TYPE
	,''									AS AUTHORIZED_TO_INVOICE_TYPE
	,'Y'								AS HAS_HOLIDAYS
	,''									AS INCLUDE_IN_CAS
	,''									AS READY_FOR_XML
	,''									AS SHOW_ID_EXTS

	,SUM(ISNULL(UA.ANSWERED_SESSIONS		,0))	AS ANSWERED_SESSIONS
	,SUM(ISNULL(UA.RONA_CNT					,0))	AS RONA_CNT
	,SUM(ISNULL(UA.DID_CNT					,0))	AS DID_CNT
	,SUM(ISNULL(UA.DOD_CNT					,0))	AS DOD_CNT
	,SUM(ISNULL(UA.STARTED_IMS				,0))	AS STARTED_IMS
	,SUM(ISNULL(UA.STARTED_CALLS			,0))	AS STARTED_CALLS
	,SUM(ISNULL(UA.ESCALATIONS				,0))	AS ESCALATIONS
	,SUM(ISNULL(UA.CONSULTS					,0))	AS CONSULTS
	,SUM(ISNULL(UA.TRANSFERS				,0))	AS TRANSFERS
	,SUM(ISNULL(UA.SUPERVISOR_JOINS			,0))	AS SUPERVISOR_JOINS

	,SUM(ISNULL(UA.AVAILABLE_TIME			,0.00))	AS AVAILABLE_TIME
	,SUM(ISNULL(UA.RING_TIME				,0.00))	AS RING_TIME
	,SUM(ISNULL(UA.CONNECT_IM_SESSION_TIME	,0.00))	AS CONNECT_IM_SESSION_TIME
	,SUM(ISNULL(UA.CONNECT_PHONE_CALL_TIME	,0.00))	AS CONNECT_PHONE_CALL_TIME
	,SUM(ISNULL(UA.CONNECT_DID_CALL_TIME	,0.00))	AS CONNECT_DID_CALL_TIME
	,SUM(ISNULL(UA.CONNECT_DOD_CALL_TIME	,0.00))	AS CONNECT_DOD_CALL_TIME
	,SUM(ISNULL(UA.NON_CONNECT_CALL_TIME	,0.00))	AS NON_CONNECT_CALL_TIME
	,SUM(ISNULL(UA.ACW_TIME					,0.00))	AS ACW_TIME
	,SUM(ISNULL(UA.RONA_TIME				,0.00))	AS RONA_TIME
	,SUM(ISNULL(UA.UNAVAILABLE_TIME			,0.00))	AS UNAVAILABLE_TIME
	,SUM(ISNULL(UA.OFF_WORK_TIME			,0.00))	AS OFF_WORK_TIME
	,SUM(ISNULL(UA.LOGGED_OUT_TIME			,0.00))	AS LOGGED_OUT_TIME
	,SUM(ISNULL(UA.ON_PHONE_TIME			,0.00))	AS ON_PHONE_TIME
	,SUM(ISNULL(UA.Q_ON_PHONE_TIME			,0.00)) AS Q_ON_PHONE_TIME
	,SUM(ISNULL(UA.TALK_TIME				,0.00)) AS TALK_TIME
	,SUM(ISNULL(UA.Q_TALK_TIME				,0.00)) AS Q_TALK_TIME
	,SUM(ISNULL(UA.HANDLE_TIME				,0.00)) AS HANDLE_TIME
	,SUM(ISNULL(UA.Q_HANDLE_TIME			,0.00)) AS Q_HANDLE_TIME
	
	,SUM(ISNULL(UA.CPROD					,0.00))	AS CPROD
	,SUM(ISNULL(UA.MING						,0.00))	AS MING
	,SUM(ISNULL(UA.AUT2						,0.00))	AS AUT2
	
	--  SELECT *
	FROM            WSOL_TB_IMPORTS_MONAT_INVOICING	UA
	INNER JOIN      DATE_TIME						DT	ON DT.DATE_TIME_KEY = UA.STD_TENANT_START_DATE_TIME_KEY

	WHERE DT.CAL_DATE >= @DTM_BEG AND DT.CAL_DATE <  @DTM_END
		
	GROUP BY 
	 UA.INVOICE_ID
	,UA.FF_AGENT_NAME
	,UA.STD_TENANT_START_DATE_TIME_KEY
) UAA

--==============================================================
-- CREATE TEMPORARY TABLE TO RETURN RESULTS
--==============================================================
IF OBJECT_ID('TEMPDB..#IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN') IS NOT NULL BEGIN
   DROP TABLE #IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN
END
CREATE TABLE #IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN
(GRPNO                 INT
,TENANT_NAME           VARCHAR(50)
,ID_EXT                VARCHAR(3)
,SCHEDULER_ACL_NAME    VARCHAR(100)
,EMPLOYEE_ID           VARCHAR(50)
,RESOURCE_NAME         VARCHAR(100)
,CAL_YEAR_MONTH_NUM    VARCHAR(10)
,DATE_INTERVAL         VARCHAR(50)
,TIME_INTERVAL         VARCHAR(10)

,AIR_DAY_TYPE				varchar(1)
,AIR_ACW_FONT_COLOR			varchar(50)
,MIN_GUARANTEE_MINUTES		decimal(6,3)
,MIN_GUARANTEE_TYPE			varchar(50)
,AUTHORIZED_TO_INVOICE_TYPE	varchar(50)
,HAS_HOLIDAYS				varchar(1)
,INCLUDE_IN_CAS				varchar(1)
,READY_FOR_XML				varchar(1)
,SHOW_ID_EXTS				varchar(1)

,AIR_HOLIDAY_IN				VARCHAR(1)
,ALL_AUTHORIZED_TIME		DECIMAL(10,2)

,
[ANSWERED_SESSIONS] [int] NULL,
[RONA_CNT] [int] NULL,
[DID_CNT] [int] NULL,
[DOD_CNT] [int] NULL,
[STARTED_IMS] [int] NULL,
[STARTED_CALLS] [int] NULL,
[ESCALATIONS] [int] NULL,
[CONSULTS] [int] NULL,
[TRANSFERS] [int] NULL,
[SUPERVISOR_JOINS] [int] NULL,
[AVAILABLE_TIME] [decimal](10, 2) NULL,
[RING_TIME] [decimal](10, 2) NULL,
[CONNECT_IM_SESSION_TIME] [decimal](10, 2) NULL,
[CONNECT_PHONE_CALL_TIME] [decimal](10, 2) NULL,
[CONNECT_DID_CALL_TIME] [decimal](10, 2) NULL,
[CONNECT_DOD_CALL_TIME] [decimal](10, 2) NULL,
[NON_CONNECT_CALL_TIME] [decimal](10, 2) NULL,
[ACW_TIME] [decimal](10, 2) NULL,
[RONA_TIME] [decimal](10, 2) NULL,
[UNAVAILABLE_TIME] [decimal](10, 2) NULL,
[OFF_WORK_TIME] [decimal](10, 2) NULL,
[LOGGED_OUT_TIME] [decimal](10, 2) NULL,
[ON_PHONE_TIME] [decimal](10, 2) NULL,
[Q_ON_PHONE_TIME] [decimal](10, 2) NULL,
[TALK_TIME] [decimal](10, 2) NULL,
[Q_TALK_TIME] [decimal](10, 2) NULL,
[HANDLE_TIME] [decimal](10, 2) NULL,
[Q_HANDLE_TIME] [decimal](10, 2) NULL,
[CPROD] [decimal](10, 2) NULL,
[MING] [decimal](10, 2) NULL,
[AUT2] [decimal](10, 2) NULL,
)

--==================================
-- POPULATE TEMPORARY TABLE
--==================================
INSERT INTO #IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN
SELECT
 20								--AS GRPNO  
,ISNULL(GG.TENANT_NAME       ,'') AS TENANT_NAME
,ISNULL(GG.ID_EXT            ,'') AS ID_EXT
,ISNULL(GG.SCHEDULER_ACL_NAME,'') AS SCHEDULER_ACL_NAME
,ISNULL(GG.EMPLOYEE_ID       ,'') AS EMPLOYEE_ID
,ISNULL(GG.RESOURCE_NAME     ,'') AS RESOURCE_NAME
,ISNULL(GG.CAL_YEAR_MONTH_NUM,'') AS CAL_YEAR_MONTH_NUM
,ISNULL(GG.DI                ,'') AS DI
,ISNULL(GG.TI                ,'') AS TI

,(GG.AIR_DAY_TYPE)                AS AIR_DAY_TYPE
,(GG.AIR_ACW_FONT_COLOR)          AS AIR_ACW_FONT_COLOR
,(GG.MIN_GUARANTEE_MINUTES)       AS MIN_GUARANTEE_MINUTES
,(GG.MIN_GUARANTEE_TYPE)          AS MIN_GUARANTEE_TYPE
,(GG.AUTHORIZED_TO_INVOICE_TYPE)  AS AUTHORIZED_TO_INVOICE_TYPE
,(GG.HAS_HOLIDAYS)                AS HAS_HOLIDAYS
,(GG.INCLUDE_IN_CAS)              AS INCLUDE_IN_CAS
,(GG.READY_FOR_XML)               AS READY_FOR_XML
,(GG.SHOW_ID_EXTS)                AS SHOW_ID_EXTS

,'' --AS AIR_HOLIDAY_IN
,0  --AS ALL_AUTHORIZED_TIME

,CAST((ISNULL(GG.ANSWERED_SESSIONS			,0	 ))		  AS INT)			AS ANSWERED_SESSIONS
,CAST((ISNULL(GG.RONA_CNT			,0	 ))		  AS INT)			AS RONA_CNT
,CAST((ISNULL(GG.DID_CNT			,0	 ))		  AS INT)			AS DID_CNT
,CAST((ISNULL(GG.DOD_CNT			,0	 ))		  AS INT)			AS DOD_CNT
,CAST((ISNULL(GG.STARTED_IMS		,0	 ))		  AS INT)			AS STARTED_IMS
,CAST((ISNULL(GG.STARTED_CALLS		,0	 ))		  AS INT)			AS STARTED_CALLS
,CAST((ISNULL(GG.ESCALATIONS		,0	 ))		  AS INT)			AS ESCALATIONS
,CAST((ISNULL(GG.CONSULTS			,0	 ))		  AS INT)			AS CONSULTS
,CAST((ISNULL(GG.TRANSFERS			,0	 ))		  AS INT)			AS TRANSFERS
,CAST((ISNULL(GG.SUPERVISOR_JOINS	,0	 ))		  AS INT)			AS SUPERVISOR_JOINS

,CAST((ISNULL(GG.AVAILABLE_TIME				,0.00)) / @DS AS DECIMAL(10,2))	AS AVAILABLE_TIME
,CAST((ISNULL(GG.RING_TIME					,0.00)) / @DS AS DECIMAL(10,2))	AS RING_TIME
,CAST((ISNULL(GG.CONNECT_IM_SESSION_TIME	,0.00)) / @DS AS DECIMAL(10,2))	AS CONNECT_IM_SESSION_TIME
,CAST((ISNULL(GG.CONNECT_PHONE_CALL_TIME	,0.00)) / @DS AS DECIMAL(10,2))	AS CONNECT_PHONE_CALL_TIME
,CAST((ISNULL(GG.CONNECT_DID_CALL_TIME		,0.00)) / @DS AS DECIMAL(10,2))	AS CONNECT_DID_CALL_TIME
,CAST((ISNULL(GG.CONNECT_DOD_CALL_TIME		,0.00)) / @DS AS DECIMAL(10,2))	AS CONNECT_DOD_CALL_TIME
,CAST((ISNULL(GG.NON_CONNECT_CALL_TIME		,0.00)) / @DS AS DECIMAL(10,2))	AS NON_CONNECT_CALL_TIME
,CAST((ISNULL(GG.ACW_TIME					,0.00)) / @DS AS DECIMAL(10,2))	AS ACW_TIME
,CAST((ISNULL(GG.RONA_TIME					,0.00)) / @DS AS DECIMAL(10,2)) AS RONA_TIME
,CAST((ISNULL(GG.UNAVAILABLE_TIME			,0.00)) / @DS AS DECIMAL(10,2)) AS UNAVAILABLE_TIME
,CAST((ISNULL(GG.OFF_WORK_TIME				,0.00)) / @DS AS DECIMAL(10,2)) AS OFF_WORK_TIME
,CAST((ISNULL(GG.LOGGED_OUT_TIME			,0.00)) / @DS AS DECIMAL(10,2)) AS LOGGED_OUT_TIME
,CAST((ISNULL(GG.ON_PHONE_TIME				,0.00)) / @DS AS DECIMAL(10,2)) AS ON_PHONE_TIME
,CAST((ISNULL(GG.Q_ON_PHONE_TIME			,0.00)) / @DS AS DECIMAL(10,2)) AS Q_ON_PHONE_TIME
,CAST((ISNULL(GG.TALK_TIME					,0.00)) / @DS AS DECIMAL(10,2)) AS TALK_TIME
,CAST((ISNULL(GG.Q_TALK_TIME				,0.00)) / @DS AS DECIMAL(10,2)) AS Q_TALK_TIME
,CAST((ISNULL(GG.HANDLE_TIME				,0.00)) / @DS AS DECIMAL(10,2)) AS HANDLE_TIME
,CAST((ISNULL(GG.Q_HANDLE_TIME				,0.00)) / @DS AS DECIMAL(10,2)) AS Q_HANDLE_TIME

,CAST((ISNULL(GG.CPROD						,0.00)) / @DS AS DECIMAL(10,2))	AS CPROD
,CAST((ISNULL(GG.MING						,0.00)) / @DS AS DECIMAL(10,2))	AS MING
,CAST((ISNULL(GG.AUT2						,0.00)) / @DS AS DECIMAL(10,2))	AS AUT2


FROM  -- GG STARTS HERE:
(	SELECT
	 ISNULL(SW.TENANT_NAME,'')        AS TENANT_NAME
	,ISNULL(SW.ID_EXT,'')             AS ID_EXT
	,ISNULL(SW.SCHEDULER_ACL_NAME,'') AS SCHEDULER_ACL_NAME
	,ISNULL(SW.EMPLOYEE_ID,'')		  AS EMPLOYEE_ID
	,MAX(RESOURCE_NAME)               AS RESOURCE_NAME

	,(CASE WHEN @TIME_INTERVAL IN ('MR') THEN DT.CAL_YEAR_MONTH_NUM ELSE '' END ) AS CAL_YEAR_MONTH_NUM
	,(CASE WHEN @TIME_INTERVAL IN ('MR') THEN LEFT(DT.CAL_MONTH_NAME,3) + ' ' + DT.CAL_YEAR_STRING
		   WHEN @TIME_INTERVAL IN ('DR') THEN ''  ELSE DT.CAL_DATE_STRING END ) AS DI
	,(CASE --WHEN @TIME_INTERVAL = '15' THEN DT.LABEL_HH24 + ':' + DT.LABEL_MI
		   --WHEN @TIME_INTERVAL = '30' THEN DT.LABEL_HH24 + ':' + DT.LABEL_30MI
		   WHEN @TIME_INTERVAL = 'HR' THEN DT.LABEL_HH24 ELSE '' END ) AS TI

	,MAX(SW.AIR_DAY_TYPE)               AS AIR_DAY_TYPE
	,MAX(SW.AIR_ACW_FONT_COLOR)         AS AIR_ACW_FONT_COLOR
	,MAX(SW.MIN_GUARANTEE_MINUTES)      AS MIN_GUARANTEE_MINUTES
	,MAX(SW.MIN_GUARANTEE_TYPE)         AS MIN_GUARANTEE_TYPE
	,MAX(SW.AUTHORIZED_TO_INVOICE_TYPE) AS AUTHORIZED_TO_INVOICE_TYPE
	,MAX(SW.HAS_HOLIDAYS)               AS HAS_HOLIDAYS
	,MAX(SW.INCLUDE_IN_CAS)             AS INCLUDE_IN_CAS
	,MAX(SW.READY_FOR_XML)              AS READY_FOR_XML
	,MAX(SW.SHOW_ID_EXTS)               AS SHOW_ID_EXTS

	,SUM(ISNULL(SW.ANSWERED_SESSIONS	,0	 )) AS ANSWERED_SESSIONS
	,SUM(ISNULL(SW.RONA_CNT				,0	 )) AS RONA_CNT
	,SUM(ISNULL(SW.DID_CNT				,0	 )) AS DID_CNT
	,SUM(ISNULL(SW.DOD_CNT				,0	 )) AS DOD_CNT
	,SUM(ISNULL(SW.STARTED_IMS			,0	 )) AS STARTED_IMS
	,SUM(ISNULL(SW.STARTED_CALLS		,0	 )) AS STARTED_CALLS
	,SUM(ISNULL(SW.ESCALATIONS			,0	 )) AS ESCALATIONS
	,SUM(ISNULL(SW.CONSULTS				,0	 )) AS CONSULTS
	,SUM(ISNULL(SW.TRANSFERS			,0	 )) AS TRANSFERS
	,SUM(ISNULL(SW.SUPERVISOR_JOINS		,0	 )) AS SUPERVISOR_JOINS

	,SUM(ISNULL(SW.AVAILABLE_TIME			,0.00))	AS AVAILABLE_TIME
	,SUM(ISNULL(SW.RING_TIME				,0.00))	AS RING_TIME
	,SUM(ISNULL(SW.CONNECT_IM_SESSION_TIME	,0.00))	AS CONNECT_IM_SESSION_TIME
	,SUM(ISNULL(SW.CONNECT_PHONE_CALL_TIME	,0.00))	AS CONNECT_PHONE_CALL_TIME
	,SUM(ISNULL(SW.CONNECT_DID_CALL_TIME	,0.00))	AS CONNECT_DID_CALL_TIME
	,SUM(ISNULL(SW.CONNECT_DOD_CALL_TIME	,0.00))	AS CONNECT_DOD_CALL_TIME
	,SUM(ISNULL(SW.NON_CONNECT_CALL_TIME	,0.00))	AS NON_CONNECT_CALL_TIME
	,SUM(ISNULL(SW.ACW_TIME					,0.00))	AS ACW_TIME
	,SUM(ISNULL(SW.RONA_TIME				,0.00))	AS RONA_TIME
	,SUM(ISNULL(SW.UNAVAILABLE_TIME			,0.00))	AS UNAVAILABLE_TIME
	,SUM(ISNULL(SW.OFF_WORK_TIME			,0.00))	AS OFF_WORK_TIME
	,SUM(ISNULL(SW.LOGGED_OUT_TIME			,0.00))	AS LOGGED_OUT_TIME
	,SUM(ISNULL(SW.ON_PHONE_TIME			,0.00))	AS ON_PHONE_TIME
	,SUM(ISNULL(SW.Q_ON_PHONE_TIME			,0.00))	AS Q_ON_PHONE_TIME
	,SUM(ISNULL(SW.TALK_TIME				,0.00))	AS TALK_TIME
	,SUM(ISNULL(SW.Q_TALK_TIME				,0.00))	AS Q_TALK_TIME
	,SUM(ISNULL(SW.HANDLE_TIME				,0.00))	AS HANDLE_TIME
	,SUM(ISNULL(SW.Q_HANDLE_TIME			,0.00))	AS Q_HANDLE_TIME
	
	,SUM(ISNULL(SW.CPROD					,0.00))	AS CPROD
	,SUM(ISNULL(SW.MING						,0.00))	AS MING
	,SUM(ISNULL(SW.AUT2						,0.00))	AS AUT2
	
	FROM            #IMPORTS_MONAT_AGENT_INVOICING_REPORTS	SW
	INNER JOIN      DATE_TIME								DT   ON DT.DATE_TIME_KEY	=	SW.STD_TENANT_START_DATE_TIME_KEY

	GROUP BY 
	 ISNULL(SW.TENANT_NAME,'')        --AS TENANT_NAME
	,ISNULL(SW.ID_EXT,'')             --AS ID_EXT
	,ISNULL(SW.SCHEDULER_ACL_NAME,'') --AS SCHEDULER_ACL_NAME
	,ISNULL(SW.EMPLOYEE_ID,'')		  --AS EMPLOYEE_ID

	,(CASE WHEN @TIME_INTERVAL IN ('MR') THEN DT.CAL_YEAR_MONTH_NUM ELSE '' END ) --AS CAL_YEAR_MONTH_NUM
	,(CASE WHEN @TIME_INTERVAL IN ('MR') THEN LEFT(DT.CAL_MONTH_NAME,3) + ' ' + DT.CAL_YEAR_STRING
		   WHEN @TIME_INTERVAL IN ('DR') THEN ''  ELSE DT.CAL_DATE_STRING END ) --AS DI
	,(CASE --WHEN @TIME_INTERVAL = '15' THEN DT.LABEL_HH24 + ':' + DT.LABEL_MI
		   --WHEN @TIME_INTERVAL = '30' THEN DT.LABEL_HH24 + ':' + DT.LABEL_30MI
		   WHEN @TIME_INTERVAL = 'HR' THEN DT.LABEL_HH24 ELSE '' END ) --AS TI

) GG

--==================================
--IS A HOLIDAY DATE IN THE MIX:
--==================================
DECLARE @HOLIDAY_IN VARCHAR(1)
SET @HOLIDAY_IN = 'N'
DECLARE @I INT
SET @I = (SELECT COUNT(*) FROM #IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN WHERE AIR_DAY_TYPE = 'H')  --  AND INCLUDE_IN_CAS = 'Y')
IF @I > 0 BEGIN
	SET @HOLIDAY_IN = 'Y'
END
--==================================
UPDATE #IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN SET
 AIR_HOLIDAY_IN = @HOLIDAY_IN

--======================================================
--UPDATE TOTALS LINE ON REPORT FOR STANDARD AND HOLIDAY:
--======================================================
UPDATE #IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN SET
 ALL_AUTHORIZED_TIME = ISNULL(LOJ.ALL_AUTHORIZED_TIME,0.0)
FROM #IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN TA
LEFT OUTER JOIN
(	SELECT
	 SCHEDULER_ACL_NAME
	,EMPLOYEE_ID
	,AIR_DAY_TYPE
	,SUM(AUT2) AS ALL_AUTHORIZED_TIME
	FROM #IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN 
	GROUP BY 
	 SCHEDULER_ACL_NAME
	,EMPLOYEE_ID
	,AIR_DAY_TYPE
) LOJ ON LOJ.SCHEDULER_ACL_NAME = TA.SCHEDULER_ACL_NAME
	 AND LOJ.EMPLOYEE_ID        = TA.EMPLOYEE_ID
	 AND LOJ.AIR_DAY_TYPE       = TA.AIR_DAY_TYPE

--==================================
--RETURN DATA
--==================================
--==================================
--POPULATE TABLE READ BY SSIS TO GET END DATE OF DATA REPORT/FILE HAS BEEN RUN FOR:
--==================================
INSERT INTO WSOL_TB_FILENAMES_FOR_SSIS
(SQL_JOB_NAME
,FILENM
,CST_ROW_CREATED_TIME)
SELECT
 'uspIMPORTS_MONAT_AGENT_INVOICING_REPORTS'				--SQL_JOB_NAME
,REPLACE(CONVERT(VARCHAR(10),@DTM_END - 1,111),'/','')  --FILENM   YYYYMMDD_...
,dbo.GETDATE()											--CST_ROW_CREATED_TIME

--=====================================
--RETURN DATASET:
--=====================================
SELECT 
 CASE WHEN @DUR_IN = 'SS' THEN '' ELSE 'F' END AS DUR_FORMAT
,CONVERT(VARCHAR(10),@DTM_BEG,101) + '-' + CONVERT(VARCHAR(10),@DTM_END - 1,101)  AS DATE_RANGE
,V.*

FROM      #IMPORTS_MONAT_AGENT_INVOICING_REPORTS_RTN  V

ORDER BY 
 V.GRPNO
,V.SCHEDULER_ACL_NAME
,V.RESOURCE_NAME
,V.EMPLOYEE_ID
,V.CAL_YEAR_MONTH_NUM
,V.DATE_INTERVAL
,V.TIME_INTERVAL  --SINCE IN MILITARY TIME!




--===============================
EARLY_EXIT:
--===============================
--IMPOSSIBLE:  SELECT 1/0    POSSIBLE:  SELECT 0/1