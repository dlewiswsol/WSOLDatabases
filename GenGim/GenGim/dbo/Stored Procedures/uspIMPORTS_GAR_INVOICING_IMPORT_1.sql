CREATE PROCEDURE [dbo].[uspIMPORTS_GAR_INVOICING_IMPORT]
AS
SET NOCOUNT ON

--  EXECUTE [dbo].[uspIMPORTS_GAR_INVOICING_IMPORT]

--  SELECT * FROM WSOL_TB_IMPORTS_GAR_INVOICING_1

--  Durations in file are in SECONDS. No conversion needed.

--=============================================
DECLARE @TENANT_KEY INT
SET @TENANT_KEY =       900705  --GAR
--=============================================
DELETE FROM YZ_TB_ERRORS_FOUND 
WHERE TENANT_KEY = @TENANT_KEY
  AND SUB_GROUP_NAME = 'GAR_INVOICING'    --  SELECT * FROM YZ_TB_ERRORS_FOUND WHERE TENANT_KEY = 900705
--=============================================

--==========================================================================================================================================
--USING @WS_ROW_CREATED_TIME FOR ALL INSERTS WILL ALLOW ME TO DELETE SPECIFIC INSERT PROCESSES/FILES.  MOST IMPORTANT!!!  FOR ALL TABLES.
--  IN CASE OF EMERGENCY, CRACK GLASS.
--==========================================================================================================================================
DECLARE @WS_ROW_CREATED_TIME AS DATETIME
SET @WS_ROW_CREATED_TIME = dbo.getdate()  --CLOSE ENOUGH TO ACTUAL INSERT TIME!
--===================================================================================

--======================================================================
--HANDLE COLUMN HEADER AND JUNK RECORDS:
--======================================================================
INSERT INTO WSOL_TB_IMPORTS_GAR_INVOICING_BAD
(BAD_IMPORTS_NO
,BAD_IMPORTS_FILE_TYPE
,WS_ROW_CREATED_TIME
,FF_DATE
,FF_INTERVAL_30_MINUTES
,FF_AGENT_NAME
,FF_UNAVAILABLE_CODE
,FF_SKILL_NAME
,FF_TEAM_NAME
,FF_LOGIN_TIME
,FF_AVAILABLE_TIME
,FF_UNAVAILABLE_TIME_MINUS_ACW
,FF_TALK_TIME
,FF_HOLD_TIME
,FF_ACW_TIME
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,[DATETIME]
,HOUR_INTERVAL
,AGENT_NAME
,SKILL_NAME
,TEAM_NAME
,LOGIN_TIME
,AVAILABLE_TIME
,UNAVAILABLE_SYSTEM_PENDING_TIME
,UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,UNAVAILABLE_DEDICATED_RESOURCE_TIME
,UNAVAILABLE_TIME_MINUS_ACW
,TALK_TIME
,HOLD_TIME
,ACW_TIME
,TRUE_OUTBOUND_TALK_TIME
,TOTAL_TALK
,CPROD
,MING
,AUT2
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,STD_TENANT_START_DATE_TIME_KEY
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,RESOURCE_NAME
,AIRITKDUR
,AIRIACDUR
,PAY_GROUP)

SELECT
 24                     --BAD_IMPORTS_NO  --'Junk Record'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE  --'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W1.FF_DATE
,W1.FF_INTERVAL_30_MINUTES
,W1.FF_AGENT_NAME
,W1.FF_UNAVAILABLE_CODE
,W1.FF_SKILL_NAME
,W1.FF_TEAM_NAME
,W1.FF_LOGIN_TIME
,W1.FF_AVAILABLE_TIME
,W1.FF_UNAVAILABLE_TIME_MINUS_ACW
,W1.FF_TALK_TIME
,W1.FF_HOLD_TIME
,W1.FF_ACW_TIME
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.HOUR_INTERVAL
,W1.AGENT_NAME
,W1.SKILL_NAME
,W1.TEAM_NAME
,W1.LOGIN_TIME
,W1.AVAILABLE_TIME
,W1.UNAVAILABLE_SYSTEM_PENDING_TIME
,W1.UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,W1.UNAVAILABLE_DEDICATED_RESOURCE_TIME
,W1.UNAVAILABLE_TIME_MINUS_ACW
,W1.TALK_TIME
,W1.HOLD_TIME
,W1.ACW_TIME
,W1.TRUE_OUTBOUND_TALK_TIME
,W1.TOTAL_TALK
,W1.CPROD
,W1.MING
,W1.AUT2
,W1.EMAIL
,W1.ID_EXT
,W1.SCHEDULER_ACL_NAME
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.CAL_DATE
,W1.TENANT_KEY
,W1.AIR_DAY_TYPE
,W1.AIR_ACW_FONT_COLOR
,W1.MIN_GUARANTEE_RATE
,W1.MIN_GUARANTEE_TYPE
,W1.AUTHORIZED_TO_INVOICE_TYPE
,W1.HAS_HOLIDAYS
,W1.INCLUDE_IN_CAS
,W1.READY_FOR_XML
,W1.SHOW_ID_EXTS
,W1.INVOICE_ID
,W1.RESOURCE_NAME
,W1.AIRITKDUR
,W1.AIRIACDUR
,W1.PAY_GROUP

FROM           WSOL_TB_IMPORTS_GAR_INVOICING_1    W1
WHERE ISNULL(W1.FF_DATE,'') IN ('Textbox1','Date','col1_Value','')

--======================================================================
--DELETE COLUMN HEADER AND JUNK RECORDS;
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_GAR_INVOICING_1
WHERE ISNULL(FF_DATE,'') IN ('Textbox1','Date','col1_Value','')
--====================================================================


--======================================================================
--HANDLE WS ADMIN RECORDS:
--======================================================================
INSERT INTO WSOL_TB_IMPORTS_GAR_INVOICING_BAD
(BAD_IMPORTS_NO
,BAD_IMPORTS_FILE_TYPE
,WS_ROW_CREATED_TIME
,FF_DATE
,FF_INTERVAL_30_MINUTES
,FF_AGENT_NAME
,FF_UNAVAILABLE_CODE
,FF_SKILL_NAME
,FF_TEAM_NAME
,FF_LOGIN_TIME
,FF_AVAILABLE_TIME
,FF_UNAVAILABLE_TIME_MINUS_ACW
,FF_TALK_TIME
,FF_HOLD_TIME
,FF_ACW_TIME
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,[DATETIME]
,HOUR_INTERVAL
,AGENT_NAME
,SKILL_NAME
,TEAM_NAME
,LOGIN_TIME
,AVAILABLE_TIME
,UNAVAILABLE_SYSTEM_PENDING_TIME
,UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,UNAVAILABLE_DEDICATED_RESOURCE_TIME
,UNAVAILABLE_TIME_MINUS_ACW
,TALK_TIME
,HOLD_TIME
,ACW_TIME
,TRUE_OUTBOUND_TALK_TIME
,TOTAL_TALK
,CPROD
,MING
,AUT2
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,STD_TENANT_START_DATE_TIME_KEY
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,RESOURCE_NAME
,AIRITKDUR
,AIRIACDUR
,PAY_GROUP)

SELECT
 25                     --BAD_IMPORTS_NO  --'WS Admin Record'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE  --'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W1.FF_DATE
,W1.FF_INTERVAL_30_MINUTES
,W1.FF_AGENT_NAME
,W1.FF_UNAVAILABLE_CODE
,W1.FF_SKILL_NAME
,W1.FF_TEAM_NAME
,W1.FF_LOGIN_TIME
,W1.FF_AVAILABLE_TIME
,W1.FF_UNAVAILABLE_TIME_MINUS_ACW
,W1.FF_TALK_TIME
,W1.FF_HOLD_TIME
,W1.FF_ACW_TIME
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.HOUR_INTERVAL
,W1.AGENT_NAME
,W1.SKILL_NAME
,W1.TEAM_NAME
,W1.LOGIN_TIME
,W1.AVAILABLE_TIME
,W1.UNAVAILABLE_SYSTEM_PENDING_TIME
,W1.UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,W1.UNAVAILABLE_DEDICATED_RESOURCE_TIME
,W1.UNAVAILABLE_TIME_MINUS_ACW
,W1.TALK_TIME
,W1.HOLD_TIME
,W1.ACW_TIME
,W1.TRUE_OUTBOUND_TALK_TIME
,W1.TOTAL_TALK
,W1.CPROD
,W1.MING
,W1.AUT2
,W1.EMAIL
,W1.ID_EXT
,W1.SCHEDULER_ACL_NAME
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.CAL_DATE
,W1.TENANT_KEY
,W1.AIR_DAY_TYPE
,W1.AIR_ACW_FONT_COLOR
,W1.MIN_GUARANTEE_RATE
,W1.MIN_GUARANTEE_TYPE
,W1.AUTHORIZED_TO_INVOICE_TYPE
,W1.HAS_HOLIDAYS
,W1.INCLUDE_IN_CAS
,W1.READY_FOR_XML
,W1.SHOW_ID_EXTS
,W1.INVOICE_ID
,W1.RESOURCE_NAME
,W1.AIRITKDUR
,W1.AIRIACDUR
,W1.PAY_GROUP
FROM           WSOL_TB_IMPORTS_GAR_INVOICING_1    W1
WHERE ISNULL(W1.FF_TEAM_NAME,'') = 'WS Admin'

--======================================================================
--DELETE WS ADMIN RECORDS;
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_GAR_INVOICING_1
WHERE ISNULL(FF_TEAM_NAME,'') = 'WS Admin'
--======================================================================

--======================================================================
--HANDLE SPECIAL CHARACTER CASE
--======================================================================
UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 FF_AGENT_NAME = 'WS1-Rivera, Natasha'
WHERE FF_AGENT_NAME = 'WS1-Rivera, NatashaÂ Rivera'


--===============================================================================
--POPULATE ADDITIONAL FIELDS IN WORK (_1) TABLE THAT WEREN'T IN IMPORTED FILE:
--===============================================================================
UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 [DATETIME]					= CAST(CONVERT(VARCHAR(10), FF_DATE) + ' ' + CONVERT(VARCHAR(2), LEFT(FF_INTERVAL_30_MINUTES,2)) + ':00:00' AS DATETIME)
,HOUR_INTERVAL				= CONVERT(VARCHAR(2), LEFT(FF_INTERVAL_30_MINUTES,2))
,AGENT_NAME					= SUBSTRING(FF_AGENT_NAME, 5, LEN(FF_AGENT_NAME))
,SKILL_NAME					= ISNULL(FF_SKILL_NAME,'')
,TEAM_NAME					= ISNULL(FF_TEAM_NAME ,'')
,LOGIN_TIME					= CAST(ISNULL(NULLIF(FF_LOGIN_TIME					,''),'0.00') AS DECIMAL(10,2))
,AVAILABLE_TIME				= CAST(ISNULL(NULLIF(FF_AVAILABLE_TIME				,''),'0.00') AS DECIMAL(10,2))
,UNAVAILABLE_TIME_MINUS_ACW	= CAST(ISNULL(NULLIF(FF_UNAVAILABLE_TIME_MINUS_ACW	,''),'0.00') AS DECIMAL(10,2))
,HOLD_TIME					= CAST(ISNULL(NULLIF(FF_HOLD_TIME					,''),'0.00') AS DECIMAL(10,2))
,ACW_TIME					= CAST(ISNULL(NULLIF(FF_ACW_TIME					,''),'0.00') AS DECIMAL(10,2))
,TALK_TIME					= CASE WHEN FF_SKILL_NAME = 'Outbound' 
									THEN 0.00 
								   ELSE CAST(ISNULL(NULLIF(FF_TALK_TIME			,''),'0.00') AS DECIMAL(10,2))
							  END
,TENANT_KEY			= @TENANT_KEY  --NOT REALLY NECESSARY.

UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 UNAVAILABLE_SYSTEM_PENDING_TIME		= CASE WHEN ISNULL(FF_UNAVAILABLE_CODE,'') IN (  'CallbackPending'
																						,'InboundPending'
																						,'OutboundPending'
																						,'PromisePending'
																						,'ConsultPending'
																						,'TransferPending'
																						)						THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_HELD_PARTY_ABANDONED_TIME	= CASE WHEN ISNULL(FF_UNAVAILABLE_CODE,'') =	 'HeldPartyAbandoned'	THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_DEDICATED_RESOURCE_TIME	= CASE WHEN ISNULL(FF_UNAVAILABLE_CODE,'') =	 'Dedicated Resource'	THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END

-- <<<<<< WILL NEED TO ENABLE THE CODE BELOW ONCE A DECISION IS MADE ON HOW TO HANDLE UNAVAILABLE CODES ***********
/*
UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 UNAVAILABLE_TIME_MINUS_ACW	= UNAVAILABLE_TIME_MINUS_ACW - UNAVAILABLE_HELD_PARTY_ABANDONED_TIME - UNAVAILABLE_SYSTEM_PENDING_TIME - UNAVAILABLE_DEDICATED_RESOURCE_TIME
*/

--=============================================================================================
--Need when populating tmp DEW table for insert into _AIA table.
--=============================================================================================
DECLARE 
 @DTM_BEG  DATETIME
,@DTM_END  DATETIME

SET @DTM_BEG = DATEADD(hh,-2,(SELECT MIN([DATETIME]) FROM WSOL_TB_IMPORTS_GAR_INVOICING_1))
SET @DTM_END = DATEADD(hh, 2,(SELECT MAX([DATETIME]) FROM WSOL_TB_IMPORTS_GAR_INVOICING_1))  
--=============================================================================================

--=======================================================================================
-- UPDATE DATE_TIME_KEY
--=======================================================================================
UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 STD_TENANT_START_DATE_TIME_KEY = DT.DATE_TIME_KEY
FROM            WSOL_TB_IMPORTS_GAR_INVOICING_1	I
INNER JOIN      DATE_TIME							DT   ON DT.CAL_DATE = I.[DATETIME]

--======================================================================
--HANDLE INVALID DATE/TIME RECORDS:
--======================================================================
INSERT INTO WSOL_TB_IMPORTS_GAR_INVOICING_BAD
(BAD_IMPORTS_NO
,BAD_IMPORTS_FILE_TYPE
,WS_ROW_CREATED_TIME
,FF_DATE
,FF_INTERVAL_30_MINUTES
,FF_AGENT_NAME
,FF_UNAVAILABLE_CODE
,FF_SKILL_NAME
,FF_TEAM_NAME
,FF_LOGIN_TIME
,FF_AVAILABLE_TIME
,FF_UNAVAILABLE_TIME_MINUS_ACW
,FF_TALK_TIME
,FF_HOLD_TIME
,FF_ACW_TIME
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,[DATETIME]
,HOUR_INTERVAL
,AGENT_NAME
,SKILL_NAME
,TEAM_NAME
,LOGIN_TIME
,AVAILABLE_TIME
,UNAVAILABLE_SYSTEM_PENDING_TIME
,UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,UNAVAILABLE_DEDICATED_RESOURCE_TIME
,UNAVAILABLE_TIME_MINUS_ACW
,TALK_TIME
,HOLD_TIME
,ACW_TIME
,TRUE_OUTBOUND_TALK_TIME
,TOTAL_TALK
,CPROD
,MING
,AUT2
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,STD_TENANT_START_DATE_TIME_KEY
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,RESOURCE_NAME
,AIRITKDUR
,AIRIACDUR
,PAY_GROUP)

SELECT
 26                     --BAD_IMPORTS_NO  --'Invalid Date/Time'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE  --'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W1.FF_DATE
,W1.FF_INTERVAL_30_MINUTES
,W1.FF_AGENT_NAME
,W1.FF_UNAVAILABLE_CODE
,W1.FF_SKILL_NAME
,W1.FF_TEAM_NAME
,W1.FF_LOGIN_TIME
,W1.FF_AVAILABLE_TIME
,W1.FF_UNAVAILABLE_TIME_MINUS_ACW
,W1.FF_TALK_TIME
,W1.FF_HOLD_TIME
,W1.FF_ACW_TIME
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.HOUR_INTERVAL
,W1.AGENT_NAME
,W1.SKILL_NAME
,W1.TEAM_NAME
,W1.LOGIN_TIME
,W1.AVAILABLE_TIME
,W1.UNAVAILABLE_SYSTEM_PENDING_TIME
,W1.UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,W1.UNAVAILABLE_DEDICATED_RESOURCE_TIME
,W1.UNAVAILABLE_TIME_MINUS_ACW
,W1.TALK_TIME
,W1.HOLD_TIME
,W1.ACW_TIME
,W1.TRUE_OUTBOUND_TALK_TIME
,W1.TOTAL_TALK
,W1.CPROD
,W1.MING
,W1.AUT2
,W1.EMAIL
,W1.ID_EXT
,W1.SCHEDULER_ACL_NAME
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.CAL_DATE
,W1.TENANT_KEY
,W1.AIR_DAY_TYPE
,W1.AIR_ACW_FONT_COLOR
,W1.MIN_GUARANTEE_RATE
,W1.MIN_GUARANTEE_TYPE
,W1.AUTHORIZED_TO_INVOICE_TYPE
,W1.HAS_HOLIDAYS
,W1.INCLUDE_IN_CAS
,W1.READY_FOR_XML
,W1.SHOW_ID_EXTS
,W1.INVOICE_ID
,W1.RESOURCE_NAME
,W1.AIRITKDUR
,W1.AIRIACDUR
,W1.PAY_GROUP
FROM           WSOL_TB_IMPORTS_GAR_INVOICING_1    W1
WHERE ISNULL(W1.STD_TENANT_START_DATE_TIME_KEY,0) = 0
--======================================================================
--DELETE INVALID DATE/TIME RECORDS:
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_GAR_INVOICING_1
WHERE ISNULL(STD_TENANT_START_DATE_TIME_KEY,0) = 0
--======================================================================


--======================================================================
--HANDLE DUPLICATES:
--======================================================================
INSERT INTO WSOL_TB_IMPORTS_GAR_INVOICING_BAD
(BAD_IMPORTS_NO
,BAD_IMPORTS_FILE_TYPE
,WS_ROW_CREATED_TIME
,FF_DATE
,FF_INTERVAL_30_MINUTES
,FF_AGENT_NAME
,FF_UNAVAILABLE_CODE
,FF_SKILL_NAME
,FF_TEAM_NAME
,FF_LOGIN_TIME
,FF_AVAILABLE_TIME
,FF_UNAVAILABLE_TIME_MINUS_ACW
,FF_TALK_TIME
,FF_HOLD_TIME
,FF_ACW_TIME
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,[DATETIME]
,HOUR_INTERVAL
,AGENT_NAME
,SKILL_NAME
,TEAM_NAME
,LOGIN_TIME
,AVAILABLE_TIME
,UNAVAILABLE_SYSTEM_PENDING_TIME
,UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,UNAVAILABLE_DEDICATED_RESOURCE_TIME
,UNAVAILABLE_TIME_MINUS_ACW
,TALK_TIME
,HOLD_TIME
,ACW_TIME
,TRUE_OUTBOUND_TALK_TIME
,TOTAL_TALK
,CPROD
,MING
,AUT2
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,STD_TENANT_START_DATE_TIME_KEY
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,RESOURCE_NAME
,AIRITKDUR
,AIRIACDUR
,PAY_GROUP)

SELECT
 21                     --BAD_IMPORTS_NO  --'DUPLICATE'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE  --'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W1.FF_DATE
,W1.FF_INTERVAL_30_MINUTES
,W1.FF_AGENT_NAME
,W1.FF_UNAVAILABLE_CODE
,W1.FF_SKILL_NAME
,W1.FF_TEAM_NAME
,W1.FF_LOGIN_TIME
,W1.FF_AVAILABLE_TIME
,W1.FF_UNAVAILABLE_TIME_MINUS_ACW
,W1.FF_TALK_TIME
,W1.FF_HOLD_TIME
,W1.FF_ACW_TIME
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.HOUR_INTERVAL
,W1.AGENT_NAME
,W1.SKILL_NAME
,W1.TEAM_NAME
,W1.LOGIN_TIME
,W1.AVAILABLE_TIME
,W1.UNAVAILABLE_SYSTEM_PENDING_TIME
,W1.UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,W1.UNAVAILABLE_DEDICATED_RESOURCE_TIME
,W1.UNAVAILABLE_TIME_MINUS_ACW
,W1.TALK_TIME
,W1.HOLD_TIME
,W1.ACW_TIME
,W1.TRUE_OUTBOUND_TALK_TIME
,W1.TOTAL_TALK
,W1.CPROD
,W1.MING
,W1.AUT2
,W1.EMAIL
,W1.ID_EXT
,W1.SCHEDULER_ACL_NAME
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.CAL_DATE
,W1.TENANT_KEY
,W1.AIR_DAY_TYPE
,W1.AIR_ACW_FONT_COLOR
,W1.MIN_GUARANTEE_RATE
,W1.MIN_GUARANTEE_TYPE
,W1.AUTHORIZED_TO_INVOICE_TYPE
,W1.HAS_HOLIDAYS
,W1.INCLUDE_IN_CAS
,W1.READY_FOR_XML
,W1.SHOW_ID_EXTS
,W1.INVOICE_ID
,W1.RESOURCE_NAME
,W1.AIRITKDUR
,W1.AIRIACDUR
,W1.PAY_GROUP
FROM
(	SELECT
	 FF_DATE
	,FF_INTERVAL_30_MINUTES
	,FF_AGENT_NAME
	,FF_UNAVAILABLE_CODE
	,FF_SKILL_NAME
	,FF_TEAM_NAME
	,ROW_NUMBER() over (partition by FF_DATE, FF_INTERVAL_30_MINUTES, FF_AGENT_NAME, FF_UNAVAILABLE_CODE, FF_SKILL_NAME, FF_TEAM_NAME
                            order by FF_DATE, FF_INTERVAL_30_MINUTES, FF_AGENT_NAME, FF_UNAVAILABLE_CODE, FF_SKILL_NAME, FF_TEAM_NAME, LOGIN_TIME DESC) ROWNO
	FROM WSOL_TB_IMPORTS_GAR_INVOICING_1
) TNM
LEFT JOIN      WSOL_TB_IMPORTS_GAR_INVOICING_1    W1   ON W1.FF_DATE				= TNM.FF_DATE
													  AND W1.FF_INTERVAL_30_MINUTES	= TNM.FF_INTERVAL_30_MINUTES
													  AND W1.FF_AGENT_NAME			= TNM.FF_AGENT_NAME
													  AND W1.FF_UNAVAILABLE_CODE	= TNM.FF_UNAVAILABLE_CODE
													  AND W1.FF_SKILL_NAME			= TNM.FF_SKILL_NAME
													  AND W1.FF_TEAM_NAME			= TNM.FF_TEAM_NAME
WHERE TNM.ROWNO > 1
--======================================================================
--DELETE DUPLICATES:
--======================================================================
DELETE FROM TNM  
FROM
(	SELECT
	 FF_DATE
	,FF_INTERVAL_30_MINUTES
	,FF_AGENT_NAME
	,FF_UNAVAILABLE_CODE
	,FF_SKILL_NAME
	,FF_TEAM_NAME
	,ROW_NUMBER() over (partition by FF_DATE, FF_INTERVAL_30_MINUTES, FF_AGENT_NAME, FF_UNAVAILABLE_CODE, FF_SKILL_NAME, FF_TEAM_NAME
                            order by FF_DATE, FF_INTERVAL_30_MINUTES, FF_AGENT_NAME, FF_UNAVAILABLE_CODE, FF_SKILL_NAME, LOGIN_TIME DESC) ROWNO
	FROM WSOL_TB_IMPORTS_GAR_INVOICING_1
) TNM
WHERE TNM.ROWNO > 1
--======================================================================

--===============================================
--POPULATE ID EXTENSION AND PAY GROUP
--===============================================
UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 ID_EXT		= CASE WHEN CHARINDEX('-', FF_AGENT_NAME) = 0 THEN
				CASE WHEN FF_TEAM_NAME = 'WS Blended'			THEN 'GBA'
					 WHEN FF_TEAM_NAME = 'WS Blended Spanish'	THEN 'GBB'
					 WHEN FF_TEAM_NAME = 'WS Sales'				THEN 'GBS'
					 WHEN FF_TEAM_NAME = 'WS Service'			THEN 'GRS'
					 WHEN FF_TEAM_NAME = 'WS Resource Blended'	THEN 'GBR'
					 WHEN FF_TEAM_NAME = 'WS Resource Service'	THEN 'SVR'
					 WHEN FF_TEAM_NAME = 'WS Resource Sales'	THEN 'SRA'
					 WHEN FF_TEAM_NAME = 'WS Sales Training'	THEN 'GBS'	--<<<<<< SAME AS WS SALES ABOVE (NESTING AGENTS PLACED IN THIS GROUP AS OF 01/16/2017)
				ELSE '' END
				   WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS1' THEN 'SRA'
				   WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS2' THEN 'SVR'
				   WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS3' THEN 'GBS'
				   WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS4' THEN 'GRS'
				   WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS5' THEN 'GBA'
				   WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS6' THEN 'GBR'		
				   WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS7' THEN 'GBB'
				   WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) NOT IN ('WS1','WS2','WS3','WS4','WS5','WS6','WS7') THEN
					 CASE WHEN FF_TEAM_NAME = 'WS Blended'			THEN 'GBA'
						  WHEN FF_TEAM_NAME = 'WS Blended Spanish'	THEN 'GBB'
						  WHEN FF_TEAM_NAME = 'WS Sales'			THEN 'GBS'
						  WHEN FF_TEAM_NAME = 'WS Service'			THEN 'GRS'
						  WHEN FF_TEAM_NAME = 'WS Resource Blended'	THEN 'GBR'
						  WHEN FF_TEAM_NAME = 'WS Resource Service'	THEN 'SVR'
						  WHEN FF_TEAM_NAME = 'WS Resource Sales'	THEN 'SRA'
						  WHEN FF_TEAM_NAME = 'WS Sales Training'	THEN 'GBS'	--<<<<<< SAME AS WS SALES ABOVE (NESTING AGENTS PLACED IN THIS GROUP AS OF 01/16/2017)
					 ELSE '' END   
			  ELSE '' END
,PAY_GROUP	= ''

--===============================================
--UPDATE TEAM NAME BASED ON AGENT NAME PREFIX
--===============================================
UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 TEAM_NAME = CASE WHEN CHARINDEX('-', FF_AGENT_NAME) = 0 THEN FF_TEAM_NAME
				  ELSE
					CASE 
						WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS1' THEN 'WS Resource Sales'
						WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS2' THEN 'WS Resource Service'
						WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS3' THEN 'WS Sales'
						WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS4' THEN 'WS Service'
						WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS5' THEN 'WS Blended'
						WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS6' THEN 'WS Resource Blended'		
						WHEN LEFT(FF_AGENT_NAME, CHARINDEX('-', FF_AGENT_NAME) - 1) = 'WS7' THEN 'WS Blended Spanish'
						ELSE FF_TEAM_NAME
					END
			 END

--===============================================
--POPULATE INVOICE GROUPS DATA
--===============================================
UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 AIR_DAY_TYPE = CASE WHEN IG.HAS_HOLIDAYS = 'Y' AND
						 (    ISNULL(IH.HOLIDAY_DATE,'1/1/1900') > CAST('1/1/1901' AS DATETIME) OR
						   ( ISNULL(IHA.HOLIDAY_DATE,'1/1/1900') > CAST('1/1/1901' AS DATETIME) AND ISNULL(IHA.ID_EXT,'') <> '' )
						 )
					  THEN 'H' ELSE 'S' END  --AS AIR_DAY_TYPE  --H=Holiday  --S=Standard
FROM            WSOL_TB_IMPORTS_GAR_INVOICING_1					I
INNER JOIN      DATE_TIME										DT   ON DT.DATE_TIME_KEY       = I.STD_TENANT_START_DATE_TIME_KEY
LEFT JOIN       WSOL_TB_IMPORTS_GAR_SD_INVOICE_GROUPS			IG   ON IG.ID_EXT              = I.ID_EXT
LEFT JOIN       WSOL_TB_IMPORTS_GAR_SD_INVOICE_HOLIDAYS			IH   ON IH.HOLIDAY_DATE        = CAST(DT.CAL_DATE_STRING AS DATETIME)
LEFT JOIN       WSOL_TB_IMPORTS_GAR_SD_INVOICE_HOLIDAYS_ADDL	IHA  ON IHA.HOLIDAY_DATE       = CAST(DT.CAL_DATE_STRING AS DATETIME)
															    AND		IHA.ID_EXT             = I.ID_EXT	

--===============================================
--POPULATE ADDITIONAL INVOICE GROUPS DATA
--===============================================
UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 AIR_ACW_FONT_COLOR             = 'Black'

,MIN_GUARANTEE_RATE             = ISNULL(IG.MIN_GUARANTEE_RATE,0)           
,MIN_GUARANTEE_TYPE             = ISNULL(IG.MIN_GUARANTEE_TYPE,'')          
,AUTHORIZED_TO_INVOICE_TYPE     = ISNULL(IG.AUTHORIZED_TO_INVOICE_TYPE,'')  

,HAS_HOLIDAYS		= IG.HAS_HOLIDAYS
,INCLUDE_IN_CAS		= IG.INCLUDE_IN_CAS
,READY_FOR_XML		= IG.READY_FOR_XML
,SHOW_ID_EXTS		= IG.SHOW_ID_EXTS
,RESOURCE_NAME		= CASE WHEN CHARINDEX('-', I.FF_AGENT_NAME) = 0 THEN I.FF_AGENT_NAME
					  ELSE SUBSTRING(I.FF_AGENT_NAME, CHARINDEX('-', I.FF_AGENT_NAME) + 1, LEN(I.FF_AGENT_NAME) - CHARINDEX('-', I.FF_AGENT_NAME)) END
,SCHEDULER_ACL_NAME	= IG.SCHEDULER_ACL_NAME 
FROM            WSOL_TB_IMPORTS_GAR_INVOICING_1        I
LEFT JOIN       WSOL_TB_IMPORTS_GAR_SD_INVOICE_GROUPS  IG  ON IG.ID_EXT    = I.ID_EXT
												
--  SELECT * FROM WSOL_TB_IMPORTS_GAR_SD_INVOICE_GROUPS
	
--===============================================
--SET INVOICE ID
--===============================================
UPDATE WSOL_TB_IMPORTS_GAR_INVOICING_1 SET
 INVOICE_ID         = CASE WHEN AIA.AIR_DAY_TYPE = 'H' THEN AIASD.HOLIDAY_INVOICE_ID ELSE AIASD.INVOICE_SYSTEM_ID END
FROM            WSOL_TB_IMPORTS_GAR_INVOICING_1            AIA 
LEFT JOIN       WSOL_TB_IMPORTS_GAR_SD_AIA_STATIC_DEFAULTS AIASD ON AIASD.ACD_ID_EXTENSION = AIA.ID_EXT

--====================================================	
--CHECK FOR BAD DATA FOUND IN IMPORT .TXT FILES:
--====================================================
DECLARE
 @ERR_CNT  INT
,@RCD_CNT  INT
,@MSG1     VARCHAR(2500)
SET @ERR_CNT  = 0 
SET @RCD_CNT  = 0 
SET @MSG1     = ''
--Check #1:  ===================================================================================================
	SET @RCD_CNT = (SELECT COUNT(*) FROM WSOL_TB_IMPORTS_GAR_INVOICING_1 )
	IF @RCD_CNT < 1 BEGIN
		SET @MSG1 = @MSG1 + '1) File Import Failed.  No Records Were/Could Be Imported.   |   ' 
		SET @ERR_CNT = @ERR_CNT + 1
	END
--Check #2:  ===================================================================================================
--	SET @RCD_CNT  = (	SELECT COUNT(*) FROM WSOL_TB_IMPORTS_GAR_INVOICING_1  
--						WHERE ISNULL(STD_TENANT_START_DATE_TIME_KEY,0) = 0
--					)  
--	IF @RCD_CNT > 0 BEGIN
--		SET @MSG1 = @MSG1 + '2) Invalid DATETIME Intervals in GAR INVOICING IMPORT File.  Import was Cancelled.  Nothing was Imported.   |   ' 
--		SET @ERR_CNT = @ERR_CNT + 1
--	END
--Check #3:  ===================================================================================================
--	SET @RCD_CNT  = (	SELECT COUNT(*) FROM WSOL_TB_IMPORTS_GAR_INVOICING_1  
--						WHERE ISNULL(FF_AGENT_NAME,'') = ''
--					)  
--	IF @RCD_CNT > 0 BEGIN
--		SET @MSG1 = @MSG1 + '3) Blank AGENT NAME(s) in GAR INVOICE IMPORT File exists.  Import was Cancelled.  Nothing was Imported.   |   ' 
--		SET @ERR_CNT = @ERR_CNT + 1
--	END
--Check #n:  ===================================================================================================
--	SET @MSG1 = @MSG1 + '2) Something not right with something.  Import was cancelled.  Nothing was Imported.     '
--	--SET @RCD_CNT = (	SELECT COUNT(*)
--	--					FROM WSOL_TB_IMPORTS_GAR_INVOICING_1
--	--					WHERE 'something' <> 'somethingelse'
--	--				  )  --If nothing imported in work table, don't need to return error.  That check is done in SSIS currently.

--=============================== INSERT INTO PERMANENT TABLE (No errors) OR SKIP AND GO TO END (Errors):
IF @ERR_CNT > 0 BEGIN
	--SSIS reads YZ_TB_ERRORS_FOUND table where TENANT_KEY = 900705, and if record exists, outputs results/error_msg field in an email.
	INSERT INTO YZ_TB_ERRORS_FOUND
	(
	TENANT_KEY
,SUB_GROUP_NAME
,ERROR_MSG)
	SELECT 
	 @TENANT_KEY		--TENANT_KEY
	,'GAR_INVOICING'	--SUB_GROUP_NAME
	,@MSG1				--ERROR_MSG
	--====================================
	GOTO EARLY_EXIT
	--====================================
END
ELSE BEGIN
	INSERT INTO YZ_TB_ERRORS_FOUND
	(
	TENANT_KEY
,SUB_GROUP_NAME
,ERROR_MSG)
	SELECT 
	 @TENANT_KEY		--TENANT_KEY
	,'GAR_INVOICING'	--SUB_GROUP_NAME
	,''					--ERROR_MSG			--Never make this @MSG1 !!!  Must stay as ''.
	--Do NOT want to go to early exit here because data was good, according to 'checks'!  We want to import data into permanent table.
END

--===========================================================
--GROUP DATA BY HOURLY INTERVALS
--===========================================================
DELETE FROM WSOL_TB_IMPORTS_GAR_INVOICING_2

INSERT INTO WSOL_TB_IMPORTS_GAR_INVOICING_2
(FF_DATE
,FF_INTERVAL_30_MINUTES
,FF_AGENT_NAME
,FF_UNAVAILABLE_CODE
,FF_SKILL_NAME
,FF_TEAM_NAME
,FF_LOGIN_TIME
,FF_AVAILABLE_TIME
,FF_UNAVAILABLE_TIME_MINUS_ACW
,FF_TALK_TIME
,FF_HOLD_TIME
,FF_ACW_TIME
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,[DATETIME]
,HOUR_INTERVAL
,AGENT_NAME
,SKILL_NAME
,TEAM_NAME
,LOGIN_TIME
,AVAILABLE_TIME
,UNAVAILABLE_SYSTEM_PENDING_TIME
,UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,UNAVAILABLE_DEDICATED_RESOURCE_TIME
,UNAVAILABLE_TIME_MINUS_ACW
,TALK_TIME
,HOLD_TIME
,ACW_TIME
,TRUE_OUTBOUND_TALK_TIME
,TOTAL_TALK
,CPROD
,MING
,AUT2
,EMAIL
,ID_EXT
,SCHEDULER_ACL_NAME
,STD_TENANT_START_DATE_TIME_KEY
,CAL_DATE
,TENANT_KEY
,AIR_DAY_TYPE
,AIR_ACW_FONT_COLOR
,MIN_GUARANTEE_RATE
,MIN_GUARANTEE_TYPE
,AUTHORIZED_TO_INVOICE_TYPE
,HAS_HOLIDAYS
,INCLUDE_IN_CAS
,READY_FOR_XML
,SHOW_ID_EXTS
,INVOICE_ID
,RESOURCE_NAME
,AIRITKDUR
,AIRIACDUR
,PAY_GROUP
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 W1.FF_DATE
,NULL	--FF_INTERVAL_30_MINUTES
,W1.FF_AGENT_NAME
,NULL	--FF_UNAVAILABLE_CODE
,NULL	--FF_SKILL_NAME
,MAX(W1.TEAM_NAME)
,SUM(CAST(ISNULL(NULLIF(W1.FF_LOGIN_TIME				,''),0)	AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_AVAILABLE_TIME			,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_UNAVAILABLE_TIME_MINUS_ACW,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_TALK_TIME					,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_HOLD_TIME	,'')			,0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_ACW_TIME					,''),0) AS DECIMAL(10,2)))

,W1.SEQNO_ADDED_TIME
,MAX(W1.SEQNO)
,W1.FTP_FILE_NAME

,W1.[DATETIME]
,W1.HOUR_INTERVAL
,MAX(W1.AGENT_NAME)
,NULL						--SKILL_NAME
,MAX(W1.TEAM_NAME)
,SUM(ISNULL(W1.LOGIN_TIME							,0.00))
,SUM(ISNULL(W1.AVAILABLE_TIME						,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_SYSTEM_PENDING_TIME		,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_HELD_PARTY_ABANDONED_TIME,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_DEDICATED_RESOURCE_TIME	,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_TIME_MINUS_ACW			,0.00))
,SUM(ISNULL(W1.TALK_TIME							,0.00))
,SUM(ISNULL(W1.HOLD_TIME							,0.00))
,SUM(ISNULL(W1.ACW_TIME								,0.00))
,SUM(ISNULL(W1.TRUE_OUTBOUND_TALK_TIME				,0.00))
,SUM(ISNULL(W1.TOTAL_TALK							,0.00)) --WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,SUM(ISNULL(W1.CPROD								,0.00)) --WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,SUM(ISNULL(W1.MING									,0.00))	--WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,SUM(ISNULL(W1.AUT2									,0.00))	--WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,MAX(W1.EMAIL)
,W1.ID_EXT
,MAX(W1.SCHEDULER_ACL_NAME)
,W1.STD_TENANT_START_DATE_TIME_KEY
,MAX(W1.CAL_DATE)
,351
,MAX(W1.AIR_DAY_TYPE)
,MAX(W1.AIR_ACW_FONT_COLOR)
,MAX(W1.MIN_GUARANTEE_RATE)
,MAX(W1.MIN_GUARANTEE_TYPE)
,MAX(W1.AUTHORIZED_TO_INVOICE_TYPE)
,MAX(W1.HAS_HOLIDAYS)
,MAX(W1.INCLUDE_IN_CAS)
,MAX(W1.READY_FOR_XML)
,MAX(W1.SHOW_ID_EXTS)
,W1.INVOICE_ID
,MAX(W1.RESOURCE_NAME)
,SUM(ISNULL(W1.AIRITKDUR,0))
,SUM(ISNULL(W1.AIRIACDUR,0))
,W1.PAY_GROUP

,@WS_ROW_CREATED_TIME    --[WS_ROW_CREATED_TIME] [datetime] NOT NULL,
,NULL                    --[WS_ROW_UPDATED_TIME] [datetime] NULL,

FROM            WSOL_TB_IMPORTS_GAR_INVOICING_1  W1

LEFT JOIN       WSOL_TB_IMPORTS_GAR_INVOICING_2   G		ON G.STD_TENANT_START_DATE_TIME_KEY = W1.STD_TENANT_START_DATE_TIME_KEY
													   AND G.FF_AGENT_NAME                  = W1.FF_AGENT_NAME
													   AND G.ID_EXT							= W1.ID_EXT

WHERE (G.FF_AGENT_NAME                     IS NULL AND ISNULL(W1.FF_AGENT_NAME,'') <> '' )
  AND (G.STD_TENANT_START_DATE_TIME_KEY	   IS NULL AND ISNULL(W1.STD_TENANT_START_DATE_TIME_KEY,0) <> 0 )
  AND (G.ID_EXT							   IS NULL AND ISNULL(W1.ID_EXT,'') <> '' )

GROUP BY
 W1.FF_DATE
,W1.FF_AGENT_NAME
,W1.SEQNO_ADDED_TIME
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.HOUR_INTERVAL
,W1.ID_EXT
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.INVOICE_ID
,W1.PAY_GROUP

ORDER BY
 W1.FF_AGENT_NAME
,W1.[DATETIME]

--=============================================
EARLY_EXIT:
--=============================================