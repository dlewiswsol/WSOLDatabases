
CREATE PROCEDURE [dbo].[uspIMPORTS_MONAT_IC_INVOICING_IMPORT]
AS
SET NOCOUNT ON

--  EXECUTE [dbo].[uspIMPORTS_MONAT_IC_INVOICING_IMPORT]

--  SELECT * FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1

--	Durations in the data file are in seconds in 30 minute intervals
--  Reporting available in seconds, minutes, and hours.

--===================================================================================
DECLARE @TENANT_KEY INT
SET @TENANT_KEY = 160  --MONAT GLOBAL
--===================================================================================
DELETE FROM WSOL_TB_IMPORT_ERRORS_FOUND
WHERE TENANT_KEY		= @TENANT_KEY
  AND SUB_GROUP_NAME	= 'MONAT_INVOICING'
  --  SELECT * FROM WSOL_TB_IMPORT_ERRORS_FOUND WHERE TENANT_KEY = 160
--===================================================================================

--=========================================================================================================
--  USING @WS_ROW_CREATED_TIME FOR ALL INSERTS WILL ALLOW ME TO DELETE SPECIFIC INSERT PROCESSES/FILES.
--  IN CASE OF EMERGENCY, BREAK GLASS.
--=========================================================================================================
DECLARE @WS_ROW_CREATED_TIME AS DATETIME
SET @WS_ROW_CREATED_TIME = dbo.GETDATE()  --CLOSE ENOUGH TO ACTUAL INSERT TIME!
--===================================================================================

--===================================================================================
--HANDLE COLUMN HEADER AND JUNK RECORDS:
--===================================================================================

		--<<<<< HEADER ROWS REMOVED AT IMPORT TIME >>>>>--

--======================================================================
--DELETE COLUMN HEADER AND JUNK RECORDS;
--======================================================================

--=============================================================================================================================================================
--POPULATE ADDITIONAL FIELDS IN WORK (_1) TABLE THAT WEREN'T IN IMPORTED FILE:
--=============================================================================================================================================================
UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 [DATETIME]					= CAST(CONVERT(VARCHAR(10), FF_DATE) + ' ' + CONVERT(VARCHAR(2), LEFT(FF_INTERVAL_30_MINUTES,2)) + ':00:00' AS DATETIME)
,HOUR_INTERVAL				= CONVERT(VARCHAR(2), LEFT(FF_INTERVAL_30_MINUTES,2))
,AGENT_NAME					= ISNULL(FF_AGENT_NAME		,'')
,UNAVAILABLE_CODE			= ISNULL(FF_UNAVAILABLE_CODE,'')
,SKILL_NAME					= ISNULL(FF_SKILL_NAME		,'')
,TEAM_NAME					= ISNULL(FF_TEAM_NAME		,'')
,INBOUND_HANDLED_COUNT		= CAST(ISNULL(NULLIF(FF_INBOUND_HANDLED				,''),'0'   ) AS DECIMAL(10,2))
,OUTBOUND_HANDLED_COUNT		= CAST(ISNULL(NULLIF(FF_OUTBOUND_HANDLED			,''),'0'   ) AS DECIMAL(10,2))
,HELD_PARTY_ABANDON_COUNT	= CAST(ISNULL(NULLIF(FF_HELD_PARTY_ABANDONS			,''),'0'   ) AS DECIMAL(10,2))
,LOGIN_TIME					= CAST(ISNULL(NULLIF(FF_LOGIN_TIME					,''),'0.00') AS DECIMAL(10,2))
,AVAILABLE_TIME				= CAST(ISNULL(NULLIF(FF_AVAILABLE_TIME				,''),'0.00') AS DECIMAL(10,2)) 
,UNAVAILABLE_TIME_MINUS_ACW	= CAST(ISNULL(NULLIF(FF_UNAVAILABLE_TIME_MINUS_ACW	,''),'0.00') AS DECIMAL(10,2))
,HOLD_TIME					= CAST(ISNULL(NULLIF(FF_HOLD_TIME					,''),'0.00') AS DECIMAL(10,2))
,ACW_TIME					= CAST(ISNULL(NULLIF(FF_ACW_TIME					,''),'0.00') AS DECIMAL(10,2))
,TALK_TIME					= CASE WHEN FF_SKILL_NAME IN ('EN_FLEXSHIP FOLLOW UP OB Queue','GENERIC AGENT OB Q')
									THEN 0.00 
								   ELSE CAST(ISNULL(NULLIF(FF_TALK_TIME			,''),'0.00') AS DECIMAL(10,2))
							  END
,TENANT_KEY					= @TENANT_KEY

UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 TOTAL_CALL_COUNT						= INBOUND_HANDLED_COUNT + OUTBOUND_HANDLED_COUNT

,UNAVAILABLE_EMAIL_TIME					= CASE WHEN UNAVAILABLE_CODE	= 'EMAIL ONLY'					THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_WSOL_EMAIL_TIME			= CASE WHEN UNAVAILABLE_CODE	= 'WSOL - EMAIL ONLY'			THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_FLOOR_SUPPORT_TIME			= CASE WHEN UNAVAILABLE_CODE	= 'FLOOR SUPPORT'				THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_SPECIAL_PROJECT_TIME		= CASE WHEN UNAVAILABLE_CODE	= 'Special Project ( Appv.)'	THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_HELD_PARTY_ABANDONED_TIME	= CASE WHEN UNAVAILABLE_CODE	= 'HeldPartyAbandoned'			THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_IT_SYS_ISSUE_TIME			= CASE WHEN UNAVAILABLE_CODE	= 'IT/Sys Issue'				THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_IDLE_TIME					= CASE WHEN UNAVAILABLE_CODE	= 'Idle'						THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_REFUSED_TIME				= CASE WHEN UNAVAILABLE_CODE	= 'Refused'						THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END
,UNAVAILABLE_OUTBOUND_CALL_TIME			= CASE WHEN UNAVAILABLE_CODE	= 'Outbound (Call)'				THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END

,UNAVAILABLE_SYSTEM_PENDING_TIME		= CASE WHEN UNAVAILABLE_CODE IN ( 'CallbackPending'
																		 ,'InboundPending'
																		 ,'OutboundPending'
																		 ,'PromisePending'
																		 ,'ConsultPending'
																		 ,'TransferPending'
																		 )								THEN UNAVAILABLE_TIME_MINUS_ACW ELSE 0.00 END

UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 UNAVAILABLE_TIME_MINUS_ACW	= UNAVAILABLE_TIME_MINUS_ACW - UNAVAILABLE_EMAIL_TIME - UNAVAILABLE_WSOL_EMAIL_TIME - UNAVAILABLE_FLOOR_SUPPORT_TIME - UNAVAILABLE_SPECIAL_PROJECT_TIME
														 - UNAVAILABLE_HELD_PARTY_ABANDONED_TIME - UNAVAILABLE_IT_SYS_ISSUE_TIME - UNAVAILABLE_IDLE_TIME
														 - UNAVAILABLE_REFUSED_TIME - UNAVAILABLE_OUTBOUND_CALL_TIME - UNAVAILABLE_SYSTEM_PENDING_TIME

--===================================================================================================
-- UPDATE DATETIME KEY
--===================================================================================================
UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 STD_TENANT_START_DATE_TIME_KEY = DT.DATE_TIME_KEY
FROM		WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1	I
INNER JOIN	DATE_TIME								DT	ON DT.CAL_DATE = I.[DATETIME]

--===============================================
--HANDLE INVALID DATE/TIME RECORDS:
--===============================================
INSERT INTO WSOL_TB_IMPORTS_MONAT_IC_INVOICING_BAD
SELECT
 'DTM'					--BAD_IMPORTS_CODE		--'Invalid Date/Time'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE	--'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W1.FF_DATE
,W1.FF_INTERVAL_30_MINUTES
,W1.FF_AGENT_NAME
,W1.FF_UNAVAILABLE_CODE
,W1.FF_SKILL_NAME
,W1.FF_TEAM_NAME
,W1.FF_LOGIN_TIME
,W1.FF_AVAILABLE_TIME
,W1.FF_UNAVAILABLE_TIME_MINUS_ACW
,W1.FF_TALK_TIME
,W1.FF_HOLD_TIME
,W1.FF_ACW_TIME
,W1.FF_HELD_PARTY_ABANDONS
,W1.FF_INBOUND_HANDLED
,W1.FF_OUTBOUND_HANDLED
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.HOUR_INTERVAL
,W1.AGENT_NAME
,W1.UNAVAILABLE_CODE
,W1.SKILL_NAME
,W1.TEAM_NAME
,W1.INBOUND_HANDLED_COUNT
,W1.OUTBOUND_HANDLED_COUNT
,W1.TOTAL_CALL_COUNT
,W1.HELD_PARTY_ABANDON_COUNT
,W1.LOGIN_TIME
,W1.AVAILABLE_TIME
,W1.UNAVAILABLE_EMAIL_TIME
,W1.UNAVAILABLE_WSOL_EMAIL_TIME
,W1.UNAVAILABLE_FLOOR_SUPPORT_TIME
,W1.UNAVAILABLE_SPECIAL_PROJECT_TIME
,W1.UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,W1.UNAVAILABLE_IT_SYS_ISSUE_TIME
,W1.UNAVAILABLE_IDLE_TIME
,W1.UNAVAILABLE_REFUSED_TIME
,W1.UNAVAILABLE_SYSTEM_PENDING_TIME
,W1.UNAVAILABLE_OUTBOUND_CALL_TIME
,W1.UNAVAILABLE_TIME_MINUS_ACW
,W1.TALK_TIME
,W1.HOLD_TIME
,W1.ACW_TIME
,W1.AUTHORIZED_ACW_TIME
,W1.TRUE_OUTBOUND_TALK_TIME
,W1.TOTAL_TALK
,W1.HANDLE_TIME
,W1.CPROD
,W1.MINIMUM_GUARANTEE
,W1.AUTHORIZED_TO_INVOICE
,W1.EMAIL
,W1.ID_EXT
,W1.SCHEDULER_ACL_NAME
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.CAL_DATE
,W1.TENANT_KEY
,W1.AIR_DAY_TYPE
,W1.AIR_ACW_FONT_COLOR
,W1.MIN_GUARANTEE_MINUTES
,W1.MIN_GUARANTEE_TYPE
,W1.AUTHORIZED_TO_INVOICE_TYPE
,W1.HAS_HOLIDAYS
,W1.INCLUDE_IN_CAS
,W1.READY_FOR_XML
,W1.SHOW_ID_EXTS
,W1.INVOICE_ID
,W1.RESOURCE_NAME
,W1.AIRITKDUR
,W1.AIRIACDUR
,W1.PAY_GROUP
--SELECT *
FROM           WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1    W1
WHERE ISNULL(W1.STD_TENANT_START_DATE_TIME_KEY,0) = 0

--======================================================================
--DELETE INVALID DATE/TIME RECORDS;
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1
WHERE ISNULL(STD_TENANT_START_DATE_TIME_KEY,0) = 0
--======================================================================

--===========================================================================================================
--HANDLE DUPLICATES:
--===========================================================================================================
INSERT INTO WSOL_TB_IMPORTS_MONAT_IC_INVOICING_BAD
SELECT
 'DUP'					--BAD_IMPORTS_CODE		--'DUPLICATE'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE --'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W1.FF_DATE
,W1.FF_INTERVAL_30_MINUTES
,W1.FF_AGENT_NAME
,W1.FF_UNAVAILABLE_CODE
,W1.FF_SKILL_NAME
,W1.FF_TEAM_NAME
,W1.FF_LOGIN_TIME
,W1.FF_AVAILABLE_TIME
,W1.FF_UNAVAILABLE_TIME_MINUS_ACW
,W1.FF_TALK_TIME
,W1.FF_HOLD_TIME
,W1.FF_ACW_TIME
,W1.FF_HELD_PARTY_ABANDONS
,W1.FF_INBOUND_HANDLED
,W1.FF_OUTBOUND_HANDLED
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.HOUR_INTERVAL
,W1.AGENT_NAME
,W1.UNAVAILABLE_CODE
,W1.SKILL_NAME
,W1.TEAM_NAME
,W1.INBOUND_HANDLED_COUNT
,W1.OUTBOUND_HANDLED_COUNT
,W1.TOTAL_CALL_COUNT
,W1.HELD_PARTY_ABANDON_COUNT
,W1.LOGIN_TIME
,W1.AVAILABLE_TIME
,W1.UNAVAILABLE_EMAIL_TIME
,W1.UNAVAILABLE_WSOL_EMAIL_TIME
,W1.UNAVAILABLE_FLOOR_SUPPORT_TIME
,W1.UNAVAILABLE_SPECIAL_PROJECT_TIME
,W1.UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,W1.UNAVAILABLE_IT_SYS_ISSUE_TIME
,W1.UNAVAILABLE_IDLE_TIME
,W1.UNAVAILABLE_REFUSED_TIME
,W1.UNAVAILABLE_SYSTEM_PENDING_TIME
,W1.UNAVAILABLE_OUTBOUND_CALL_TIME
,W1.UNAVAILABLE_TIME_MINUS_ACW
,W1.TALK_TIME
,W1.HOLD_TIME
,W1.ACW_TIME
,W1.AUTHORIZED_ACW_TIME
,W1.TRUE_OUTBOUND_TALK_TIME
,W1.TOTAL_TALK
,W1.HANDLE_TIME
,W1.CPROD
,W1.MINIMUM_GUARANTEE
,W1.AUTHORIZED_TO_INVOICE
,W1.EMAIL
,W1.ID_EXT
,W1.SCHEDULER_ACL_NAME
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.CAL_DATE
,W1.TENANT_KEY
,W1.AIR_DAY_TYPE
,W1.AIR_ACW_FONT_COLOR
,W1.MIN_GUARANTEE_MINUTES
,W1.MIN_GUARANTEE_TYPE
,W1.AUTHORIZED_TO_INVOICE_TYPE
,W1.HAS_HOLIDAYS
,W1.INCLUDE_IN_CAS
,W1.READY_FOR_XML
,W1.SHOW_ID_EXTS
,W1.INVOICE_ID
,W1.RESOURCE_NAME
,W1.AIRITKDUR
,W1.AIRIACDUR
,W1.PAY_GROUP

FROM
(	SELECT
	 FF_DATE
	,FF_INTERVAL_30_MINUTES
	,FF_AGENT_NAME
	,FF_UNAVAILABLE_CODE
	,FF_SKILL_NAME
	,FF_TEAM_NAME
	,ROW_NUMBER() over (partition by FF_DATE, FF_INTERVAL_30_MINUTES, FF_AGENT_NAME, FF_UNAVAILABLE_CODE, FF_SKILL_NAME, FF_TEAM_NAME
                            order by FF_DATE, FF_INTERVAL_30_MINUTES, FF_AGENT_NAME, FF_UNAVAILABLE_CODE, FF_SKILL_NAME, FF_TEAM_NAME, LOGIN_TIME DESC) ROWNO
	FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1
) TNM
LEFT JOIN      WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1	W1   ON W1.FF_DATE					= TNM.FF_DATE
														AND W1.FF_INTERVAL_30_MINUTES	= TNM.FF_INTERVAL_30_MINUTES
														AND W1.FF_AGENT_NAME			= TNM.FF_AGENT_NAME
														AND W1.FF_UNAVAILABLE_CODE		= TNM.FF_UNAVAILABLE_CODE
														AND W1.FF_SKILL_NAME			= TNM.FF_SKILL_NAME
														AND W1.FF_TEAM_NAME				= TNM.FF_TEAM_NAME
WHERE TNM.ROWNO > 1

--===========================================================================================================
--DELETE DUPLICATES:
--===========================================================================================================
DELETE FROM TNM
FROM
(	SELECT
	 FF_DATE
	,FF_INTERVAL_30_MINUTES
	,FF_AGENT_NAME
	,FF_UNAVAILABLE_CODE
	,FF_SKILL_NAME
	,FF_TEAM_NAME
	,ROW_NUMBER() over (partition by FF_DATE, FF_INTERVAL_30_MINUTES, FF_AGENT_NAME, FF_UNAVAILABLE_CODE, FF_SKILL_NAME, FF_TEAM_NAME
                            order by FF_DATE, FF_INTERVAL_30_MINUTES, FF_AGENT_NAME, FF_UNAVAILABLE_CODE, FF_SKILL_NAME, FF_TEAM_NAME, LOGIN_TIME DESC) ROWNO
	FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1
) TNM
WHERE TNM.ROWNO > 1
--===========================================================================================================

--===========================================================================================================
--REMOVE RECORDS THAT ARE OUTSIDE OF BUSINESS HOURS (07:00 - 00:00 CST):
--===========================================================================================================
INSERT INTO WSOL_TB_IMPORTS_MONAT_IC_INVOICING_BAD
SELECT
 'OBH'					--BAD_IMPORTS_CODE		--'O'utside 'B'usiness 'H'ours
,'ACT'                  --BAD_IMPORTS_FILE_TYPE	--'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W1.FF_DATE
,W1.FF_INTERVAL_30_MINUTES
,W1.FF_AGENT_NAME
,W1.FF_UNAVAILABLE_CODE
,W1.FF_SKILL_NAME
,W1.FF_TEAM_NAME
,W1.FF_LOGIN_TIME
,W1.FF_AVAILABLE_TIME
,W1.FF_UNAVAILABLE_TIME_MINUS_ACW
,W1.FF_TALK_TIME
,W1.FF_HOLD_TIME
,W1.FF_ACW_TIME
,W1.FF_HELD_PARTY_ABANDONS
,W1.FF_INBOUND_HANDLED
,W1.FF_OUTBOUND_HANDLED
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.HOUR_INTERVAL
,W1.AGENT_NAME
,W1.UNAVAILABLE_CODE
,W1.SKILL_NAME
,W1.TEAM_NAME
,W1.INBOUND_HANDLED_COUNT
,W1.OUTBOUND_HANDLED_COUNT
,W1.TOTAL_CALL_COUNT
,W1.HELD_PARTY_ABANDON_COUNT
,W1.LOGIN_TIME
,W1.AVAILABLE_TIME
,W1.UNAVAILABLE_EMAIL_TIME
,W1.UNAVAILABLE_WSOL_EMAIL_TIME
,W1.UNAVAILABLE_FLOOR_SUPPORT_TIME
,W1.UNAVAILABLE_SPECIAL_PROJECT_TIME
,W1.UNAVAILABLE_HELD_PARTY_ABANDONED_TIME
,W1.UNAVAILABLE_IT_SYS_ISSUE_TIME
,W1.UNAVAILABLE_IDLE_TIME
,W1.UNAVAILABLE_REFUSED_TIME
,W1.UNAVAILABLE_SYSTEM_PENDING_TIME
,W1.UNAVAILABLE_OUTBOUND_CALL_TIME
,W1.UNAVAILABLE_TIME_MINUS_ACW
,W1.TALK_TIME
,W1.HOLD_TIME
,W1.ACW_TIME
,W1.AUTHORIZED_ACW_TIME
,W1.TRUE_OUTBOUND_TALK_TIME
,W1.TOTAL_TALK
,W1.HANDLE_TIME
,W1.CPROD
,W1.MINIMUM_GUARANTEE
,W1.AUTHORIZED_TO_INVOICE
,W1.EMAIL
,W1.ID_EXT
,W1.SCHEDULER_ACL_NAME
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.CAL_DATE
,W1.TENANT_KEY
,W1.AIR_DAY_TYPE
,W1.AIR_ACW_FONT_COLOR
,W1.MIN_GUARANTEE_MINUTES
,W1.MIN_GUARANTEE_TYPE
,W1.AUTHORIZED_TO_INVOICE_TYPE
,W1.HAS_HOLIDAYS
,W1.INCLUDE_IN_CAS
,W1.READY_FOR_XML
,W1.SHOW_ID_EXTS
,W1.INVOICE_ID
,W1.RESOURCE_NAME
,W1.AIRITKDUR
,W1.AIRIACDUR
,W1.PAY_GROUP
--SELECT *
FROM           WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1    W1
WHERE W1.HOUR_INTERVAL IN (0,1,2,3,4,5,6)

--======================================================================
--DELETE INVALID DATE/TIME RECORDS;
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1
WHERE HOUR_INTERVAL IN (0,1,2,3,4,5,6)
--======================================================================

--===========================================================================================================
--UPDATE FIELDS FROM MAPPING DATA
--===========================================================================================================
UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
  EMAIL			= ISNULL(IAM.EMAIL,'')
 ,ID_EXT		= CASE WHEN IAM.INVOICE_GROUP = 'RES'	THEN 'MRA'
					   WHEN IAM.INVOICE_GROUP = 'FC'	THEN 'MFC'
					   WHEN IAM.INVOICE_GROUP = ''		THEN 'MSA'
					   ELSE '' END
 ,PAY_GROUP		= ISNULL(IAM.PAY_GROUP,'')
 ,RESOURCE_NAME = ISNULL(IAM.RESOURCE_NAME,'')
 --SELECT *
 FROM            WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1		I
 LEFT JOIN       WSOL_TB_IMPORTS_MONAT_AIA_AGENT_MAPPING	IAM  ON IAM.INVOICE_MAP_KEY = I.FF_AGENT_NAME

--SELECT * FROM WSOL_TB_IMPORTS_MONAT_AIA_AGENT_MAPPING ORDER BY CST_ROW_UPDATED_TIME DESC
--SELECT * FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 WHERE ISNULL(ID_EXT,'') = '' ORDER BY FF_AGENT_NAME

/*
UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 ID_EXT	= CASE WHEN FF_UNAVAILABLE_CODE = 'EMAIL ONLY' AND ID_EXT IN ('MSA') THEN 'MEA' ELSE ID_EXT END			--<<<<< POSSIBLY FOR FUTURE USE.  WOULD NEED TO CREATE "MEA" EXTENSION.
 */

--===========================================================================================================
--REMOVE UNAVAILABLE_FLOOR_SUPPORT_TIME FOR NON-RESOURCE AGENTS
--===========================================================================================================
UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 UNAVAILABLE_FLOOR_SUPPORT_TIME = 0.00
WHERE ISNULL(ID_EXT,'') NOT IN ('MRA','')

--SELECT * FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 WHERE UNAVAILABLE_FLOOR_SUPPORT_TIME > 0.00

UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 SCHEDULER_ACL_NAME = CASE WHEN ID_EXT = 'MRA' THEN 'Monat Global Resource Agents'
						   WHEN ID_EXT = 'MFC' THEN 'Monat Global French Canadian Standard Agents'
						   WHEN ID_EXT = 'MSA' THEN 'Monat Global Standard Agents'
						   ELSE '' END

--=================================================================================================
--UPDATE FOR WEEKEND RATES
--=================================================================================================
SET DATEFIRST 1  -- = Monday  

UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 ID_EXT = CASE WHEN (ID_EXT IN ('MFC','MSA') AND DATEPART(dw, [DATETIME]) IN (6, 7)) THEN
				CASE WHEN ID_EXT = 'MFC' THEN 'MFW'
				     WHEN ID_EXT = 'MSA' THEN 'MSW'
					 ELSE ID_EXT
				END
			   ELSE ID_EXT
		  END

--===========================================================================================================
--UPDATE ADDITIONAL INVOICE FIELDS
--===========================================================================================================
UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET	-- SELECT
  AIR_DAY_TYPE = CASE WHEN IG.HAS_HOLIDAYS = 'Y' AND
						 (    ISNULL(IH.HOLIDAY_DATE,'1/1/1900') > CAST('1/1/1901' AS DATETIME) OR
						   ( ISNULL(IHA.HOLIDAY_DATE,'1/1/1900') > CAST('1/1/1901' AS DATETIME) AND ISNULL(IHA.ID_EXT,'') <> '' )
						 )
					  THEN 'H' ELSE 'S' END  --AS AIR_DAY_TYPE  --H=Holiday  --S=Standard
 FROM            WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1				I
 INNER JOIN      DATE_TIME											DT		ON DT.DATE_TIME_KEY       = I.STD_TENANT_START_DATE_TIME_KEY
 LEFT JOIN       WSOL_TB_IMPORTS_MONAT_SD_INVOICE_GROUPS			IG		ON IG.ID_EXT              = I.ID_EXT
 LEFT JOIN       WSOL_TB_IMPORTS_MONAT_SD_INVOICE_HOLIDAYS			IH		ON IH.HOLIDAY_DATE        = CAST(DT.CAL_DATE_STRING AS DATETIME)
 LEFT JOIN       WSOL_TB_IMPORTS_MONAT_SD_INVOICE_HOLIDAYS_ADDL		IHA		ON IHA.HOLIDAY_DATE       = CAST(DT.CAL_DATE_STRING AS DATETIME)
																		   AND IHA.ID_EXT             = I.ID_EXT


UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 AIR_ACW_FONT_COLOR             = 'Black'
,MIN_GUARANTEE_MINUTES          = ISNULL(IG.MIN_GUARANTEE_MINUTES,0)        --varies between scheduler acl names.
,MIN_GUARANTEE_TYPE             = ISNULL(IG.MIN_GUARANTEE_TYPE,'')          --varies between scheduler acl names.
,AUTHORIZED_TO_INVOICE_TYPE     = ISNULL(IG.AUTHORIZED_TO_INVOICE_TYPE,'')  --varies between scheduler acl names.

,HAS_HOLIDAYS    = IG.HAS_HOLIDAYS
,INCLUDE_IN_CAS  = IG.INCLUDE_IN_CAS
,READY_FOR_XML   = IG.READY_FOR_XML
,SHOW_ID_EXTS    = IG.SHOW_ID_EXTS
FROM            WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1		I
LEFT JOIN       WSOL_TB_IMPORTS_MONAT_SD_INVOICE_GROUPS		IG  ON IG.ID_EXT    = I.ID_EXT
												

UPDATE WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1 SET
 INVOICE_ID         = CASE WHEN AIA.AIR_DAY_TYPE = 'H' THEN AIASD.HOLIDAY_INVOICE_ID ELSE AIASD.INVOICE_SYSTEM_ID END
--,SCHEDULER_ACL_NAME = CASE WHEN AIA.AIR_DAY_TYPE = 'H' THEN AIASD.HOLIDAY_INVOICE_ID ELSE AIASD.INVOICE_SYSTEM_ID END
FROM            WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1			AIA 
LEFT JOIN       WSOL_TB_IMPORTS_MONAT_SD_AIA_STATIC_DEFAULTS	AIASD ON AIASD.ACD_ID_EXTENSION = AIA.ID_EXT


--======================================================================
--CHECK FOR BAD DATA FOUND IN IMPORT .CSV FILES:
--======================================================================
--SELECT * FROM WSOL_TB_IMPORT_ERRORS_FOUND WHERE TENANT_KEY = 160
--======================================================================
DECLARE
 @ERR_CNT  INT
,@RCD_CNT  INT
,@MSG1     VARCHAR(2500)
SET @ERR_CNT  = 0 
SET @RCD_CNT  = 0 
SET @MSG1     = ''
--Check #1:  ===================================================================================================
	SET @RCD_CNT = (SELECT COUNT(*) FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1)
	IF @RCD_CNT < 1 BEGIN
		SET @MSG1 = @MSG1 + 'ERROR!  File Import Failed.  No Records Were/Could Be Imported.   |   ' 
		SET @ERR_CNT = @ERR_CNT + 1
	END

--=============================== INSERT INTO PERMANENT TABLE (No errors) OR SKIP AND GO TO END (Errors):
IF @ERR_CNT > 0 BEGIN
	INSERT INTO WSOL_TB_IMPORT_ERRORS_FOUND
	SELECT 
	 @TENANT_KEY		--TENANT_KEY
	,'MONAT_INVOICING'	--SUB_GROUP_NAME
	,@MSG1				--ERROR_MSG
	--===========================
	GOTO EARLY_EXIT
	--===========================
END
ELSE BEGIN
	--MUST RETURN AT LEAST ONE RECORD TO SSIS
	INSERT INTO WSOL_TB_IMPORT_ERRORS_FOUND
	SELECT 
	 @TENANT_KEY		--TENANT_KEY
	,'MONAT_INVOICING'	--SUB_GROUP_NAME
	,''					--ERROR_MSG
END

--===========================================================
--GROUP DATA BY HOURLY INTERVALS
--===========================================================
DELETE FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING_2

INSERT INTO WSOL_TB_IMPORTS_MONAT_IC_INVOICING_2
SELECT
 W1.FF_DATE
,NULL	--FF_INTERVAL_30_MINUTES
,W1.FF_AGENT_NAME
,NULL	--FF_UNAVAILABLE_CODE
,NULL	--FF_SKILL_NAME
,MAX(W1.TEAM_NAME)
,SUM(CAST(ISNULL(NULLIF(W1.FF_LOGIN_TIME				,''),0)	AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_AVAILABLE_TIME			,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_UNAVAILABLE_TIME_MINUS_ACW,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_TALK_TIME					,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_HOLD_TIME					,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_ACW_TIME					,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_HELD_PARTY_ABANDONS		,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_INBOUND_HANDLED			,''),0) AS DECIMAL(10,2)))
,SUM(CAST(ISNULL(NULLIF(W1.FF_OUTBOUND_HANDLED			,''),0) AS DECIMAL(10,2)))

,W1.SEQNO_ADDED_TIME
,MIN(W1.SEQNO)
,W1.FTP_FILE_NAME

,W1.[DATETIME]
,W1.HOUR_INTERVAL
,MAX(W1.AGENT_NAME)
,NULL						--UNAVAILABLE_CODE
,NULL						--SKILL_NAME
,MAX(W1.TEAM_NAME)
,SUM(ISNULL(W1.INBOUND_HANDLED_COUNT				,0.00))
,SUM(ISNULL(W1.OUTBOUND_HANDLED_COUNT				,0.00))
,SUM(ISNULL(W1.TOTAL_CALL_COUNT						,0.00))
,SUM(ISNULL(W1.HELD_PARTY_ABANDON_COUNT				,0.00))
,SUM(ISNULL(W1.LOGIN_TIME							,0.00))
,SUM(ISNULL(W1.AVAILABLE_TIME						,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_EMAIL_TIME				,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_WSOL_EMAIL_TIME			,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_FLOOR_SUPPORT_TIME		,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_SPECIAL_PROJECT_TIME		,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_HELD_PARTY_ABANDONED_TIME,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_IT_SYS_ISSUE_TIME		,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_IDLE_TIME				,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_REFUSED_TIME				,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_SYSTEM_PENDING_TIME		,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_OUTBOUND_CALL_TIME		,0.00))
,SUM(ISNULL(W1.UNAVAILABLE_TIME_MINUS_ACW			,0.00))
,SUM(ISNULL(W1.TALK_TIME							,0.00))
,SUM(ISNULL(W1.HOLD_TIME							,0.00))
,SUM(ISNULL(W1.ACW_TIME								,0.00))
,SUM(ISNULL(W1.AUTHORIZED_ACW_TIME					,0.00)) --WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,SUM(ISNULL(W1.TRUE_OUTBOUND_TALK_TIME				,0.00))
,SUM(ISNULL(W1.TOTAL_TALK							,0.00)) --WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,SUM(ISNULL(W1.HANDLE_TIME							,0.00)) --WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,SUM(ISNULL(W1.CPROD								,0.00)) --WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,SUM(ISNULL(W1.MINIMUM_GUARANTEE					,0.00))	--WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,SUM(ISNULL(W1.AUTHORIZED_TO_INVOICE				,0.00))	--WILL BE CALCULATED WHEN TRUE OUTBOUND TALK DATA IS IMPORTED
,MAX(W1.EMAIL)
,W1.ID_EXT
,MAX(W1.SCHEDULER_ACL_NAME)
,W1.STD_TENANT_START_DATE_TIME_KEY
,MAX(W1.CAL_DATE)
,160
,MAX(W1.AIR_DAY_TYPE)
,MAX(W1.AIR_ACW_FONT_COLOR)
,MAX(W1.MIN_GUARANTEE_MINUTES)
,MAX(W1.MIN_GUARANTEE_TYPE)
,MAX(W1.AUTHORIZED_TO_INVOICE_TYPE)
,MAX(W1.HAS_HOLIDAYS)
,MAX(W1.INCLUDE_IN_CAS)
,MAX(W1.READY_FOR_XML)
,MAX(W1.SHOW_ID_EXTS)
,W1.INVOICE_ID
,MAX(W1.RESOURCE_NAME)
,SUM(ISNULL(W1.AIRITKDUR,0))
,SUM(ISNULL(W1.AIRIACDUR,0))
,W1.PAY_GROUP

,@WS_ROW_CREATED_TIME    --[WS_ROW_CREATED_TIME] [datetime] NOT NULL,
,NULL                    --[WS_ROW_UPDATED_TIME] [datetime] NULL,

FROM            WSOL_TB_IMPORTS_MONAT_IC_INVOICING_1  W1

LEFT JOIN       WSOL_TB_IMPORTS_MONAT_IC_INVOICING_2   G	ON G.STD_TENANT_START_DATE_TIME_KEY = W1.STD_TENANT_START_DATE_TIME_KEY
														   AND G.FF_AGENT_NAME                  = W1.FF_AGENT_NAME
--														   AND G.ID_EXT							= W1.ID_EXT

WHERE (G.FF_AGENT_NAME                     IS NULL AND ISNULL(W1.FF_AGENT_NAME,'') <> '' )
  AND (G.STD_TENANT_START_DATE_TIME_KEY	   IS NULL AND ISNULL(W1.STD_TENANT_START_DATE_TIME_KEY,0) <> 0 )
--  AND (G.ID_EXT							   IS NULL AND ISNULL(W1.ID_EXT,'') <> '' )

GROUP BY
 W1.FF_DATE
,W1.FF_AGENT_NAME
,W1.SEQNO_ADDED_TIME
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.HOUR_INTERVAL
,W1.ID_EXT
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.INVOICE_ID
,W1.PAY_GROUP

ORDER BY
 W1.FF_AGENT_NAME
,W1.[DATETIME]

--=============================================
EARLY_EXIT:
--=============================================