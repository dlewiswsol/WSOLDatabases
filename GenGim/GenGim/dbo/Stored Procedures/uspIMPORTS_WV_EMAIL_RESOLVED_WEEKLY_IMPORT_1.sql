

CREATE PROCEDURE [dbo].[uspIMPORTS_WV_EMAIL_RESOLVED_WEEKLY_IMPORT]
AS
SET NOCOUNT ON

--  EXECUTE [dbo].[uspIMPORTS_WV_EMAIL_RESOLVED_WEEKLY_IMPORT]

--  SELECT * FROM WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1

--===================================================================================
DECLARE @TENANT_KEY INT
SET @TENANT_KEY = 900902  --WORLD VENTURES
--===================================================================================
DELETE FROM WSOL_TB_IMPORT_ERRORS_FOUND
WHERE TENANT_KEY		= @TENANT_KEY
  AND SUB_GROUP_NAME	= 'WORLD_VENTURES_EMAIL'
  --  SELECT * FROM WSOL_TB_IMPORT_ERRORS_FOUND WHERE TENANT_KEY = 900902
--===================================================================================

--=========================================================================================================
--  USING @WS_ROW_CREATED_TIME FOR ALL INSERTS WILL ALLOW ME TO DELETE SPECIFIC INSERT PROCESSES/FILES.
--  IN CASE OF EMERGENCY, BREAK GLASS.
--=========================================================================================================
DECLARE @WS_ROW_CREATED_TIME AS DATETIME
SET @WS_ROW_CREATED_TIME = dbo.getdate()  --CLOSE ENOUGH TO ACTUAL INSERT TIME!
--===================================================================================

--===================================================================================
--HANDLE COLUMN HEADER AND JUNK RECORDS:
--===================================================================================

		--<<<<< HEADER ROWS REMOVED AT IMPORT TIME >>>>>--

INSERT INTO WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_BAD
SELECT
 'NWS'					--BAD_IMPORTS_CODE		--'N'on 'W'orking 'S'olutions Record
,'ACT'					--BAD_IMPORTS_FILE_TYPE	--'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME	--WS_ROW_CREATED_TIME
,W1.FF_CASE_NUMBER
,W1.FF_CREATED_ON
,W1.FF_MODIFIED_ON
,W1.FF_CASE_TITLE
,W1.FF_ORIGIN
,W1.FF_STATUS
,W1.FF_OWNER
,W1.FF_SITE
,W1.FF_MANAGER
,W1.FF_ACCOUNT_NUMBER
,W1.FF_ADDRESS_1_COUNTRY_REGION
,W1.FF_NAME_QUEUE_ASSIGNED
,W1.FF_DISPOSITION_1
,W1.FF_DISPOSITION_2
,W1.FF_DISPOSITION_3
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.CREATED_DATETIME
,W1.CREATED_DATE
,W1.CREATED_HOUR
,W1.MODIFIED_DATETIME
,W1.MODIFIED_DATE
,W1.MODIFIED_HOUR
,W1.INVOICE_MAP_KEY
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_KEY
,W1.RESOURCE_NAME
FROM		WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1	W1
WHERE ISNULL(W1.FF_SITE,'') <> 'WSOL-Remote'

--======================================================================
--DELETE COLUMN HEADER AND JUNK RECORDS;
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1
WHERE ISNULL(FF_SITE,'') <> 'WSOL-Remote'

--===================================================================================
--HANDLE NON-EMAIL RECORDS:
--===================================================================================
INSERT INTO WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_BAD
SELECT
 'NEM'					--BAD_IMPORTS_CODE		--'N'on 'EM'ail Record
,'ACT'					--BAD_IMPORTS_FILE_TYPE	--'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME	--WS_ROW_CREATED_TIME
,W1.FF_CASE_NUMBER
,W1.FF_CREATED_ON
,W1.FF_MODIFIED_ON
,W1.FF_CASE_TITLE
,W1.FF_ORIGIN
,W1.FF_STATUS
,W1.FF_OWNER
,W1.FF_SITE
,W1.FF_MANAGER
,W1.FF_ACCOUNT_NUMBER
,W1.FF_ADDRESS_1_COUNTRY_REGION
,W1.FF_NAME_QUEUE_ASSIGNED
,W1.FF_DISPOSITION_1
,W1.FF_DISPOSITION_2
,W1.FF_DISPOSITION_3
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.CREATED_DATETIME
,W1.CREATED_DATE
,W1.CREATED_HOUR
,W1.MODIFIED_DATETIME
,W1.MODIFIED_DATE
,W1.MODIFIED_HOUR
,W1.INVOICE_MAP_KEY
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_KEY
,W1.RESOURCE_NAME
FROM		WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1	W1
WHERE ISNULL(W1.FF_ORIGIN,'') <> 'Email'

--======================================================================
--DELETE COLUMN HEADER AND JUNK RECORDS;
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1
WHERE ISNULL(FF_ORIGIN,'') <> 'Email'

--===================================================================================
--POPULATE ADDITIONAL FIELDS IN WORK (_1) TABLE THAT WEREN'T IN IMPORTED FILE:
--===================================================================================
UPDATE WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1 SET
 CREATED_DATETIME			= CAST(FF_CREATED_ON AS DATETIME)
,CREATED_DATE				= CAST(CONVERT(VARCHAR(10), CAST(FF_CREATED_ON AS DATETIME), 111) AS DATETIME)
,CREATED_HOUR				= CAST(CONVERT(VARCHAR(10), CAST(FF_CREATED_ON AS DATETIME), 111) + ' ' + CONVERT(VARCHAR(2), DATEPART(HH,CAST(FF_CREATED_ON AS DATETIME))) + ':00:00' AS DATETIME)
,MODIFIED_DATETIME			= CAST(FF_MODIFIED_ON AS DATETIME)
,MODIFIED_DATE				= CAST(CONVERT(VARCHAR(10), CAST(FF_MODIFIED_ON AS DATETIME), 111) AS DATETIME)
,MODIFIED_HOUR				= CAST(CONVERT(VARCHAR(10), CAST(FF_MODIFIED_ON AS DATETIME), 111) + ' ' + CONVERT(VARCHAR(2), DATEPART(HH,CAST(FF_MODIFIED_ON AS DATETIME))) + ':00:00' AS DATETIME)
,RESOURCE_NAME				= CONCAT(SUBSTRING(FF_OWNER, CHARINDEX(' ',FF_OWNER) + 1, LEN(FF_OWNER) - CHARINDEX(' ',FF_OWNER)),', ',LEFT(FF_OWNER,CHARINDEX(' ',FF_OWNER) - 1))
,TENANT_KEY					= @TENANT_KEY

--===================================================================================================
-- UPDATE DATETIME KEY
--===================================================================================================
UPDATE WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1 SET
 STD_TENANT_START_DATE_TIME_KEY = DT.DATE_TIME_KEY
FROM		WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1	I
INNER JOIN	DATE_TIME									DT	ON DT.CAL_DATE = I.[MODIFIED_HOUR]

--===============================================
--HANDLE INVALID DATE/TIME RECORDS:
--===============================================
INSERT INTO WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_BAD
SELECT
 'DTM'					--BAD_IMPORTS_CODE		--'Invalid Date/Time'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE	--'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W1.FF_CASE_NUMBER
,W1.FF_CREATED_ON
,W1.FF_MODIFIED_ON
,W1.FF_CASE_TITLE
,W1.FF_ORIGIN
,W1.FF_STATUS
,W1.FF_OWNER
,W1.FF_SITE
,W1.FF_MANAGER
,W1.FF_ACCOUNT_NUMBER
,W1.FF_ADDRESS_1_COUNTRY_REGION
,W1.FF_NAME_QUEUE_ASSIGNED
,W1.FF_DISPOSITION_1
,W1.FF_DISPOSITION_2
,W1.FF_DISPOSITION_3
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.CREATED_DATETIME
,W1.CREATED_DATE
,W1.CREATED_HOUR
,W1.MODIFIED_DATETIME
,W1.MODIFIED_DATE
,W1.MODIFIED_HOUR
,W1.INVOICE_MAP_KEY
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_KEY
,W1.RESOURCE_NAME
-- SELECT *
FROM           WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1    W1
WHERE ISNULL(W1.STD_TENANT_START_DATE_TIME_KEY,0) = 0

--======================================================================
--DELETE INVALID DATE/TIME RECORDS;
--======================================================================
DELETE FROM WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1
WHERE ISNULL(STD_TENANT_START_DATE_TIME_KEY,0) = 0
--======================================================================

--===========================================================================================================
--HANDLE DUPLICATES:
--===========================================================================================================
INSERT INTO WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_BAD
SELECT
 'DUP'					--BAD_IMPORTS_CODE		--'DUPLICATE'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE --'ACT'IVITY FILE
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME
,W1.FF_CASE_NUMBER
,W1.FF_CREATED_ON
,W1.FF_MODIFIED_ON
,W1.FF_CASE_TITLE
,W1.FF_ORIGIN
,W1.FF_STATUS
,W1.FF_OWNER
,W1.FF_SITE
,W1.FF_MANAGER
,W1.FF_ACCOUNT_NUMBER
,W1.FF_ADDRESS_1_COUNTRY_REGION
,W1.FF_NAME_QUEUE_ASSIGNED
,W1.FF_DISPOSITION_1
,W1.FF_DISPOSITION_2
,W1.FF_DISPOSITION_3
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.CREATED_DATETIME
,W1.CREATED_DATE
,W1.CREATED_HOUR
,W1.MODIFIED_DATETIME
,W1.MODIFIED_DATE
,W1.MODIFIED_HOUR
,W1.INVOICE_MAP_KEY
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_KEY
,W1.RESOURCE_NAME

FROM
(	SELECT
	 FF_CASE_NUMBER
	,FF_CREATED_ON
	,FF_MODIFIED_ON
	,FF_STATUS
	,FF_OWNER
	,FF_MANAGER
	,FF_ACCOUNT_NUMBER
	,FF_ADDRESS_1_COUNTRY_REGION
	,FF_NAME_QUEUE_ASSIGNED
	,ROW_NUMBER() over (partition by FF_CASE_NUMBER, FF_CREATED_ON, FF_MODIFIED_ON, FF_STATUS, FF_OWNER, FF_MANAGER, FF_ACCOUNT_NUMBER, FF_ADDRESS_1_COUNTRY_REGION, FF_NAME_QUEUE_ASSIGNED
                            order by FF_CASE_NUMBER, FF_CREATED_ON, FF_MODIFIED_ON, FF_STATUS, FF_OWNER, FF_MANAGER, FF_ACCOUNT_NUMBER, FF_ADDRESS_1_COUNTRY_REGION, FF_NAME_QUEUE_ASSIGNED, FF_DISPOSITION_1 DESC) ROWNO
	FROM WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1
) TNM
LEFT JOIN      WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1	W1   ON W1.FF_CASE_NUMBER				= TNM.FF_CASE_NUMBER
																AND W1.FF_CREATED_ON				= TNM.FF_CREATED_ON
																AND W1.FF_MODIFIED_ON				= TNM.FF_MODIFIED_ON
																AND W1.FF_STATUS					= TNM.FF_STATUS
																AND W1.FF_OWNER						= TNM.FF_OWNER
																AND W1.FF_MANAGER					= TNM.FF_MANAGER
																AND W1.FF_ACCOUNT_NUMBER			= TNM.FF_ACCOUNT_NUMBER
																AND W1.FF_ADDRESS_1_COUNTRY_REGION	= TNM.FF_ADDRESS_1_COUNTRY_REGION
																AND W1.FF_NAME_QUEUE_ASSIGNED		= TNM.FF_NAME_QUEUE_ASSIGNED
WHERE TNM.ROWNO > 1

--===========================================================================================================
--DELETE DUPLICATES:
--===========================================================================================================
DELETE FROM TNM
FROM
(	SELECT
	 FF_CASE_NUMBER
	,FF_CREATED_ON
	,FF_MODIFIED_ON
	,FF_STATUS
	,FF_OWNER
	,FF_MANAGER
	,FF_ACCOUNT_NUMBER
	,FF_ADDRESS_1_COUNTRY_REGION
	,FF_NAME_QUEUE_ASSIGNED
	,ROW_NUMBER() over (partition by FF_CASE_NUMBER, FF_CREATED_ON, FF_MODIFIED_ON, FF_STATUS, FF_OWNER, FF_MANAGER, FF_ACCOUNT_NUMBER, FF_ADDRESS_1_COUNTRY_REGION, FF_NAME_QUEUE_ASSIGNED
                            order by FF_CASE_NUMBER, FF_CREATED_ON, FF_MODIFIED_ON, FF_STATUS, FF_OWNER, FF_MANAGER, FF_ACCOUNT_NUMBER, FF_ADDRESS_1_COUNTRY_REGION, FF_NAME_QUEUE_ASSIGNED, FF_DISPOSITION_1 DESC) ROWNO
	FROM WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1
) TNM
WHERE TNM.ROWNO > 1
--===========================================================================================================

--===========================================================================================================
--UPDATE FIELDS FROM MAPPING DATA
--===========================================================================================================
UPDATE WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1 SET
 INVOICE_MAP_KEY = ISNULL(IAM.INVOICE_MAP_KEY,'')
 --SELECT *
 FROM            WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1	I
 LEFT JOIN       WSOL_TB_IMPORTS_WV_AIA_AGENT_MAPPING		IAM  ON IAM.EMAIL_MAP_KEY = I.RESOURCE_NAME

--SELECT * FROM WSOL_TB_IMPORTS_WV_AIA_AGENT_MAPPING

--======================================================================
--CHECK FOR BAD DATA FOUND IN IMPORT .CSV FILES:
--======================================================================
--SELECT * FROM WSOL_TB_IMPORT_ERRORS_FOUND WHERE TENANT_KEY = 900902
--======================================================================
DECLARE
 @ERR_CNT  INT
,@RCD_CNT  INT
,@MSG1     VARCHAR(2500)
SET @ERR_CNT  = 0 
SET @RCD_CNT  = 0 
SET @MSG1     = ''
--Check #1:  ===================================================================================================
	SET @RCD_CNT = (SELECT COUNT(*) FROM WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1)
	IF @RCD_CNT < 1 BEGIN
		SET @MSG1 = @MSG1 + 'ERROR!  File Import Failed.  No Records Were/Could Be Imported.   |   ' 
		SET @ERR_CNT = @ERR_CNT + 1
	END

--=============================== INSERT INTO PERMANENT TABLE (No errors) OR SKIP AND GO TO END (Errors):
IF @ERR_CNT > 0 BEGIN
	INSERT INTO WSOL_TB_IMPORT_ERRORS_FOUND
	SELECT 
	 @TENANT_KEY				--TENANT_KEY
	,'WORLD_VENTURES_EMAIL'		--SUB_GROUP_NAME
	,@MSG1						--ERROR_MSG
	--===========================
	GOTO EARLY_EXIT
	--===========================
END
ELSE BEGIN
	--MUST RETURN AT LEAST ONE RECORD TO SSIS
	INSERT INTO WSOL_TB_IMPORT_ERRORS_FOUND
	SELECT 
	 @TENANT_KEY				--TENANT_KEY
	,'WORLD_VENTURES_EMAIL'	--SUB_GROUP_NAME
	,''							--ERROR_MSG
END

--=============================================
--	UPDATE PERMANENT TABLE
--=============================================
UPDATE WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY SET
-- FF_CASE_NUMBER					= W1.FF_CASE_NUMBER
--,FF_CREATED_ON					= W1.FF_CREATED_ON
--,FF_MODIFIED_ON					= W1.FF_MODIFIED_ON
 FF_CASE_TITLE						= W1.FF_CASE_TITLE
,FF_ORIGIN							= W1.FF_ORIGIN
--,FF_STATUS						= W1.FF_STATUS
--,FF_OWNER							= W1.FF_OWNER
,FF_SITE							= W1.FF_SITE
--,FF_MANAGER						= W1.FF_MANAGER
,FF_ACCOUNT_NUMBER				= W1.FF_ACCOUNT_NUMBER
,FF_ADDRESS_1_COUNTRY_REGION		= W1.FF_ADDRESS_1_COUNTRY_REGION
--,FF_NAME_QUEUE_ASSIGNED			= W1.FF_NAME_QUEUE_ASSIGNED
,FF_DISPOSITION_1					= W1.FF_DISPOSITION_1
,FF_DISPOSITION_2					= W1.FF_DISPOSITION_2
,FF_DISPOSITION_3					= W1.FF_DISPOSITION_3

,SEQNO_ADDED_TIME					= W1.SEQNO_ADDED_TIME
,SEQNO								= W1.SEQNO
,FTP_FILE_NAME						= W1.FTP_FILE_NAME

,CREATED_DATETIME					= W1.CREATED_DATETIME
,CREATED_DATE						= W1.CREATED_DATE
,CREATED_HOUR						= W1.CREATED_HOUR
,MODIFIED_DATETIME					= W1.MODIFIED_DATETIME
,MODIFIED_DATE						= W1.MODIFIED_DATE
,MODIFIED_HOUR						= W1.MODIFIED_HOUR
,INVOICE_MAP_KEY					= W1.INVOICE_MAP_KEY
,STD_TENANT_START_DATE_TIME_KEY		= W1.STD_TENANT_START_DATE_TIME_KEY
,TENANT_KEY							= W1.TENANT_KEY
,RESOURCE_NAME						= W1.RESOURCE_NAME
--,WS_ROW_CREATED_TIME				= NULL
,WS_ROW_UPDATED_TIME				= @WS_ROW_CREATED_TIME

--  SELECT *
FROM            WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1  W1
INNER JOIN      WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY    G   ON  G.FF_CASE_NUMBER			= W1.FF_CASE_NUMBER
																AND G.FF_CREATED_ON				= W1.FF_CREATED_ON
																AND G.FF_MODIFIED_ON			= W1.FF_MODIFIED_ON
																AND G.FF_STATUS					= W1.FF_STATUS
																AND G.FF_OWNER					= W1.FF_OWNER
																AND G.FF_MANAGER				= W1.FF_MANAGER
																AND G.FF_NAME_QUEUE_ASSIGNED	= W1.FF_NAME_QUEUE_ASSIGNED


-- WHERE PERMANENT TABLE KEY FIELDS MATCH WORK TABLE KEY FIELDS - UPDATE NON-KEY FIELDS!
WHERE G.FF_CASE_NUMBER			= W1.FF_CASE_NUMBER
  AND G.FF_CREATED_ON			= W1.FF_CREATED_ON
  AND G.FF_MODIFIED_ON			= W1.FF_MODIFIED_ON
  AND G.FF_STATUS				= W1.FF_STATUS
  AND G.FF_OWNER				= W1.FF_OWNER
  AND G.FF_MANAGER				= W1.FF_MANAGER
  AND G.FF_NAME_QUEUE_ASSIGNED	= W1.FF_NAME_QUEUE_ASSIGNED

--=============================================
--INSERT INTO PERMANENT IMPORT TABLE: 
--=============================================
INSERT INTO WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY
(FF_CASE_NUMBER
,FF_CREATED_ON
,FF_MODIFIED_ON
,FF_CASE_TITLE
,FF_ORIGIN
,FF_STATUS
,FF_OWNER
,FF_SITE
,FF_MANAGER
,FF_ACCOUNT_NUMBER
,FF_ADDRESS_1_COUNTRY_REGION
,FF_NAME_QUEUE_ASSIGNED
,FF_DISPOSITION_1
,FF_DISPOSITION_2
,FF_DISPOSITION_3
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,CREATED_DATETIME
,CREATED_DATE
,CREATED_HOUR
,MODIFIED_DATETIME
,MODIFIED_DATE
,MODIFIED_HOUR
,INVOICE_MAP_KEY
,STD_TENANT_START_DATE_TIME_KEY
,TENANT_KEY
,RESOURCE_NAME
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 W1.FF_CASE_NUMBER
,W1.FF_CREATED_ON
,W1.FF_MODIFIED_ON
,W1.FF_CASE_TITLE
,W1.FF_ORIGIN
,W1.FF_STATUS
,W1.FF_OWNER
,W1.FF_SITE
,W1.FF_MANAGER
,W1.FF_ACCOUNT_NUMBER
,W1.FF_ADDRESS_1_COUNTRY_REGION
,W1.FF_NAME_QUEUE_ASSIGNED
,W1.FF_DISPOSITION_1
,W1.FF_DISPOSITION_2
,W1.FF_DISPOSITION_3

,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME

,W1.CREATED_DATETIME
,W1.CREATED_DATE
,W1.CREATED_HOUR
,W1.MODIFIED_DATETIME
,W1.MODIFIED_DATE
,W1.MODIFIED_HOUR
,W1.INVOICE_MAP_KEY
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_KEY
,W1.RESOURCE_NAME

,@WS_ROW_CREATED_TIME    --[WS_ROW_CREATED_TIME] [datetime] NOT NULL,
,NULL                    --[WS_ROW_UPDATED_TIME] [datetime] NULL,

FROM            WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY_1  W1

LEFT JOIN       WSOL_TB_IMPORTS_WV_EMAIL_RESOLVED_WEEKLY    G   ON  G.FF_CASE_NUMBER			= W1.FF_CASE_NUMBER
																AND G.FF_CREATED_ON				= W1.FF_CREATED_ON
																AND G.FF_MODIFIED_ON			= W1.FF_MODIFIED_ON
																AND G.FF_STATUS					= W1.FF_STATUS
																AND G.FF_OWNER					= W1.FF_OWNER
																AND G.FF_MANAGER				= W1.FF_MANAGER
																AND G.FF_NAME_QUEUE_ASSIGNED	= W1.FF_NAME_QUEUE_ASSIGNED

WHERE (G.FF_CASE_NUMBER			IS NULL AND ISNULL(W1.FF_CASE_NUMBER		,'') <> '' )
  AND (G.FF_CREATED_ON			IS NULL AND ISNULL(W1.FF_CREATED_ON			,'') <> '' )
  AND (G.FF_MODIFIED_ON			IS NULL AND ISNULL(W1.FF_MODIFIED_ON		,'') <> '' )
  AND (G.FF_STATUS				IS NULL AND ISNULL(W1.FF_STATUS				,'') <> '' )
  AND (G.FF_OWNER				IS NULL AND ISNULL(W1.FF_OWNER				,'') <> '' )
  AND (G.FF_MANAGER				IS NULL AND ISNULL(W1.FF_MANAGER			,'') <> '' )
  AND (G.FF_NAME_QUEUE_ASSIGNED	IS NULL AND ISNULL(W1.FF_NAME_QUEUE_ASSIGNED,'') <> '' )
--=============================================
EARLY_EXIT:
--=============================================
