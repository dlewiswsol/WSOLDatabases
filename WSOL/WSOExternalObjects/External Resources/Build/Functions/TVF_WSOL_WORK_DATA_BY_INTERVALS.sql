
-- =======================================================================
-- Author:		ISAAC GUARDIOLA
-- Create date:	2017-07-29
-- Description:	FUNCTION TO RETURN WORK DATA BY AGENT BY INTERVAL
-- =======================================================================
CREATE FUNCTION [dbo].[TVF_WSOL_WORK_DATA_BY_INTERVALS] 
(
	-- Add the parameters for the function here
	 @DTM_BEG		DATETIME
	,@DTM_END		DATETIME
	,@INTERVAL		VARCHAR(1) 
	,@DUR_IN		VARCHAR(1)
	,@CLIENT_ID		VARCHAR(3500)
	,@PROGRAM_ID	VARCHAR(3500)
)
RETURNS 
@RESULTS_TABLE TABLE 
(
	-- Add the column definitions for the TABLE variable here
	 DATE_TIME				DATETIME
	,HOUR_INTERVAL			VARCHAR(2)
	,CLIENT_ID				VARCHAR(20)
	,SCHEDULER_ACL_NAME		VARCHAR(200)
	,RESOURCE_NAME			VARCHAR(400)
	,INVOICE_MAP_KEY		VARCHAR(150)
	,LOGGED_IN_TIME			DECIMAL(10,2)
	,PRODUCTIVE_TIME		DECIMAL(10,2)
)
AS
BEGIN
	-- Fill the table variable with the rows for your result set

	SET @CLIENT_ID	= ',' + LTRIM(RTRIM(REPLACE(@CLIENT_ID	,'ALL','0'))) + ','
	SET @PROGRAM_ID	= ',' + LTRIM(RTRIM(REPLACE(@PROGRAM_ID	,'ALL','0'))) + ','

	--==================================
	--	SET AMOUNT TO DIVIDE BY:
	--==================================
	DECLARE @DS DECIMAL(10,2)
	IF @DUR_IN = 'S' BEGIN
		SET @DS = 1.00
	END
	IF @DUR_IN = 'M' BEGIN
		SET @DS = 60.00
	END
	IF @DUR_IN = 'H' BEGIN
		SET @DS = 3600.00
	END

	INSERT INTO @RESULTS_TABLE
	SELECT
	 CASE WHEN @INTERVAL = 'D' THEN
			CAST(CONVERT(DATE, DAT.DATE_TIME) AS DATETIME)
		  ELSE
			DAT.DATE_TIME
	 END								AS DATE_TIME
	,CASE WHEN @INTERVAL = 'D' THEN
			'0'
		  ELSE
			DAT.HOUR_INTERVAL
	 END								AS HOUR_INTERVAL
	,DAT.CLIENT_ID
	,DAT.SCHEDULER_ACL_NAME
	,DAT.RESOURCE_NAME
	,DAT.INVOICE_MAP_KEY
	,SUM(DAT.LOGGED_IN_TIME)  / @DS		AS LOGGED_IN_TIME
	,SUM(DAT.PRODUCTIVE_TIME) / @DS		AS PRODUCTIVE_TIME
	FROM
	(	
		-- <<<<< APFM >>>>> --
		SELECT
		 INV.[DATETIME]						AS DATE_TIME
		,INV.HOUR_INTERVAL					AS HOUR_INTERVAL
		,141	/* APFM */					AS CLIENT_ID
		,CASE WHEN INV.SCHEDULER_ACL_NAME = 'APFM Standard Agents R2' THEN 'APFM Standard Agents'
			  ELSE INV.SCHEDULER_ACL_NAME
		 END								AS SCHEDULER_ACL_NAME
		,INV.FF_AGENT_NAME					AS RESOURCE_NAME
		,INV.EMPLOYEE_ID					AS INVOICE_MAP_KEY
		,SUM(INV.LOGGED_IN_DUR)				AS LOGGED_IN_TIME
		,SUM(INV.AUTHORIZED)				AS PRODUCTIVE_TIME
		FROM WSOL_TB_IMPORTS_APFM_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		GROUP BY
		 INV.[DATETIME]						--AS DATE_TIME
		,INV.HOUR_INTERVAL					--AS HOUR_INTERVAL
		,CASE WHEN INV.SCHEDULER_ACL_NAME = 'APFM Standard Agents R2' THEN 'APFM Standard Agents'
			  ELSE INV.SCHEDULER_ACL_NAME
		 END								--AS SCHEDULER_ACL_NAME
		,INV.FF_AGENT_NAME					--AS AGENT_NAME
		,INV.EMPLOYEE_ID					--AS INVOICE_MAP_KEY
		
		UNION ALL
		
		-- <<<<< DATALOT >>>>> --
		SELECT
		 DATEADD(HH,-1,INV.[DATETIME])													AS DATE_TIME
		,CAST(INV.HOUR_INTERVAL AS INT) - 1												AS HOUR_INTERVAL
		,146	/* DATALOT */															AS CLIENT_ID
		,CASE WHEN INV.ID_EXT = 'DLS' THEN 'Datalot Standard Agents'
			  WHEN INV.ID_EXT = 'DLR' THEN 'Datalot Resource Agents'
			  ELSE INV.SCHEDULER_ACL_NAME
		 END																			AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME																AS RESOURCE_NAME
		,INV.FF_AGENT_ID																AS INVOICE_MAP_KEY
		,(SUM(INV.ONLINE_TIME) + SUM(INV.WRAP_ADJ_TIME)) * 60.00						AS LOGGED_IN_TIME
		,(SUM(INV.CONNECTED_TIME) + SUM(INV.WRAP_TIME) + SUM(INV.WAITING_TIME)) * 60.00	AS PRODUCTIVE_TIME
		FROM YZ_TB_IMPORTS_DATALOT_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		GROUP BY
		 DATEADD(HH,-1,INV.[DATETIME])											--AS DATE_TIME
		,CAST(INV.HOUR_INTERVAL AS INT) - 1										--AS HOUR_INTERVAL
		,CASE WHEN INV.ID_EXT = 'DLS' THEN 'Datalot Standard Agents'
			  WHEN INV.ID_EXT = 'DLR' THEN 'Datalot Resource Agents'
			  ELSE INV.SCHEDULER_ACL_NAME
		 END																	--AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME														--AS RESOURCE_NAME
		,INV.FF_AGENT_ID														--AS INVOICE_MAP_KEY

		UNION ALL

		-- <<<<< HUMACH >>>>> --
		SELECT
		 INV.[DATETIME]																AS DATE_TIME
		,INV.HOUR_INTERVAL															AS HOUR_INTERVAL
		,CASE WHEN INV.FF_CUSTOMER_ID = 177 THEN 32		/* ASURION */
			  WHEN INV.FF_CUSTOMER_ID = 190 THEN 154	/* i9 SPORTS */
		 END																		AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME														AS SCHEDULER_ACL_NAME
		,CASE WHEN CHARINDEX('_',INV.RESOURCE_NAME) > 0 THEN
				LEFT(INV.RESOURCE_NAME,CHARINDEX('_',INV.RESOURCE_NAME) - 1)
			  ELSE
				INV.RESOURCE_NAME
		 END																		AS RESOURCE_NAME
		,CASE WHEN CHARINDEX('_',INV.FF_AGENT_LAST_NAME) > 0 THEN
				LOWER(LEFT(INV.FF_AGENT_FIRST_NAME,1)) + LOWER(LEFT(INV.FF_AGENT_LAST_NAME,CHARINDEX('_',INV.FF_AGENT_LAST_NAME) - 1)) + RIGHT(INV.FF_AGENT_LAST_NAME,3)
			  ELSE
				LOWER(LEFT(INV.FF_AGENT_FIRST_NAME,1)) + LOWER(INV.FF_AGENT_LAST_NAME)
		 END																		AS INVOICE_MAP_KEY
		,SUM(INV.LOGGED_IN_SECS)													AS LOGGED_IN_TIME
		,SUM(INV.CPROD)																AS PRODUCTIVE_TIME
		FROM WSOL_TB_IMPORTS_HUMACH_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		  AND ISNULL(INV.INVOICE_ID,'') <> ''
		GROUP BY
		 INV.[DATETIME]																--AS DATE_TIME
		,INV.HOUR_INTERVAL															--AS HOUR_INTERVAL
		,INV.FF_CUSTOMER_ID															--AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME														--AS SCHEDULER_ACL_NAME
		,CASE WHEN CHARINDEX('_',INV.RESOURCE_NAME) > 0 THEN
				LEFT(INV.RESOURCE_NAME,CHARINDEX('_',INV.RESOURCE_NAME) - 1)
			  ELSE
				INV.RESOURCE_NAME
		 END																		--AS RESOURCE_NAME
		,CASE WHEN CHARINDEX('_',INV.FF_AGENT_LAST_NAME) > 0 THEN
				LOWER(LEFT(INV.FF_AGENT_FIRST_NAME,1)) + LOWER(LEFT(INV.FF_AGENT_LAST_NAME,CHARINDEX('_',INV.FF_AGENT_LAST_NAME) - 1)) + RIGHT(INV.FF_AGENT_LAST_NAME,3)
			  ELSE
				LOWER(LEFT(INV.FF_AGENT_FIRST_NAME,1)) + LOWER(INV.FF_AGENT_LAST_NAME)
		 END																		--AS INVOICE_MAP_KEY

		UNION ALL

		-- <<<<< BRIGHT_PATTERN >>>>> --
		SELECT
		 INV.[DATETIME]																AS DATE_TIME
		,INV.HOUR_INTERVAL															AS HOUR_INTERVAL
		,CASE WHEN INV.FF_TEAM = 'Asurion Agents'   THEN 32		/* ASURION */
			  WHEN INV.FF_TEAM = 'i9 Sports Agents' THEN 154	/* i9 SPORTS */
		 END																		AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME														AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME															AS RESOURCE_NAME
		,INV.EMPLOYEE_ID															AS INVOICE_MAP_KEY
		,SUM(INV.LOGGED_IN_TIME)													AS LOGGED_IN_TIME
		,SUM(INV.CPROD)																AS PRODUCTIVE_TIME
		-- SELECT *
		FROM WSOL_TB_IMPORTS_BRIGHT_PATTERN_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		  AND ISNULL(INV.INVOICE_ID,'') <> ''
		GROUP BY
		 INV.[DATETIME]																--AS DATE_TIME
		,INV.HOUR_INTERVAL															--AS HOUR_INTERVAL
		,INV.FF_TEAM																--AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME														--AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME															--AS RESOURCE_NAME
		,INV.EMPLOYEE_ID															--AS INVOICE_MAP_KEY

		UNION ALL

		-- <<<<< GAR >>>>> --
		SELECT
		 INV.[DATETIME]						AS DATE_TIME
		,INV.HOUR_INTERVAL					AS HOUR_INTERVAL
		,97		/* GAR */					AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME				AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					AS RESOURCE_NAME
		,INV.FF_AGENT_NAME					AS INVOICE_MAP_KEY
		,SUM(INV.LOGIN_TIME)				AS LOGGED_IN_TIME
		,SUM(INV.CPROD)						AS PRODUCTIVE_TIME
		--SELECT *
		FROM WSOL_TB_IMPORTS_GAR_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		GROUP BY
		 INV.[DATETIME]						--AS DATE_TIME
		,INV.HOUR_INTERVAL					--AS HOUR_INTERVAL
		,INV.SCHEDULER_ACL_NAME				--AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					--AS RESOURCE_NAME
		,INV.FF_AGENT_NAME					--AS INVOICE_MAP_KEY

		UNION ALL

		-- <<<<< WORLD VENTURES >>>>> --
		SELECT
		 INV.[DATETIME]						AS DATE_TIME
		,INV.HOUR_INTERVAL					AS HOUR_INTERVAL
		,68		/* WORLD VENTURES */		AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME				AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					AS RESOURCE_NAME
		,INV.FF_AGENT_NAME					AS INVOICE_MAP_KEY
		,SUM(INV.LOGIN_TIME)				AS LOGGED_IN_TIME
		,SUM(INV.CPROD)						AS PRODUCTIVE_TIME
		--SELECT *
		FROM WSOL_TB_IMPORTS_WV_INCONTACT_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		GROUP BY
		 INV.[DATETIME]						--AS DATE_TIME
		,INV.HOUR_INTERVAL					--AS HOUR_INTERVAL
		,INV.SCHEDULER_ACL_NAME				--AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					--AS RESOURCE_NAME
		,INV.FF_AGENT_NAME					--AS INVOICE_MAP_KEY 

		UNION ALL

		-- <<<<< STUBHUB >>>>> --
		SELECT
		 INV.[DATETIME]													AS DATE_TIME
		,INV.HOUR_INTERVAL												AS HOUR_INTERVAL
		,132	/* STUBHUB */											AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME											AS SCHEDULER_ACL_NAME
		,LEFT(INV.FF_AGENT_NAME, CHARINDEX('(',INV.FF_AGENT_NAME) - 2)	AS RESOURCE_NAME
		,INV.FF_USER_NAME												AS INVOICE_MAP_KEY
		,SUM(INV.LOGGED_IN_TIME)										AS LOGGED_IN_TIME
		,SUM(INV.CPROD)													AS PRODUCTIVE_TIME					
		--SELECT *
		FROM YZ_TB_IMPORTS_STUBHUB_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		GROUP BY
		 INV.[DATETIME]													--AS DATE_TIME
		,INV.HOUR_INTERVAL												--AS HOUR_INTERVAL
		,INV.SCHEDULER_ACL_NAME											--AS SCHEDULER_ACL_NAME
		,LEFT(INV.FF_AGENT_NAME, CHARINDEX('(',INV.FF_AGENT_NAME) - 2)	--AS RESOURCE_NAME
		,INV.FF_USER_NAME												--AS INVOICE_MAP_KEY

		UNION ALL

		-- <<<<< SABRE >>>>> --
		SELECT
		 INV.[DATETIME]					AS DATE_TIME
		,DATEPART(HOUR,INV.[DATETIME])	AS HOUR_INTERVAL
		,143	/* SABRE */				AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME			AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME				AS RESOURCE_NAME
		,INV.FF_USERNAME				AS INVOICE_MAP_KEY
		,SUM(INV.STAFFED_TIME)			AS LOGGED_IN_TIME
		,SUM(INV.CPROD)					AS PRODUCTIVE_TIME
		--SELECT *
		FROM WSOL_TB_IMPORTS_SABRE_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		GROUP BY
		 INV.[DATETIME]					--AS DATE_TIME
		,DATEPART(HOUR,INV.[DATETIME])	--AS HOUR_INTERVAL
		,INV.SCHEDULER_ACL_NAME			--AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME				--AS RESOURCE_NAME
		,INV.FF_USERNAME				--AS INVOICE_MAP_KEY

		UNION ALL

		-- <<<<< EGENCIA >>>>> --
		SELECT
		 INV.[DATETIME_CT]					AS DATE_TIME
		,DATEPART(HOUR,INV.[DATETIME_CT])	AS HOUR_INTERVAL
		,106	/* EGENCIA */				AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME				AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					AS RESOURCE_NAME
		,INV.FF_LOGIN_ID					AS INVOICE_MAP_KEY
		,SUM(INV.STAFFED_SECS)				AS LOGGED_IN_TIME
		,SUM(INV.CPROD)						AS PRODUCTIVE_TIME
		--SELECT *
		FROM WSOL_TB_IMPORTS_EGENCIA_INVOICING INV
		WHERE ( INV.[DATETIME_CT] >= @DTM_BEG AND INV.[DATETIME_CT] < @DTM_END )
		  AND ISNULL(INV.RESOURCE_NAME,'') <> ''
		GROUP BY
		 INV.[DATETIME_CT]					--AS DATE_TIME
		,DATEPART(HOUR,INV.[DATETIME_CT])	--AS HOUR_INTERVAL
		,INV.SCHEDULER_ACL_NAME				--AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					--AS RESOURCE_NAME
		,INV.FF_LOGIN_ID					--AS INVOICE_MAP_KEY

		UNION ALL

		-- <<<<< MONAT GLOBAL >>>>> --
		SELECT
		 INV.[DATETIME]						AS DATE_TIME
		,INV.HOUR_INTERVAL					AS HOUR_INTERVAL
		,160	/* MONAT GLOBAL */			AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME				AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					AS RESOURCE_NAME
		,INV.FF_AGENT_NAME					AS INVOICE_MAP_KEY
		,SUM(INV.AVAILABLE_TIME) +
		 SUM(INV.NON_CONNECT_CALL_TIME) +
		 SUM(INV.RONA_TIME) +
		 SUM(INV.UNAVAILABLE_TIME) +
		 SUM(INV.HANDLE_TIME)				AS LOGGED_IN_TIME
		,SUM(INV.CPROD)						AS PRODUCTIVE_TIME
		--SELECT *
		FROM WSOL_TB_IMPORTS_MONAT_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		  AND INV.[DATETIME] < CAST('2017-10-01' AS DATETIME)
		  AND ISNULL(INV.RESOURCE_NAME,'') <> ''
		GROUP BY
		 INV.[DATETIME]						--AS DATE_TIME
		,INV.HOUR_INTERVAL					--AS HOUR_INTERVAL
		,INV.SCHEDULER_ACL_NAME				--AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					--AS RESOURCE_NAME
		,INV.FF_AGENT_NAME					--AS INVOICE_MAP_KEY 
		
		UNION ALL

		SELECT
		 INV.[DATETIME]						AS DATE_TIME
		,INV.HOUR_INTERVAL					AS HOUR_INTERVAL
		,160	/* MONAT GLOBAL */			AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME				AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					AS RESOURCE_NAME
		,INV.FF_AGENT						AS INVOICE_MAP_KEY
		,SUM(INV.AVAILABLE_DUR) +
	     SUM(INV.DIRECT_CALL_DUR) +
		 SUM(ISNULL(INV.DIRECT_OB_DIAL_DUR,0.00)) + 
		 SUM(INV.RONA_DUR) +
		 SUM(INV.INCALL_DUR) +
		 SUM(INV.ACW_DUR) +
		 SUM(INV.RING_DUR) +
		 SUM(INV.UNAVAILABLE_DUR)			AS LOGGED_IN_TIME
		,SUM(INV.CPROD)						AS PRODUCTIVE_TIME
		--SELECT *
		FROM WSOL_TB_IMPORTS_MONAT_INVOICING_NEW INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		  AND INV.[DATETIME] >= CAST('2017-10-01' AS DATETIME)
		  AND ISNULL(INV.RESOURCE_NAME,'') <> ''
		GROUP BY
		 INV.[DATETIME]						--AS DATE_TIME
		,INV.HOUR_INTERVAL					--AS HOUR_INTERVAL
		,INV.SCHEDULER_ACL_NAME				--AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					--AS RESOURCE_NAME
		,INV.FF_AGENT						--AS INVOICE_MAP_KEY 
		
		UNION ALL

		SELECT
		 INV.[DATETIME]						AS DATE_TIME
		,INV.HOUR_INTERVAL					AS HOUR_INTERVAL
		,160	/* MONAT GLOBAL */			AS CLIENT_ID
		,INV.SCHEDULER_ACL_NAME				AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					AS RESOURCE_NAME
		,INV.FF_AGENT_NAME					AS INVOICE_MAP_KEY
		,SUM(INV.LOGIN_TIME)				AS LOGGED_IN_TIME
		,SUM(INV.CPROD)						AS PRODUCTIVE_TIME
		--SELECT *
		FROM WSOL_TB_IMPORTS_MONAT_IC_INVOICING INV
		WHERE ( INV.[DATETIME] >= @DTM_BEG AND INV.[DATETIME] < @DTM_END )
		  AND INV.[DATETIME] >= CAST('2017-11-18' AS DATETIME)
		  AND ISNULL(INV.RESOURCE_NAME,'') <> ''
		GROUP BY
		 INV.[DATETIME]						--AS DATE_TIME
		,INV.HOUR_INTERVAL					--AS HOUR_INTERVAL
		,INV.SCHEDULER_ACL_NAME				--AS SCHEDULER_ACL_NAME
		,INV.RESOURCE_NAME					--AS RESOURCE_NAME
		,INV.FF_AGENT_NAME					--AS INVOICE_MAP_KEY 

		/* SELECT * FROM CLIENT ORDER BY [NAME] */

	) DAT
	WHERE ( @CLIENT_ID	IN (',0,') OR CHARINDEX(',' + RTRIM(DAT.CLIENT_ID)	   + ',',@CLIENT_ID) > 0   )
	GROUP BY
	 CASE WHEN @INTERVAL = 'D' THEN
			CAST(CONVERT(DATE, DAT.DATE_TIME) AS DATETIME)
		  ELSE
			DAT.DATE_TIME
	 END
	,CASE WHEN @INTERVAL = 'D' THEN
			'0'
		  ELSE
			DAT.HOUR_INTERVAL
	 END
	,DAT.CLIENT_ID
	,DAT.SCHEDULER_ACL_NAME
	,DAT.RESOURCE_NAME
	,DAT.INVOICE_MAP_KEY

	RETURN 
END

GO