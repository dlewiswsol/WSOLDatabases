CREATE PROCEDURE [dbo].[uspIMPORTS_DAILY_SCHEDULE_IMPORT]
AS
SET NOCOUNT ON

--  EXECUTE [dbo].[uspIMPORTS_DAILY_SCHEDULE_IMPORT]

--  SELECT * FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1

--  Durations in imported file are in hours.

--=============================================
DECLARE @TENANT_KEY INT
SET @TENANT_KEY =       900555  --WSOL
--=============================================
DELETE FROM YZ_TB_ERRORS_FOUND 
WHERE TENANT_KEY = @TENANT_KEY
  AND SUB_GROUP_NAME = 'WSOL_SCHEDULE'    --  SELECT * FROM YZ_TB_ERRORS_FOUND WHERE TENANT_KEY = 900555
--=============================================

--====================================================================================================
-- USING @WS_ROW_CREATED_TIME FOR ALL INSERTS WILL ALLOW ME TO DELETE SPECIFIC INSERT PROCESSES/FILES.
-- IN CASE OF EMERGENCY, CRACK GLASS.
--====================================================================================================
DECLARE @WS_ROW_CREATED_TIME AS DATETIME
SET @WS_ROW_CREATED_TIME = dbo.getdate()  --CLOSE ENOUGH TO ACTUAL INSERT TIME!
--===================================================================================

--==============================================================
-- DETERMINE DATETIME OF DATA AND UPDATE WORK TABLE
--==============================================================
IF OBJECT_ID('TEMPDB..#SCHEDULE_GET_DATE') IS NOT NULL BEGIN
   DROP TABLE #SCHEDULE_GET_DATE
END
CREATE TABLE #SCHEDULE_GET_DATE
(SCHEDULE_DATE		  DATETIME
,FTP_FILE_NAME		  VARCHAR(100)
)
INSERT INTO #SCHEDULE_GET_DATE
SELECT
 CAST(W1.FF_OFFICIAL_ACL_NAME AS DATETIME)
,W1.FTP_FILE_NAME
FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1 W1
WHERE ISNULL(W1.FF_ROLE,'') = ''
  AND ISNULL(W1.FF_AGENT_NAME,'') <> 'Totals'

UPDATE WSOL_TB_IMPORTS_DAILY_SCHEDULE_1 SET
 [DATETIME] =  SGT.SCHEDULE_DATE
FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1 I
INNER JOIN #SCHEDULE_GET_DATE SGT ON SGT.FTP_FILE_NAME = I.FTP_FILE_NAME


--=====================================================
-- CAPTURE DATE BEFORE DELETING NON-ESSENTIAL RECORDS
--=====================================================
--DECLARE @FF_DATE DATETIME
--SET @FF_DATE =
--  CAST ((SELECT FF_OFFICIAL_ACL_NAME
--  FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1
--  WHERE ISNULL(FF_ROLE,'') = ''
--  AND ISNULL(FF_AGENT_NAME,'') <> 'Totals') AS DATETIME)
--PRINT @FF_DATE

--=================================================================================================
-- HANDLE COLUMN HEADER AND JUNK RECORDS:
--=================================================================================================
INSERT INTO WSOL_TB_IMPORTS_DAILY_SCHEDULE_BAD
(
BAD_IMPORTS_NO,BAD_IMPORTS_FILE_TYPE,WS_ROW_CREATED_TIME,FF_OFFICIAL_ACL_NAME,FF_ROLE,FF_FIELD_MAP_ID,FF_EMAIL,FF_AGENT_NAME,FF_SCHEDULED_HOURS
,FF_WORKED_HOURS,FF_CANCELLED_HOURS,FF_CANCELLED_PERCENT,SEQNO_ADDED_TIME,SEQNO,FTP_FILE_NAME,[DATETIME],STD_TENANT_START_DATE_TIME_KEY,TENANT_NAME
,OFFICIAL_ACL_NAME,[ROLE],FIELD_MAP_ID,EMAIL,AGENT_NAME,SCHEDULED_HOURS,SCHEDULED_AFTER_CANCELLATION_HOURS,CANCELLED_HOURS,CANCELLED_PERCENT
)
SELECT
 24                     --BAD_IMPORTS_NO  --'Junk Record'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE  --'ACT'IVITY FILE.
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME--TEST:,dbo.getdate()  --,TNM.*
,W1.FF_OFFICIAL_ACL_NAME
,W1.FF_ROLE
,W1.FF_FIELD_MAP_ID
,W1.FF_EMAIL
,W1.FF_AGENT_NAME
,W1.FF_SCHEDULED_HOURS
,W1.FF_WORKED_HOURS
,W1.FF_CANCELLED_HOURS
,W1.FF_CANCELLED_PERCENT
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_NAME
,W1.OFFICIAL_ACL_NAME
,W1.[ROLE]
,W1.FIELD_MAP_ID
,W1.EMAIL
,W1.AGENT_NAME
,W1.SCHEDULED_HOURS
,W1.SCHEDULED_AFTER_CANCELLATION_HOURS
,W1.CANCELLED_HOURS
,W1.CANCELLED_PERCENT
FROM           WSOL_TB_IMPORTS_DAILY_SCHEDULE_1    W1
WHERE ISNULL(W1.FF_ROLE,'')			IN ('Role','')
  OR  ISNULL(W1.FF_AGENT_NAME,'')	=   'Totals'
  OR  ISNULL(W1.FF_FIELD_MAP_ID,'') =   ''

--=================================================================================================
-- DELETE COLUMN HEADER AND JUNK RECORDS;
--=================================================================================================
DELETE FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1
WHERE ISNULL(FF_ROLE,'')			IN ('Role','')
  OR  ISNULL(FF_AGENT_NAME,'')		=   'Totals'
  OR  ISNULL(FF_FIELD_MAP_ID,'')	=   ''
--=================================================================================================

--=================================================================================================
-- HANDLE ACLs NOT USED FOR SCHEDULING:
--=================================================================================================
INSERT INTO WSOL_TB_IMPORTS_DAILY_SCHEDULE_BAD
(
BAD_IMPORTS_NO,BAD_IMPORTS_FILE_TYPE,WS_ROW_CREATED_TIME,FF_OFFICIAL_ACL_NAME,FF_ROLE,FF_FIELD_MAP_ID,FF_EMAIL,FF_AGENT_NAME,FF_SCHEDULED_HOURS
,FF_WORKED_HOURS,FF_CANCELLED_HOURS,FF_CANCELLED_PERCENT,SEQNO_ADDED_TIME,SEQNO,FTP_FILE_NAME,[DATETIME],STD_TENANT_START_DATE_TIME_KEY,TENANT_NAME
,OFFICIAL_ACL_NAME,[ROLE],FIELD_MAP_ID,EMAIL,AGENT_NAME,SCHEDULED_HOURS,SCHEDULED_AFTER_CANCELLATION_HOURS,CANCELLED_HOURS,CANCELLED_PERCENT
)
SELECT
 25                     --BAD_IMPORTS_NO  --'ACL NOT USED FOR SCHEDULING'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE  --'ACT'IVITY FILE.
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME--TEST:,dbo.getdate()  --,TNM.*
,W1.FF_OFFICIAL_ACL_NAME
,W1.FF_ROLE
,W1.FF_FIELD_MAP_ID
,W1.FF_EMAIL
,W1.FF_AGENT_NAME
,W1.FF_SCHEDULED_HOURS
,W1.FF_WORKED_HOURS
,W1.FF_CANCELLED_HOURS
,W1.FF_CANCELLED_PERCENT
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_NAME
,W1.OFFICIAL_ACL_NAME
,W1.[ROLE]
,W1.FIELD_MAP_ID
,W1.EMAIL
,W1.AGENT_NAME
,W1.SCHEDULED_HOURS
,W1.SCHEDULED_AFTER_CANCELLATION_HOURS
,W1.CANCELLED_HOURS
,W1.CANCELLED_PERCENT
FROM           WSOL_TB_IMPORTS_DAILY_SCHEDULE_1    W1
WHERE ISNULL(W1.FF_OFFICIAL_ACL_NAME,'') IN ('APFM AOR VIP','getaroom.com Standard Agents')

--getaroom.com Standard Agents Used as a Master ACL (not for scheduling)

--=================================================================================================
-- DELETE RECORDS FOR ACLs NOT USED FOR SCHEDULING:
--=================================================================================================
DELETE FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1
WHERE ISNULL(FF_OFFICIAL_ACL_NAME,'') IN ('APFM AOR VIP','getaroom.com Standard Agents')
--=================================================================================================

--=================================================================================================
-- POPULATE ADDITIONAL FIELDS IN WORK (_1) TABLE THAT WEREN'T IN IMPORTED FILE:
--=================================================================================================
UPDATE WSOL_TB_IMPORTS_DAILY_SCHEDULE_1 SET
-- [DATETIME]							= @FF_DATE
 OFFICIAL_ACL_NAME					= ISNULL(FF_OFFICIAL_ACL_NAME		,'')
,[ROLE]								= ISNULL(FF_ROLE					,'')
,FIELD_MAP_ID						= ISNULL(FF_FIELD_MAP_ID			,'')
,[EMAIL]							= ISNULL(FF_EMAIL					,'')
,AGENT_NAME							= ISNULL(FF_AGENT_NAME				,'')
,SCHEDULED_HOURS					= CAST(ISNULL(FF_SCHEDULED_HOURS	,'0.00') AS DECIMAL(10,2))
,SCHEDULED_AFTER_CANCELLATION_HOURS	= CAST(ISNULL(FF_WORKED_HOURS		,'0.00') AS DECIMAL(10,2))
,CANCELLED_HOURS					= CAST(ISNULL(FF_CANCELLED_HOURS	,'0.00') AS DECIMAL(10,2))
,CANCELLED_PERCENT					= CAST(ISNULL(FF_CANCELLED_PERCENT	,'0.00') AS DECIMAL(10,2))

--=================================================================================================
						
--=================================================================================================
-- POPULATE DATETIME KEY
--=================================================================================================
UPDATE WSOL_TB_IMPORTS_DAILY_SCHEDULE_1 SET
 STD_TENANT_START_DATE_TIME_KEY = DT.DATE_TIME_KEY
FROM            WSOL_TB_IMPORTS_DAILY_SCHEDULE_1	I
INNER JOIN      DATE_TIME							DT   ON DT.CAL_DATE = I.[DATETIME]

--=================================================================================================
-- HANDLE INVALID DATE/TIME RECORDS:
--=================================================================================================
INSERT INTO WSOL_TB_IMPORTS_DAILY_SCHEDULE_BAD
(
BAD_IMPORTS_NO,BAD_IMPORTS_FILE_TYPE,WS_ROW_CREATED_TIME,FF_OFFICIAL_ACL_NAME,FF_ROLE,FF_FIELD_MAP_ID,FF_EMAIL,FF_AGENT_NAME,FF_SCHEDULED_HOURS
,FF_WORKED_HOURS,FF_CANCELLED_HOURS,FF_CANCELLED_PERCENT,SEQNO_ADDED_TIME,SEQNO,FTP_FILE_NAME,[DATETIME],STD_TENANT_START_DATE_TIME_KEY,TENANT_NAME
,OFFICIAL_ACL_NAME,[ROLE],FIELD_MAP_ID,EMAIL,AGENT_NAME,SCHEDULED_HOURS,SCHEDULED_AFTER_CANCELLATION_HOURS,CANCELLED_HOURS,CANCELLED_PERCENT
)
SELECT
 26                     --BAD_IMPORTS_NO  --'Invalid Date/Time'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE  --'ACT'IVITY FILE,  'ACE' FILE.
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME--TEST:,dbo.getdate()  --,TNM.*
,W1.FF_OFFICIAL_ACL_NAME
,W1.FF_ROLE
,W1.FF_FIELD_MAP_ID
,W1.FF_EMAIL
,W1.FF_AGENT_NAME
,W1.FF_SCHEDULED_HOURS
,W1.FF_WORKED_HOURS
,W1.FF_CANCELLED_HOURS
,W1.FF_CANCELLED_PERCENT
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_NAME
,W1.OFFICIAL_ACL_NAME
,W1.[ROLE]
,W1.FIELD_MAP_ID
,W1.EMAIL
,W1.AGENT_NAME
,W1.SCHEDULED_HOURS
,W1.SCHEDULED_AFTER_CANCELLATION_HOURS
,W1.CANCELLED_HOURS
,W1.CANCELLED_PERCENT
FROM           WSOL_TB_IMPORTS_DAILY_SCHEDULE_1    W1
WHERE ISNULL(W1.STD_TENANT_START_DATE_TIME_KEY,0) = 0
--=================================================================================================
-- DELETE INVALID DATE/TIME RECORDS;
--=================================================================================================
DELETE FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1
WHERE ISNULL(STD_TENANT_START_DATE_TIME_KEY,0) = 0
--=================================================================================================

--SELECT * FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1

--=================================================================================================
-- REPLACE ANY "SCHEDULE ONLY" ACL NAMES
--=================================================================================================
UPDATE WSOL_TB_IMPORTS_DAILY_SCHEDULE_1 SET
 OFFICIAL_ACL_NAME = CASE WHEN FF_OFFICIAL_ACL_NAME = 'APFM VIP Agents' THEN
							CASE WHEN FF_ROLE = 'Resource' THEN
								   'APFM Resource Agents'
								 ELSE 'APFM Standard Agents' END
						  WHEN FF_OFFICIAL_ACL_NAME = 'Sabre VGR Standard Agents' THEN
							CASE WHEN FF_ROLE = 'Resource' THEN
								   'Sabre Resource Agents'
								 ELSE 'Sabre VGR Standard Agents' END
						  WHEN FF_OFFICIAL_ACL_NAME = 'getaroom.com VIP Sales Agents' THEN 'getaroom.com Sales Agents'
						  ELSE FF_OFFICIAL_ACL_NAME END

--=================================================================================================
-- POPULATE TENANT NAME
--=================================================================================================
UPDATE WSOL_TB_IMPORTS_DAILY_SCHEDULE_1 SET
 TENANT_NAME = CASE WHEN OFFICIAL_ACL_NAME LIKE 'Academy%'		THEN 'ASO'
					WHEN OFFICIAL_ACL_NAME LIKE 'APFM%'			THEN 'APFM'
					WHEN OFFICIAL_ACL_NAME LIKE 'Asurion%'		THEN 'Asurion'
					WHEN OFFICIAL_ACL_NAME LIKE 'Datalot%'		THEN 'Datalot'
					WHEN OFFICIAL_ACL_NAME LIKE 'Sabre%'		THEN 'Sabre'
					WHEN OFFICIAL_ACL_NAME LIKE 'getaroom.com%'	THEN 'GAR'
					ELSE '' END

--=================================================================================================
-- HANDLE DUPLICATES:
--=================================================================================================
INSERT INTO WSOL_TB_IMPORTS_DAILY_SCHEDULE_BAD(
BAD_IMPORTS_NO,BAD_IMPORTS_FILE_TYPE,WS_ROW_CREATED_TIME,FF_OFFICIAL_ACL_NAME,FF_ROLE,FF_FIELD_MAP_ID,FF_EMAIL,FF_AGENT_NAME,FF_SCHEDULED_HOURS
,FF_WORKED_HOURS,FF_CANCELLED_HOURS,FF_CANCELLED_PERCENT,SEQNO_ADDED_TIME,SEQNO,FTP_FILE_NAME,[DATETIME],STD_TENANT_START_DATE_TIME_KEY,TENANT_NAME
,OFFICIAL_ACL_NAME,[ROLE],FIELD_MAP_ID,EMAIL,AGENT_NAME,SCHEDULED_HOURS,SCHEDULED_AFTER_CANCELLATION_HOURS,CANCELLED_HOURS,CANCELLED_PERCENT
)
SELECT
 21                     --BAD_IMPORTS_NO  --'DUPLICATE'
,'ACT'                  --BAD_IMPORTS_FILE_TYPE  --'ACT'IVITY FILE,  'ACE' FILE.
,@WS_ROW_CREATED_TIME   --WS_ROW_CREATED_TIME--TEST:,dbo.getdate()  --,TNM.*
,W1.FF_OFFICIAL_ACL_NAME
,W1.FF_ROLE
,W1.FF_FIELD_MAP_ID
,W1.FF_EMAIL
,W1.FF_AGENT_NAME
,W1.FF_SCHEDULED_HOURS
,W1.FF_WORKED_HOURS
,W1.FF_CANCELLED_HOURS
,W1.FF_CANCELLED_PERCENT
,W1.SEQNO_ADDED_TIME
,W1.SEQNO
,W1.FTP_FILE_NAME
,W1.[DATETIME]
,W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_NAME
,W1.OFFICIAL_ACL_NAME
,W1.[ROLE]
,W1.FIELD_MAP_ID
,W1.EMAIL
,W1.AGENT_NAME
,W1.SCHEDULED_HOURS
,W1.SCHEDULED_AFTER_CANCELLATION_HOURS
,W1.CANCELLED_HOURS
,W1.CANCELLED_PERCENT
FROM
(	SELECT
	 [DATETIME]
	,FF_OFFICIAL_ACL_NAME
	,FF_AGENT_NAME
	,FF_FIELD_MAP_ID
	,ROW_NUMBER() over (partition by [DATETIME], FF_OFFICIAL_ACL_NAME, FF_AGENT_NAME, FF_FIELD_MAP_ID
                            order by [DATETIME], FF_OFFICIAL_ACL_NAME, FF_AGENT_NAME, FF_FIELD_MAP_ID, SCHEDULED_HOURS DESC) ROWNO
	FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1
) TNM
LEFT JOIN      WSOL_TB_IMPORTS_DAILY_SCHEDULE_1	W1	ON W1.[DATETIME]			= TNM.[DATETIME]
												   AND W1.FF_OFFICIAL_ACL_NAME	= TNM.FF_OFFICIAL_ACL_NAME
												   AND W1.FF_AGENT_NAME			= TNM.FF_AGENT_NAME
												   AND W1.FF_FIELD_MAP_ID		= TNM.FF_FIELD_MAP_ID
WHERE TNM.ROWNO > 1

--=================================================================================================
-- DELETE DUPLICATES:
--=================================================================================================
DELETE FROM TNM  
FROM
(	SELECT
	 [DATETIME]
	,FF_OFFICIAL_ACL_NAME
	,FF_AGENT_NAME
	,FF_FIELD_MAP_ID
	,ROW_NUMBER() over (partition by [DATETIME], FF_OFFICIAL_ACL_NAME, FF_AGENT_NAME, FF_FIELD_MAP_ID
                            order by [DATETIME], FF_OFFICIAL_ACL_NAME, FF_AGENT_NAME, FF_FIELD_MAP_ID, SCHEDULED_HOURS DESC) ROWNO
	FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1
) TNM
WHERE TNM.ROWNO > 1
--=================================================================================================

--=================================================================================================
-- CHECK FOR BAD DATA FOUND IN IMPORT .TXT/.CSV FILES:
--=================================================================================================

--  SELECT * FROM YZ_TB_ERRORS_FOUND WHERE TENANT_KEY = 900555
--=================================================================================================
DECLARE
 @ERR_CNT  INT
,@RCD_CNT  INT
,@MSG1     VARCHAR(2500)
SET @ERR_CNT  = 0 
SET @RCD_CNT  = 0 
SET @MSG1     = ''

--Check #1:  =========================================================================================================================
	SET @RCD_CNT = (SELECT COUNT(*) FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_1 )
	IF @RCD_CNT < 1 BEGIN
		SET @MSG1 = @MSG1 + 'ERROR! Daily Scheduled Hours File Import Failed!  Data File Contains Zero Records.   |   ' 
		SET @ERR_CNT = @ERR_CNT + 1
	END

--=================================================================================================
-- INSERT DATA INTO PERMANENT TABLE IF NO ERRORS FOUND
--=================================================================================================
IF @ERR_CNT > 0 BEGIN
	-- SSIS READS YZ_TB_ERRORS_FOUND Table WHERE TENANT_KEY = 900555
	-- If record exists, outputs results/error_msg field in an email.
	INSERT INTO YZ_TB_ERRORS_FOUND
	(
	TENANT_KEY
,SUB_GROUP_NAME
,ERROR_MSG)
	SELECT 
	 @TENANT_KEY		--TENANT_KEY
	,'WSOL_SCHEDULE'	--SUB_GROUP_NAME
	,@MSG1				--ERROR_MSG
	--===========================
	GOTO EARLY_EXIT
	--===========================
END
ELSE BEGIN
	
	INSERT INTO YZ_TB_ERRORS_FOUND
	(
	TENANT_KEY
,SUB_GROUP_NAME
,ERROR_MSG)
	SELECT 
	 @TENANT_KEY		--TENANT_KEY
	,'WSOL_SCHEDULE'	--SUB_GROUP_NAME
	,''					--ERROR_MSG			-- *** NEVER MAKE THIS @MSG1 !!!  MUST BE SET TO '' ***
END


--===========================================================================================================
-- GROUP DATA BY ACL & AGENT & DATE
--===========================================================================================================
DELETE FROM WSOL_TB_IMPORTS_DAILY_SCHEDULE_2

INSERT INTO WSOL_TB_IMPORTS_DAILY_SCHEDULE_2
(FF_OFFICIAL_ACL_NAME
,FF_ROLE
,FF_FIELD_MAP_ID
,FF_EMAIL
,FF_AGENT_NAME
,FF_SCHEDULED_HOURS
,FF_WORKED_HOURS
,FF_CANCELLED_HOURS
,FF_CANCELLED_PERCENT
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,[DATETIME]
,STD_TENANT_START_DATE_TIME_KEY
,TENANT_NAME
,OFFICIAL_ACL_NAME
,[ROLE]
,FIELD_MAP_ID
,EMAIL
,AGENT_NAME
,SCHEDULED_HOURS
,SCHEDULED_AFTER_CANCELLATION_HOURS
,CANCELLED_HOURS
,CANCELLED_PERCENT
)
SELECT
 MAX(W1.FF_OFFICIAL_ACL_NAME)						AS FF_OFFICIAL_ACL_NAME
,MAX(W1.FF_ROLE)									AS FF_ROLE
,MAX(W1.FF_FIELD_MAP_ID)							AS FF_FIELD_MAP_ID
,MAX(W1.FF_EMAIL)									AS FF_EMAIL
,MAX(W1.FF_AGENT_NAME)								AS FF_AGENT_NAME
,SUM(CAST(W1.FF_SCHEDULED_HOURS AS DECIMAL (10,2)))	AS FF_SCHEDULED_HOURS
,SUM(CAST(W1.FF_WORKED_HOURS	AS DECIMAL (10,2)))	AS FF_WORKED_HOURS
,SUM(CAST(W1.FF_CANCELLED_HOURS	AS DECIMAL (10,2)))	AS FF_CANCELLED_HOURS
,CASE WHEN SUM(CAST(W1.FF_SCHEDULED_HOURS AS DECIMAL (10,2))) = 0.00 THEN 0.00
	  ELSE SUM(CAST(W1.FF_CANCELLED_HOURS AS DECIMAL (10,2))) / SUM(CAST(W1.FF_SCHEDULED_HOURS AS DECIMAL (10,2)))
 END												AS FF_CANCELLED_PERCENT

,MAX(W1.SEQNO_ADDED_TIME)			AS SEQNO_ADDED_TIME
,MIN(W1.SEQNO)						AS SEQNO
,MAX(W1.FTP_FILE_NAME)				AS FTP_FILE_NAME

,MAX(W1.DATETIME)					AS [DATETIME]
,W1.STD_TENANT_START_DATE_TIME_KEY	AS STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_NAME						AS TENANT_NAME
,W1.OFFICIAL_ACL_NAME				AS OFFICIAL_ACL_NAME
,MAX(W1.ROLE)						AS [ROLE]
,W1.FIELD_MAP_ID					AS FIELD_MAP_ID
,W1.EMAIL							AS [EMAIL]
,W1.AGENT_NAME						AS AGENT_NAME

,SUM(ISNULL(W1.SCHEDULED_HOURS						,0.00))	AS SCHEDULED_HOURS
,SUM(ISNULL(W1.SCHEDULED_AFTER_CANCELLATION_HOURS	,0.00))	AS SCHEDULED_AFTER_CANCELLATION_HOURS
,SUM(ISNULL(W1.CANCELLED_HOURS						,0.00))	AS CANCELLED_HOURS
,CASE WHEN SUM(ISNULL(W1.SCHEDULED_HOURS ,0.00)) = 0.00 THEN 0.00
	  ELSE SUM(ISNULL(W1.CANCELLED_HOURS ,0.00)) / SUM(ISNULL(W1.SCHEDULED_HOURS ,0.00))
 END														AS CANCELLED_PERCENT

FROM            WSOL_TB_IMPORTS_DAILY_SCHEDULE_1  W1

GROUP BY
 W1.STD_TENANT_START_DATE_TIME_KEY
,W1.TENANT_NAME
,W1.OFFICIAL_ACL_NAME
,W1.FIELD_MAP_ID
,W1.EMAIL
,W1.AGENT_NAME

ORDER BY
 MIN(W1.SEQNO)

--=================================================================================================
-- UPDATE PERMANENT TABLE IF RECORD ALREADY EXISTS
--=================================================================================================
UPDATE WSOL_TB_IMPORTS_DAILY_SCHEDULE SET
 FF_OFFICIAL_ACL_NAME				= W2.FF_OFFICIAL_ACL_NAME
,FF_ROLE							= W2.FF_ROLE
,FF_FIELD_MAP_ID					= W2.FF_FIELD_MAP_ID
,FF_EMAIL							= W2.FF_EMAIL
,FF_AGENT_NAME						= W2.FF_AGENT_NAME
,FF_SCHEDULED_HOURS					= W2.FF_SCHEDULED_HOURS
,FF_WORKED_HOURS					= W2.FF_WORKED_HOURS
,FF_CANCELLED_HOURS					= W2.FF_CANCELLED_HOURS
,FF_CANCELLED_PERCENT				= W2.FF_CANCELLED_PERCENT

,SEQNO_ADDED_TIME					= W2.SEQNO_ADDED_TIME
,SEQNO								= W2.SEQNO
,FTP_FILE_NAME						= W2.FTP_FILE_NAME

,[DATETIME]							= W2.[DATETIME]
--,STD_TENANT_START_DATE_TIME_KEY	= W2.STD_TENANT_START_DATE_TIME_KEY
--,TENANT_NAME						= W2.TENANT_NAME
--,OFFICIAL_ACL_NAME				= W2.OFFICIAL_ACL_NAME
,[ROLE]								= W2.[ROLE]
--,FIELD_MAP_ID						= W2.FIELD_MAP_ID
,[EMAIL]							= W2.[EMAIL]
,AGENT_NAME							= W2.AGENT_NAME
,SCHEDULED_HOURS					= W2.SCHEDULED_HOURS
,SCHEDULED_AFTER_CANCELLATION_HOURS	= W2.SCHEDULED_AFTER_CANCELLATION_HOURS
,CANCELLED_HOURS					= W2.CANCELLED_HOURS
,CANCELLED_PERCENT					= W2.CANCELLED_PERCENT

--,WS_ROW_CREATED_TIME				= NULL
,WS_ROW_UPDATED_TIME				= @WS_ROW_CREATED_TIME

--  SELECT *
FROM            WSOL_TB_IMPORTS_DAILY_SCHEDULE_2  W2
INNER JOIN      WSOL_TB_IMPORTS_DAILY_SCHEDULE    G   ON G.STD_TENANT_START_DATE_TIME_KEY	= W2.STD_TENANT_START_DATE_TIME_KEY
													 AND G.TENANT_NAME						= W2.TENANT_NAME
													 AND G.OFFICIAL_ACL_NAME				= W2.OFFICIAL_ACL_NAME
													 AND G.FIELD_MAP_ID						= W2.FIELD_MAP_ID

WHERE G.STD_TENANT_START_DATE_TIME_KEY	= W2.STD_TENANT_START_DATE_TIME_KEY
  AND G.TENANT_NAME						= W2.TENANT_NAME
  AND G.OFFICIAL_ACL_NAME				= W2.OFFICIAL_ACL_NAME
  AND G.FIELD_MAP_ID					= W2.FIELD_MAP_ID

--=================================================================================================
-- INSERT INTO PERMANENT TABLE IF RECORD DOES NOT EXIST
--=================================================================================================
INSERT INTO WSOL_TB_IMPORTS_DAILY_SCHEDULE
(
FF_OFFICIAL_ACL_NAME
,FF_ROLE
,FF_FIELD_MAP_ID
,FF_EMAIL
,FF_AGENT_NAME
,FF_SCHEDULED_HOURS
,FF_WORKED_HOURS
,FF_CANCELLED_HOURS
,FF_CANCELLED_PERCENT
,SEQNO_ADDED_TIME
,SEQNO
,FTP_FILE_NAME
,[DATETIME]
,STD_TENANT_START_DATE_TIME_KEY
,TENANT_NAME
,OFFICIAL_ACL_NAME
,[ROLE]
,FIELD_MAP_ID
,EMAIL
,AGENT_NAME
,SCHEDULED_HOURS
,SCHEDULED_AFTER_CANCELLATION_HOURS
,CANCELLED_HOURS
,CANCELLED_PERCENT
,WS_ROW_CREATED_TIME
,WS_ROW_UPDATED_TIME
)
SELECT
 W2.FF_OFFICIAL_ACL_NAME
,W2.FF_ROLE
,W2.FF_FIELD_MAP_ID
,W2.FF_EMAIL
,W2.FF_AGENT_NAME
,W2.FF_SCHEDULED_HOURS
,W2.FF_WORKED_HOURS
,W2.FF_CANCELLED_HOURS
,W2.FF_CANCELLED_PERCENT

,W2.SEQNO_ADDED_TIME
,W2.SEQNO
,W2.FTP_FILE_NAME

,W2.[DATETIME]
,W2.STD_TENANT_START_DATE_TIME_KEY
,W2.TENANT_NAME
,W2.OFFICIAL_ACL_NAME
,W2.ROLE
,W2.FIELD_MAP_ID
,W2.EMAIL
,W2.AGENT_NAME
,W2.SCHEDULED_HOURS
,W2.SCHEDULED_AFTER_CANCELLATION_HOURS
,W2.CANCELLED_HOURS
,W2.CANCELLED_PERCENT

,@WS_ROW_CREATED_TIME
,NULL

FROM            WSOL_TB_IMPORTS_DAILY_SCHEDULE_2  W2

LEFT JOIN       WSOL_TB_IMPORTS_DAILY_SCHEDULE    G   ON G.STD_TENANT_START_DATE_TIME_KEY	= W2.STD_TENANT_START_DATE_TIME_KEY
													 AND G.TENANT_NAME						= W2.TENANT_NAME
													 AND G.OFFICIAL_ACL_NAME				= W2.OFFICIAL_ACL_NAME
													 AND G.FIELD_MAP_ID						= W2.FIELD_MAP_ID

WHERE (G.OFFICIAL_ACL_NAME				IS NULL AND ISNULL(W2.OFFICIAL_ACL_NAME				,'') <> '' )
  AND (G.TENANT_NAME					IS NULL AND ISNULL(W2.TENANT_NAME					,'') <> '' )
  AND (G.FIELD_MAP_ID					IS NULL AND ISNULL(W2.FIELD_MAP_ID					,'') <> '' )
  AND (G.STD_TENANT_START_DATE_TIME_KEY	IS NULL AND ISNULL(W2.STD_TENANT_START_DATE_TIME_KEY, 0) <> 0  )

--=============================================
EARLY_EXIT:
--=============================================